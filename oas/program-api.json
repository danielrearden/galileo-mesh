{
  "openapi": "3.0.0",
  "paths": {
    "/getTransHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get Transaction History",
        "description": "Returns a list of transactions that occurred during a specified time period. This method can include transactions made on all cards related to the account or only those on the supplied card number/PRN. As a configuration option, transaction filtering can be enabled so that transaction types can be filtered from the method response by the 'act_type' transaction type.\n\n**Recordset Paging**\nLarge data sets can be retrieved using recordset paging. A maximum date range of three years (1095 days) is allowed. When retrieving a large data set, pass the number of records desired (500 per page maximum) as the 'recordCnt' parameter value. Each response will include the total number of records found related to the date range as 'total_record_count'. The number of pages available will be returned as 'number_of_pages'. The current page being returned is communicated simply as 'page'. The API consumer can request the different pages of the recordset by passing the desired page number as the 'page' parameter.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "recordCnt": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value in the range of `1` and `99999`.\nExample: `100`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 99999,
                    "default": 400,
                    "x-nullable": true
                  },
                  "page": {
                    "description": "The page number to be retrieved in the context of recordset paging.\nPattern: Integer value of `1` or greater.\nExample: `3`",
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "x-nullable": true
                  },
                  "includeRelated": {
                    "description": "If a secondary account is used and 1 is passed in includeRelated then all shared balance account transactions will be returned. Otherwise only client shared balance account transactions are returned. For non-secondary accounts all shared balance account transactions are returned by default.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ]
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "operationId": "post_gettranshistory"
      }
    },
    "/getBalance": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBalanceResponse"
                }
              }
            }
          }
        },
        "summary": "Get Balance",
        "description": "Returns the balance of the account.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getbalance"
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_getbalance"
      }
    },
    "/getAuthHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuthHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get Authorization History",
        "description": "Returns a list of unsettled authorization transactions made on an account during a specified period. This method can include authorizations made to all cards related to the account, or only those on the supplied card number/PRN.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^.+$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  },
                  "recordCnt": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value in the range of `1` and `99999`.\nExample: `100`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 99999,
                    "default": 400
                  },
                  "includeRelated": {
                    "description": "If a secondary account is used and 1 is passed in includeRelated then all shared balance account transactions will be returned. Otherwise only client shared balance account transactions are returned. For non-secondary accounts all shared balance account transactions are returned by default.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "boolean"
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "operationId": "post_getauthhistory"
      }
    },
    "/getAccountOverview": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountOverviewResponse"
                }
              }
            }
          }
        },
        "summary": "Get Account Overview",
        "description": "The getAccountOverview() method response contains combined response data of several other methods. The intent of this method is to give a wide range of information that would be of use in situation like a landing dashboard after customer login.\n\nThe following categories or data sets are available in the getAccountOverview() response:\n* General account information (balance, status, application date).\n* Cardholder profile data.\n* Posted transactions.\n* Pending card authorizations.\n* Pending fees (generally because of insufficient funds).\n* Savings interest data. This is only applicable if an associated savings account exists. If no savings account exists, a unary 'savings_interest' element will be returned.\n\n**Note** Transactions created by createPayment and createAdjustment will not be visible for at least several seconds.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^.+$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_getaccountoverview"
      }
    },
    "/createAccount": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          }
        },
        "summary": "Create Account",
        "description": "Creates a new account for instant issue, personalized, and secondary cards. It also allows the loading of funds to the card at the time of creation.\ncreateAccount() is a Payment Card Industry (PCI) compliance sensitive method. When the provider_params are enabled, it returns a PAN/cvv/expdate.\n\nNote: In the client validation (CV) environment specific names can be used in the createAccount() method (via the firstName, middleName, and lastName parameters) to trigger different CIP responses.\n* **John F Smith** can be used to trigger a **fail** on CIP\n* **John R Smith** triggers a **refer**\n* **John P Smith** is often used to **pass**, although any valid name other than the above two will pass\n\n**Duplicate Use of Customer ID**\nThe createAccount method can be configured to allow or disallow the duplicate use of customer ID. This configuration is set at the product level. If duplicate use of customer ID is disallowed, during the createAccount call the enrollment data is checked to confirm that there are no accounts in application submitted (V), canceled without refund (Z), or active (N) status. If no account is found in these statuses, the enrollment is allowed.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$|^\\d{15}$",
                    "x-nullable": true
                  },
                  "idType": {
                    "description": "See table below for valid ID types.\nPattern: 1-15\nExample: `2`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 15,
                    "x-nullable": true
                  },
                  "id": {
                    "description": "See table below for string patterns related to the different accepted ID types.\nPattern: See section on ID Types.\nExample: `\"123456789\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "idType2": {
                    "description": "See table below for string patterns related to the different accepted ID types.\nPattern: See section on ID Types.\nExample: `\"123456789\"`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 15,
                    "x-nullable": true
                  },
                  "id2": {
                    "description": "Unique identifier for a Cardholder, used for a secondary ID.\nPattern: See Customer ID Type section.\nExample: `\"123456789012|UT|12/25/2020\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "locale": {
                    "description": "Sets customer language preference. Default is \"en_US\".\nPattern: Accepted values = `en_US`, `es_US`, `fr_CA`, and `en_CA`\nExample: `\"en_US\"`",
                    "type": "string",
                    "enum": [
                      "en_US",
                      "es_US",
                      "en_CA",
                      "fr_CA"
                    ],
                    "x-nullable": true
                  },
                  "firstName": {
                    "description": "Cardholder's first name\nPattern: 1-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"Ed\"`",
                    "type": "string",
                    "minimum": 1,
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "middleName": {
                    "description": "Cardholder's middle name\nPattern: 1-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"W\"`",
                    "type": "string",
                    "minimum": 1,
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "lastName": {
                    "description": "Cardholder's last name\nPattern: 2-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"Harley\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "dateOfBirth": {
                    "description": "Cardholder's birth date\nPattern: `YYYY-MM-DD`, minimum age per the business rules for the program.\nExample: `\"1980-01-01\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "address1": {
                    "description": "Cardholder's address line 1.\nPattern: Maximum length -- 40 characters. Cannot be a P.O. Box.\nExample: `\"33 Maple Street\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "address2": {
                    "description": "Cardholder's address line 2.\nPattern: Maximum length of 30 characters.\nExample: `\"#4B\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "city": {
                    "description": "Cardholder's city\nPattern: Letters and spaces, maximum length 30 characters.\nExample: `\"Salt Lake City\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 30,
                    "pattern": "^[A-Za-z][\\w\\s\\'-\\.]*$",
                    "x-nullable": true
                  },
                  "state": {
                    "description": "Cardholder's state\nPattern: Valid 2 character state abbreviation.\nExample: `\"UT\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 3,
                    "pattern": "^[a-zA-Z]*$",
                    "x-nullable": true
                  },
                  "postalCode": {
                    "description": "Cardholder's postal code (zip code)\nPattern: `12345` or `12345-1234` (US), `K1A-1A1` (CA)\nExample: `\"84121\"`",
                    "type": "string",
                    "minimum": 5,
                    "maximum": 10,
                    "pattern": "^[a-zA-Z0-9\\-\\ ]*$",
                    "x-nullable": true
                  },
                  "countryCode": {
                    "description": "Three digit ISO numeric UN M49 country code; Example USA=840, Canada=124.\nPattern: Three digit country code.\nExample: `\"840\"`",
                    "type": "string",
                    "pattern": "^\\d{3}$",
                    "x-nullable": true
                  },
                  "primaryPhone": {
                    "description": "Cardholder's primary phone number\nPattern: Valid phone number\nExample: `\"8013656050\"`",
                    "type": "string",
                    "minimum": 10,
                    "maximum": 10,
                    "pattern": "[0-9]+",
                    "x-nullable": true
                  },
                  "otherPhone": {
                    "description": "Cardholder's other phone number\nPattern: Valid phone number\nExample: `\"8013656050\"`",
                    "type": "string",
                    "minimum": 10,
                    "maximum": 10,
                    "pattern": "[0-9]+",
                    "x-nullable": true
                  },
                  "mobilePhone": {
                    "description": "Cardholder's mobile phone number\nPattern: Valid phone number\nExample: `\"8013656050\"`",
                    "type": "string",
                    "minimum": 10,
                    "maximum": 10,
                    "pattern": "[0-9]+",
                    "x-nullable": true
                  },
                  "email": {
                    "description": "Cardholder's email\nPattern: Email Address\nExample: `\"user@fakedomain.com\"`",
                    "type": "string",
                    "format": "email",
                    "x-nullable": true
                  },
                  "prodId": {
                    "description": "Product ID\nPattern: Integer\nExample: `501`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 100000000
                  },
                  "loadAmount": {
                    "description": "Currency amounts passed as whole or fractional amounts. Initial load amount on card must be within product load limits or designated amount for Instant Issue card.\nPattern: Integer\nExample: `100.00`, `100`, or `100.73`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "x-nullable": true
                  },
                  "loadType": {
                    "description": "Payment types are configurable per client. Contact your account representative to determine which types you have implemented. If no loadType value is specified, the default loadType value RL will be used.\nPattern: 2 characters\nExample: `\"RL\"`",
                    "type": "string",
                    "maximum": 2,
                    "pattern": "^[a-zA-Z0-9]*$",
                    "x-nullable": true
                  },
                  "externalAccountId": {
                    "description": "Identifier external to the Galileo platform to be stored and associated with the respective account.\nPattern: Letters and numbers, maximum length 30 characters.\nExample: `\"553b45sbs\"`",
                    "type": "string",
                    "maximum": 30,
                    "pattern": "^[a-zA-Z0-9\\-]*$",
                    "x-nullable": true
                  },
                  "primaryAccount": {
                    "description": "PAN (16 digit card number) or PRN (12 digit account identifier) of the primary account a secondary account is to be associated with. This is only necessary when creating a secondary card.\nPattern: `PAN` or `PRN`\nExample: `\"123456789012\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$",
                    "x-nullable": true
                  },
                  "sharedBalance": {
                    "description": "Define whether or not an additional account will share the balance with the primary. Should never be set to a value of 1 if the primaryAccount is not passed. 0=false, 1=true\nPattern: `0` or `1`\nExample: `1`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  },
                  "userData": {
                    "description": "Identifier external to Galileo platform to be stored and associated with the respective account. The most common usage of this parameter has been tracking the identity of affiliate marketing traffic.\nPattern: Letters, numbers and spaces. Maximum length of 50 characters.\nExample: `\"a4434gg44\"`",
                    "type": "string",
                    "maximum": 50,
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "x-nullable": true
                  },
                  "verifyOnly": {
                    "description": "If a value of `1` is passed, the parameter data will be tested only. No transaction will be committed.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  },
                  "cipStatus": {
                    "description": "0 or empty=Run CIP as normally configured, 1=Capture enrollment data and run CIP -- do not create account, 2=Process as normal -- do not run CIP (even if CIP processing is enabled).\nPattern: `0`, `1`, or `2`\nExample: `\"0\"`",
                    "type": "string",
                    "enum": [
                      "0",
                      "1",
                      "2"
                    ],
                    "x-nullable": true
                  },
                  "embossLine2": {
                    "description": "Second line card emboss text.\nPattern: Alphanumeric 0-28 characters in length, \"-\" allowed.\nExample: `\"second emboss line\"`",
                    "type": "string",
                    "maximum": 28,
                    "pattern": "^[\\d\\w\\s\\'\"!\\?\\-]*$",
                    "x-nullable": true
                  },
                  "loadFromAccountNo": {
                    "description": "Same as accountNo in validation. This parameter is used when loading the account at the time of creation and wanting loaded funds to be transferred from another account within the same card program.\nPattern: `PAN` or `PRN`\nExample: `\"123456789012\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$",
                    "x-nullable": true
                  },
                  "sweepDate": {
                    "description": "If provided, sweepDate specifies the last date that a daily sweep should be performed. If daily account sweeping is not configured for your product/program, this parameter can be ignored.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "expressMail": {
                    "description": "Legacy values of Y or N were used to determine express shipping of new card. 'Y' maps to '2' and 'N' maps to '1'. 0-9 were added to allow for additional express shipping options. Values should only be used that are supported by the emboss vendor for the program.\nPattern: `Y`, `N`, or `0`-`9`\nExample: `\"1\"`",
                    "type": "string",
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "N",
                      "Y"
                    ],
                    "x-nullable": true
                  },
                  "shipToAddressPermanent": {
                    "description": "1=make a ship to address Permanent.\nPattern: `1` or `0`\nExample: `\"1\"`",
                    "type": "string",
                    "pattern": "^(1|0)$",
                    "x-nullable": true
                  },
                  "shipToAddress1": {
                    "description": "Ship to address line 1.\nPattern: Maximum length -- 30 characters\nExample: `\"33 business parkway\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "shipToAddress2": {
                    "description": "Ship to address line 2.\nPattern: Maximum length -- 30 characters\nExample: `\"Suite 400\"`",
                    "type": "string",
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "shipToCity": {
                    "description": "Ship to city.\nPattern: Maximum length -- 30 characters\nExample: `\"Salt Lake City\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 20,
                    "pattern": "^[A-Za-z][\\w\\s\\'-]*$",
                    "x-nullable": true
                  },
                  "shipToState": {
                    "description": "Ship to state.\nPattern: Valid 2 character state or province abbreviation.\nExample: `\"UT\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 3,
                    "pattern": "^[a-zA-Z]*$",
                    "x-nullable": true
                  },
                  "shipToPostalCode": {
                    "description": "Ship to postal code (zip code).\nPattern: Valid postal code\nExample: `\"841213333\"`",
                    "type": "string",
                    "minimum": 5,
                    "maximum": 10,
                    "pattern": "^[a-zA-Z0-9\\-\\ ]*$",
                    "x-nullable": true
                  },
                  "shipToCountryCode": {
                    "description": "3 digit ISO numeric UN M49 country code; Example USA=840, Canada=124.\nPattern: Three digit country code\nExample: `\"840\"`",
                    "type": "string",
                    "pattern": "^\\d{3}$",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "prodId"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_createaccount"
      }
    },
    "/getAccountCards": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountCardsResponse"
                }
              }
            }
          }
        },
        "summary": "Get Account Cards",
        "description": "The getAccountCards() method returns a recordset that includes the customer's profile information and all accounts and cards that associated with that customer. All accounts and cards are included, regardless of status. Sensitive parameters can be partially returned or removed by configuration based on the API consumer's needs and PCI posture.\n\ngetAccountCards() is a PCI-compliance sensitive method. When the provider_params are enabled it returns a PAN.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "includeRelated": {
                    "description": "Default is true; 0=false, 1=true\nPattern: `0` or `1`\nExample: `\"1\"`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "Cards"
        ],
        "operationId": "post_getaccountcards"
      }
    },
    "/modifyStatus": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyStatusResponse"
                }
              }
            }
          }
        },
        "summary": "Modify Account or Card Status",
        "description": "Modifies the status of an account, card, or both.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^.+$"
                  },
                  "type": {
                    "description": "Reflects the account and card's current status before modification. See the Account and card status table below.\nPattern: Predefined integer value range\nExample: `2`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "startDate": {
                    "description": "Only used with type=17 (freeze card). Note: if startDate and endDate are not passed with type=17then the current datetime is used for the startDate.\nPattern: `YYYY-MM-DD HH:MM:SS`\nExample: `\"2020-02-02 12:22:02\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "endDate": {
                    "description": "Only used with type=17 (freeze card). Note: if startDate and endDate are not passed with type=17 then 24 hours out from the current datetime is used for the endDate.\nPattern: `YYYY-MM-DD HH:MM:SS`\nExample: `\"2020-02-12 10:00:00\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "bypassRepFee": {
                    "description": "Defines if the repfee will be bypassed. Y=Yes, N=No\nPattern: `Y` or `N`\nExample: `\"Y\"`",
                    "type": "string",
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "type"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_modifystatus"
      }
    },
    "/addAccount": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAccountResponse"
                }
              }
            }
          }
        },
        "summary": "Add Account",
        "description": "The addAccount() method can be used to add accounts (products) such as savings, overdraft, virtual (no card), virtual card, or personalized for a customer.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "prodId": {
                    "description": "Product ID\nPattern: Integer\nExample: `\"501\"`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 100000000
                  },
                  "sharedBalance": {
                    "description": "Define whether or not an additional account will share the balance with the primary. Should never be set to a value of 1 if the primaryAccount is not passed. 0=false, 1=true\nPattern: `0` or `1`\nExample: `1`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  },
                  "addAsPrimary": {
                    "description": "Define whether or not the added account will be a primary account. 0=false, 1=true\nPattern: `0` or `1`\nExample: `1`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "prodId"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_addaccount"
      }
    },
    "/updateAccount": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAccountResponse"
                }
              }
            }
          }
        },
        "summary": "Update Account",
        "description": "Updates the cardholder's personal information for an existing account. Only required parameters and parameters to be modified must be provided. Parameters that are not being modified can be left blank.\n\n**Nullifying Data Elements**\nThe following updateAccount() parameters allow for the value 'null' to passed: firstName, middleName, lastName, address1, address2, city, state, postalCode, primaryPhone, otherPhone, mobilePhone, webUid, secretQuestion, secretAnswer, and mailBounced. When passing the string 'null' as the value for any of the above parameters, the respective account data element will be updated to a value of null. A provider configuration is required for nullifying customer email address.\n\n**Updating Customer ID**\nPrimary customer ID (id, idType) can conditionally updated with the updateAccount() method. Primary ID (id, idType) can be updated as long as the respective customer account has not passed CIP. Secondary customer ID can be updated regardless of customer CIP status.\n\n**Updating Ship-To Address**\nWhen updating the ship-to address for a customer the elements shipToAddress1, shipToCity, shipToState, and shipToPostalCode are required. The shipToAddress2 is optional. The current customer ship-to address data can be retrieved in the getAccountCards() method call. This value should be passed before any new card is to be sent to that address. The shipto address is only used for the next shipment, and not subsequent shipments. In the United States for compliance, you must maintain a physical address for the cardholder and the primary address. Shipto is designed for temporary use for a card.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$|^\\d{15}$",
                    "x-nullable": true
                  },
                  "idType": {
                    "description": "See table below for valid ID types.\nPattern: 1-15\nExample: `2`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 15,
                    "x-nullable": true
                  },
                  "id": {
                    "description": "See table below for string patterns related to the different accepted ID types.\nPattern: See section on ID Types.\nExample: `\"123456789\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "idType2": {
                    "description": "See table below for string patterns related to the different accepted ID types.\nPattern: See section on ID Types.\nExample: `\"123456789\"`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 15,
                    "x-nullable": true
                  },
                  "id2": {
                    "description": "Unique identifier for a Cardholder, used for a secondary ID.\nPattern: See Customer ID Type section.\nExample: `\"123456789012|UT|12/25/2020\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "locale": {
                    "description": "Sets customer language preference. Default is \"en_US\".\nPattern: Accepted values = `en_US`, `es_US`, `fr_CA`, and `en_CA`\nExample: `\"en_US\"`",
                    "type": "string",
                    "enum": [
                      "en_US",
                      "es_US",
                      "en_CA",
                      "fr_CA"
                    ],
                    "x-nullable": true
                  },
                  "firstName": {
                    "description": "Cardholder's first name\nPattern: 1-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"Ed\"`",
                    "type": "string",
                    "minimum": 1,
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "middleName": {
                    "description": "Cardholder's middle name\nPattern: 1-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"W\"`",
                    "type": "string",
                    "minimum": 1,
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "lastName": {
                    "description": "Cardholder's last name\nPattern: 2-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"Harley\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "dateOfBirth": {
                    "description": "Cardholder's birth date\nPattern: `YYYY-MM-DD`, minimum age per the business rules for the program.\nExample: `\"1980-01-01\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "address1": {
                    "description": "Cardholder's address line 1.\nPattern: Maximum length -- 40 characters. Cannot be a P.O. Box.\nExample: `\"33 Maple Street\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "address2": {
                    "description": "Cardholder's address line 2.\nPattern: Maximum length of 30 characters.\nExample: `\"#4B\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "city": {
                    "description": "Cardholder's city\nPattern: Letters and spaces, maximum length 30 characters.\nExample: `\"Salt Lake City\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 30,
                    "pattern": "^[A-Za-z][\\w\\s\\'-\\.]*$",
                    "x-nullable": true
                  },
                  "state": {
                    "description": "Cardholder's state\nPattern: Valid 2 character state abbreviation.\nExample: `\"UT\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 3,
                    "pattern": "^[a-zA-Z]*$",
                    "x-nullable": true
                  },
                  "postalCode": {
                    "description": "Cardholder's postal code (zip code)\nPattern: `12345` or `12345-1234` (US), `K1A-1A1` (CA)\nExample: `\"84121\"`",
                    "type": "string",
                    "minimum": 5,
                    "maximum": 10,
                    "pattern": "^[a-zA-Z0-9\\-\\ ]*$",
                    "x-nullable": true
                  },
                  "countryCode": {
                    "description": "Three digit ISO numeric UN M49 country code; Example USA=840, Canada=124.\nPattern: Three digit country code.\nExample: `\"840\"`",
                    "type": "string",
                    "pattern": "^\\d{3}$",
                    "x-nullable": true
                  },
                  "primaryPhone": {
                    "description": "Cardholder's primary phone number\nPattern: Valid phone number\nExample: `\"8013656050\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "otherPhone": {
                    "description": "Cardholder's other phone number\nPattern: Valid phone number\nExample: `\"8013656050\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "mobilePhone": {
                    "description": "Cardholder's mobile phone number\nPattern: Valid phone number\nExample: `\"8013656050\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "email": {
                    "description": "Cardholder's email.\nPattern: Email address. + (plus sign) allowed.\nExample: `\"user@fakedomain.com\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "shipToAddress1": {
                    "description": "Ship to address line 1.\nPattern: Maximum length -- 30 characters\nExample: `\"33 business parkway\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "shipToAddress2": {
                    "description": "Ship to address line 2.\nPattern: Maximum length -- 30 characters\nExample: `\"Suite 400\"`",
                    "type": "string",
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "shipToCity": {
                    "description": "Ship to city.\nPattern: Maximum length -- 30 characters\nExample: `\"Salt Lake City\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 20,
                    "pattern": "^[A-Za-z][\\w\\s\\'-]*$",
                    "x-nullable": true
                  },
                  "shipToState": {
                    "description": "Ship to state.\nPattern: Valid 2 character state or province abbreviation.\nExample: `\"UT\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 3,
                    "pattern": "^[a-zA-Z]*$",
                    "x-nullable": true
                  },
                  "shipToPostalCode": {
                    "description": "Ship to postal code (zip code).\nPattern: Valid postal code\nExample: `\"841213333\"`",
                    "type": "string",
                    "minimum": 5,
                    "maximum": 10,
                    "pattern": "^[a-zA-Z0-9\\-\\ ]*$",
                    "x-nullable": true
                  },
                  "shipToCountryCode": {
                    "description": "3 digit ISO numeric UN M49 country code; Example USA=840, Canada=124.\nPattern: Three digit country code\nExample: `\"840\"`",
                    "type": "string",
                    "pattern": "^\\d{3}$",
                    "x-nullable": true
                  },
                  "shipToAddressPermanent": {
                    "description": "1=make a ship to address Permanent.\nPattern: `0` or `1`\nExample: `\"1\"`",
                    "type": "string",
                    "pattern": "^(1|0)$",
                    "x-nullable": true
                  },
                  "externalAccountId": {
                    "description": "Identifier external to the Galileo platform to be stored and associated with the respective account.\nPattern: Letters and numbers, maximum length 30 characters.\nExample: `\"553b45sbs\"`",
                    "type": "string",
                    "maximum": 30,
                    "pattern": "^[a-zA-Z0-9\\-]*$"
                  },
                  "embossLine2": {
                    "description": "Second line card emboss text.\nPattern: Alphanumeric 0-28 characters in length, \"-\" allowed.\nExample: `\"second emboss line\"`",
                    "type": "string",
                    "maximum": 28,
                    "pattern": "^[\\d\\w\\s\\'\"!\\?\\-]*$",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_updateaccount"
      }
    },
    "/createAchTransaction": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateACHTransactionResponse"
                }
              }
            }
          }
        },
        "summary": "Create ACH Transaction",
        "description": "Initiate an ACH transfer from a customer account to a pre-defined bank account. The pre-defined bank account could be added via the addAchAccount() end point.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "achAccountId": {
                    "description": "Numeric identifier for ACH accounts. This identifier is returned in both the addAchAccount() and getAchAccounts() methods.\nPattern: Positive integer value\nExample: `354656`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0.01
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01
                  },
                  "description": {
                    "description": "Optional description of the ACH transfer. 30 characters or less.\nPattern: Alphanumeric and punctuation\nExample: `One time payroll load.`",
                    "type": "string",
                    "pattern": "^[\\w\\W\\s\\d]{1,30}$",
                    "x-nullable": true
                  },
                  "debitCreditIndicator": {
                    "description": "If no value is passed the default value of `D` for a debit transaction is assumed. C=Credit, D=Debit\nPattern: `D` or `C`\nExample: `D`",
                    "type": "string",
                    "enum": [
                      "C",
                      "D"
                    ]
                  },
                  "sameDay": {
                    "description": "Determines whether same day will be applied\nPattern: `Y` or `N`\nExample: `Y`",
                    "type": "string",
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "x-nullable": true
                  },
                  "postImmediate": {
                    "description": "Determines whether imediate post will be applied\nPattern: `Y` or `N`\nExample: `Y`",
                    "type": "string",
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "x-nullable": true
                  },
                  "identNumber": {
                    "description": "Identifier number\nPattern: 1 to 15 characters in length\nExample: `\"123456789\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15,
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "x-nullable": true
                  },
                  "processorToken": {
                    "description": "Obtained from Plaid if using Galileo + Plaid integration. This token may be used as a replacement for achAccountNumber, achRoutingNumber, name, and type as that data is obtained directly from Plaid.\nPattern: String\nExample: `\"processor-production-35cd43b-adfc-d8aa-b331-c9ba0fdha881\"`",
                    "type": "string",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "achAccountId",
                  "amount",
                  "debitCreditIndicator"
                ]
              }
            }
          }
        },
        "tags": [
          "ACH"
        ],
        "operationId": "post_createachtransaction"
      }
    },
    "/addPaperBiller": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPaperBillerResponse"
                }
              }
            }
          }
        },
        "summary": "Add Paper Biller",
        "description": "Enables the API consumer to create a custom paper biller for a cardholder, as well as schedule paper bill payments.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "billerName": {
                    "description": "Biller's name\nPattern: Alphanumeric string of up to 50 characters (no punctuation allowed).\nExample: `\"My Landlord\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "billerAddress1": {
                    "description": "Biller's address line 1.\nPattern: Maximum length -- 80 characters.\nExample: `\"33 Maple Street\"`",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 80,
                    "pattern": "^[A-Za-z0-9 \\/\\|_\\-@\\.,'\\#\\(\\)&amp;]*$",
                    "x-nullable": true
                  },
                  "billerAddress2": {
                    "description": "Biller's address line 2.\nPattern: Maximum length of 30 characters.\nExample: `\"#4B\"`",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 80,
                    "pattern": "^[A-Za-z0-9 \\/\\|_\\-@\\.,'\\#\\(\\)&amp;]*$",
                    "x-nullable": true
                  },
                  "billerCity": {
                    "description": "Biller's city\nPattern: Letters and spaces, maximum length 30 characters.\nExample: `\"Salt Lake City\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 60
                  },
                  "billerState": {
                    "description": "Biller's state\nPattern: Valid 2 character state abbreviation.\nExample: `\"UT\"`",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2,
                    "enum": [
                      "AL",
                      "AK",
                      "AZ",
                      "AR",
                      "CA",
                      "CO",
                      "CT",
                      "DE",
                      "DC",
                      "FL",
                      "GA",
                      "HI",
                      "ID",
                      "IL",
                      "IN",
                      "IA",
                      "KS",
                      "KY",
                      "LA",
                      "ME",
                      "MD",
                      "MA",
                      "MI",
                      "MN",
                      "MS",
                      "MO",
                      "MT",
                      "NE",
                      "NV",
                      "NH",
                      "NJ",
                      "NM",
                      "NY",
                      "NC",
                      "ND",
                      "OH",
                      "OK",
                      "OR",
                      "PA",
                      "RI",
                      "SC",
                      "SD",
                      "TN",
                      "TX",
                      "UT",
                      "VT",
                      "VA",
                      "WA",
                      "WV",
                      "WI",
                      "WY",
                      "AE",
                      "AP",
                      "AS",
                      "GU",
                      "MP",
                      "PR",
                      "VI",
                      "AB",
                      "BC",
                      "MB",
                      "NB",
                      "NL",
                      "NT",
                      "NS",
                      "NU",
                      "ON",
                      "PE",
                      "QC",
                      "SK",
                      "YT"
                    ]
                  },
                  "billerZip": {
                    "description": "Cardholder's postal code (zip code)\nPattern: `12345` or `12345-1234` (US), `K1A-1A1` (CA)\nExample: `\"84121\"`",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 10,
                    "pattern": "^[a-zA-Z0-9\\-\\ ]*$"
                  },
                  "billerPhone": {
                    "description": "Secret Answer\nPattern: Letters and spaces, maximum length of 50 characters.\nExample: `Larry`",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 10,
                    "pattern": "^[0-9]{10}$",
                    "x-nullable": true
                  },
                  "billerAccountNo": {
                    "description": "Must be valid biller account number. When applicable, the account number is validated against a biller-supplied mask.\nPattern: Alphanumeric string including hyphens and spaces.\nExample: `\"3333223323455555\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30,
                    "pattern": "^[A-Za-z0-9\\|_\\. '`\\?,!@$%#\\\"\\/\\-=]{1,30}$"
                  },
                  "frequencyType": {
                    "description": "O - Manual\nW - Weekly\nM - Monthly\nQ - Quarterly\nY - Yearly\nIf excluded will default to 'O'. If frequencyType is not 'O' then nextDate and endDate are also required parameters.\nPattern: Single character. One of: `O`, `W`, `M`, `Q`, `Y`\nExample: `\"W\"`",
                    "type": "string",
                    "enum": [
                      "O",
                      "W",
                      "M",
                      "Q",
                      "Y"
                    ],
                    "x-nullable": true
                  },
                  "nextDate": {
                    "description": "The next date that the payment is scheduled.\nPattern: `YYYY-MM-DD`\nExample: `\"2015-02-04\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "endDate": {
                    "description": "The next date that the payment is scheduled.\nPattern: `YYYY-MM-DD`\nExample: `\"2015-02-04\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01,
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "billerName",
                  "billerCity",
                  "billerState",
                  "billerZip",
                  "billerAccountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_addpaperbiller"
      }
    },
    "/modifyPaperBiller": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyPaperBillerResponse"
                }
              }
            }
          }
        },
        "summary": "Modify Paper Biller",
        "description": "The modifyPaperBiller() method can be used to modify scheduled payments with paper billers.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "billerId": {
                    "description": "A code assigned to the biller.\nPattern: Integer\nExample: `2982`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "frequencyType": {
                    "description": "O - Manual\nW - Weekly\nM - Monthly\nQ - Quarterly\nY - Yearly\nIf excluded will default to 'O'. If frequencyType is not 'O' then nextDate and endDate are also required parameters.\nPattern: Single character. One of: `O`, `W`, `M`, `Q`, `Y`\nExample: `\"W\"`",
                    "type": "string",
                    "enum": [
                      "O",
                      "W",
                      "M",
                      "Q",
                      "Y"
                    ],
                    "x-nullable": true
                  },
                  "nextDate": {
                    "description": "The next date that the payment is scheduled.\nPattern: `YYYY-MM-DD`\nExample: `\"2015-02-04\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "endDate": {
                    "description": "The next date that the payment is scheduled.\nPattern: `YYYY-MM-DD`\nExample: `\"2015-02-04\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01,
                    "x-nullable": true
                  },
                  "billerAddress1": {
                    "description": "Biller's address line 1.\nPattern: Maximum length -- 80 characters.\nExample: `\"33 Maple Street\"`",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 80,
                    "pattern": "^[A-Za-z0-9 \\/\\|_\\-@\\.,'\\#\\(\\)&amp;]*$",
                    "x-nullable": true
                  },
                  "billerAddress2": {
                    "description": "Biller's address line 2.\nPattern: Maximum length of 30 characters.\nExample: `\"#4B\"`",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 80,
                    "pattern": "^[A-Za-z0-9 \\/\\|_\\-@\\.,'\\#\\(\\)&amp;]*$",
                    "x-nullable": true
                  },
                  "billerCity": {
                    "description": "Biller's city\nPattern: Letters and spaces, maximum length 30 characters.\nExample: `\"Salt Lake City\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 60,
                    "x-nullable": true
                  },
                  "billerState": {
                    "description": "Biller's state\nPattern: Valid 2 character state abbreviation.\nExample: `\"UT\"`",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2,
                    "enum": [
                      "AL",
                      "AK",
                      "AZ",
                      "AR",
                      "CA",
                      "CO",
                      "CT",
                      "DE",
                      "DC",
                      "FL",
                      "GA",
                      "HI",
                      "ID",
                      "IL",
                      "IN",
                      "IA",
                      "KS",
                      "KY",
                      "LA",
                      "ME",
                      "MD",
                      "MA",
                      "MI",
                      "MN",
                      "MS",
                      "MO",
                      "MT",
                      "NE",
                      "NV",
                      "NH",
                      "NJ",
                      "NM",
                      "NY",
                      "NC",
                      "ND",
                      "OH",
                      "OK",
                      "OR",
                      "PA",
                      "RI",
                      "SC",
                      "SD",
                      "TN",
                      "TX",
                      "UT",
                      "VT",
                      "VA",
                      "WA",
                      "WV",
                      "WI",
                      "WY",
                      "AE",
                      "AP",
                      "AS",
                      "GU",
                      "MP",
                      "PR",
                      "VI",
                      "AB",
                      "BC",
                      "MB",
                      "NB",
                      "NL",
                      "NT",
                      "NS",
                      "NU",
                      "ON",
                      "PE",
                      "QC",
                      "SK",
                      "YT"
                    ],
                    "x-nullable": true
                  },
                  "billerZip": {
                    "description": "Cardholder's postal code (zip code)\nPattern: `12345` or `12345-1234` (US), `K1A-1A1` (CA)\nExample: `\"84121\"`",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 10,
                    "pattern": "^[a-zA-Z0-9\\-\\ ]*$",
                    "x-nullable": true
                  },
                  "billerPhone": {
                    "description": "Secret Answer\nPattern: Letters and spaces, maximum length of 50 characters.\nExample: `Larry`",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 10,
                    "pattern": "^[0-9]{10}$",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "billerId"
                ]
              }
            }
          }
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_modifypaperbiller"
      }
    },
    "/addRppsBiller": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddRPPSBillerResponse"
                }
              }
            }
          }
        },
        "summary": "Add RPPS Biller",
        "description": "Enables the API consumer to create Remote Payment and Presentment Service (RPPS) biller registrations for a respective customer, as well as schedule bill payments",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "rppsBillerId": {
                    "description": "Must be a valid Biller ID from the RPPS directory. The rppsBillerId must be zero padded and be 10 characters long. Example rpps biller ID 1234 would be formatted `0000001234`.\nPattern: Numeric string of 10 characters.\nExample: `\"0000001234\"`",
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10,
                    "pattern": "^[0-9]{10}$"
                  },
                  "billerAccountNo": {
                    "description": "Must be valid biller account number. When applicable, the account number is validated against a biller-supplied mask.\nPattern: Alphanumeric string including hyphens and spaces.\nExample: `\"3333223323455555\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30,
                    "pattern": "^[A-Za-z0-9\\|_\\. '`\\?,!@$%#\\\"\\/\\-=]{1,30}$"
                  },
                  "frequencyType": {
                    "description": "O - Manual\nW - Weekly\nM - Monthly\nQ - Quarterly\nY - Yearly\nIf excluded will default to 'O'. If frequencyType is not 'O' then nextDate and endDate are also required parameters.\nPattern: Single character. One of: `O`, `W`, `M`, `Q`, `Y`\nExample: `\"W\"`",
                    "type": "string",
                    "enum": [
                      "O",
                      "W",
                      "M",
                      "Q",
                      "Y"
                    ],
                    "x-nullable": true
                  },
                  "nextDate": {
                    "description": "The next date that the payment is scheduled.\nPattern: `YYYY-MM-DD`\nExample: `\"2015-02-04\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "endDate": {
                    "description": "The next date that the payment is scheduled.\nPattern: `YYYY-MM-DD`\nExample: `\"2015-02-04\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01,
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "rppsBillerId",
                  "billerAccountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_addrppsbiller"
      }
    },
    "/cancelBillPayment": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelBillPaymentResponse"
                }
              }
            }
          }
        },
        "summary": "Cancel Bill Payment",
        "description": "Cancel a bill payment transaction. Only paper transactions in a status of N, W, or P can be cancelled. All other statuses will result in a 435-02 error code being returned.\nElectronic bill payment transactions cannot be cancelled via API. Electronic bill payment transactions can be cancelled via the Customer Service Tool if they are in a status of N, W, or P.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "billpayTransactionId": {
                    "description": "This is the billpay_transaction_id XML element as returned by both the createBillPayment() and getBillPaymentHistory().\nPattern: Positive integer value\nExample: `3433443`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 9999999999
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "billpayTransactionId"
                ]
              }
            }
          }
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_cancelbillpayment"
      }
    },
    "/createBillPayment": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBillPaymentResponse"
                }
              }
            }
          }
        },
        "summary": "Create Bill Payment",
        "description": "Create a bill payment transaction related to an existing billing registration.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01
                  },
                  "billerId": {
                    "description": "Positive integer value of a customer configured biller. Biller IDs are retrieved using the getBillers() method.\nPattern: Positive integer value\nExample: `37323`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                  },
                  "processDate": {
                    "description": "Date in the future to process the payment.\nPattern: `YYYY-MM-DD`\nExample: `2016-01-01`",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                  },
                  "memo": {
                    "description": "Character string to be printed in the memo fields of printed paper checks.\nPattern: Alphanumeric including punctuation characters; up to 50 characters in length.\nExample: `For baby sitting`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[A-Za-z0-9&amp;|_. '?,!@$%#\"-=~]",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "amount",
                  "billerId"
                ]
              }
            }
          }
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_createbillpayment"
      }
    },
    "/getBillers": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBillersResponse"
                }
              }
            }
          }
        },
        "summary": "Get Billers",
        "description": "Get record set of billers configured for a given customer account.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getbalance"
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_getbillers"
      }
    },
    "/removeBiller": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveBillerResponse"
                }
              }
            }
          }
        },
        "summary": "Remove Biller",
        "description": "Allows for removing a Remote Payment and Presentment Service (RPPS) or paper biller.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "billerId": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value\nExample: `37323`",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "billerId"
                ]
              }
            }
          }
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_removebiller"
      }
    },
    "/getBillPayHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBillPayHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get Bill Payment History",
        "description": "Get a record set of customer bill payment transaction history.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "includeRelated": {
                    "description": "If a secondary account is used and 1 is passed in includeRelated then all shared balance account transactions will be returned. Otherwise only client shared balance account transactions are returned. For non-secondary accounts all shared balance account transactions are returned by default.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  },
                  "recordCnt": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value in the range of 1 and 99999.\nExample: `100`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 99999,
                    "default": 400,
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_getbillpayhistory"
      }
    },
    "/modifyRppsBiller": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyRPPSBillerResponse"
                }
              }
            }
          }
        },
        "summary": "Modify RPPS Biller",
        "description": "The modifyRppsBiller() method can be used to modify scheduled payments with electronic billers.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "billerId": {
                    "description": "A code assigned to the biller.\nPattern: Integer\nExample: `2982`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "frequencyType": {
                    "type": "string",
                    "enum": [
                      "O",
                      "W",
                      "M",
                      "Q",
                      "Y"
                    ],
                    "x-nullable": true
                  },
                  "nextDate": {
                    "description": "The next date that the payment is scheduled.\nPattern: `YYYY-MM-DD`\nExample: `\"2015-02-04\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "endDate": {
                    "description": "The next date that the payment is scheduled.\nPattern: `YYYY-MM-DD`\nExample: `\"2015-02-04\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01,
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "billerId",
                  "frequencyType"
                ]
              }
            }
          }
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_modifyrppsbiller"
      }
    },
    "/getCard": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardResponse"
                }
              }
            }
          }
        },
        "summary": "Get Card",
        "description": "This is a basic lookup method for card information. The ability exists within this method to return sensitive card information. Sensitive parameters can be partially returned or removed by configuration based on the API consumer's needs and PCI posture. You may request provider_params to be updated via request to Galileo Processing. (This will require the ability to securely handle data).\n\ngetCard() is a PCI-compliance sensitive method. When the provider_params are enabled, it returns a PAN/cvv/expdate.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getcard"
        },
        "tags": [
          "Cards"
        ],
        "operationId": "post_getcard"
      }
    },
    "/getAccessToken": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenResponse"
                }
              }
            }
          }
        },
        "summary": "Get Access Token",
        "description": "The getAccessToken() method allows for the API consumer to retrieve an access token relative to the card, account, or customer record. The access token has a configurable seconds to expiry and usage count -- both configuration options are set at the card program level. The use-case this method was created to support is one where a customer needs to be sent a link to a one time view of a dynamically generated image of a virtual card via the web. The method is meant to be extensible and useful for other use-cases.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique product Identifier used for internal Galileo processing and added security) or card_id (integer identifier of the card as found in RDF, getAccountCards(), and getCard()).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^.+$"
                  },
                  "type": {
                    "description": "0=card, 1=account, 2=customer\nPattern:`0`, `1`, or `2`\nExample: `2`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1,
                      2
                    ]
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "type"
                ]
              }
            }
          }
        },
        "tags": [
          "Cards"
        ],
        "operationId": "post_getaccesstoken"
      }
    },
    "/addCard": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCardResponse"
                }
              }
            }
          }
        },
        "summary": "Add Card",
        "description": "The addCard() method allows for another card to be added to an existing account (and a retail location card replacement option for card programs with a retail integration). Note that addCard() is not intended to add multiple cards to an account.\n\nBelow are a few example scenarios for the use of addCard():\n1. Customer has lost their instant issue card and wants a new card immediately at a storefront. The customer has not yet received a personalized card. The addCard() method can be used to assign the instant issue card to the customer.\n2. Customer has lost their personalized card and wants a temporary instant issue card to use until a new personalized card arrives in the mail. The addCard() method can be used to assign an instant issue card to their existing personalized product account. The product ID of the personalized account must be passed in in order to override the use of the product ID associated with the instant issue card.\n3. Customer has a virtual card account and an additional virtual card (different PAN) is requested.\n4. Virtual card lost/stolen: Mark a card lost/stolen using modifyStatus() Type 8 or 9. Make an addCard() call to create a new card number. Note that this is for virtual cards only.\n5. Expired virtual card: Make an addCard() call to create a new card number. Note that this is for virtual cards only.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "prodId": {
                    "description": "Product ID\nPattern: Integer\nExample: `\"501\"`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                  },
                  "newAccountNo": {
                    "description": "Can be either a PAN (the 16 digit card number), PRN (a unique product Identifier used for internal Galileo processing and added security), or Package ID (Galileo retail card packaging identifier).\nPattern: PAN or PRN or Package ID\nExample: `\"123456789012\"`",
                    "type": "string",
                    "pattern": "^(\\d{12}|\\d{16})$",
                    "x-nullable": true
                  },
                  "sharedBalance": {
                    "description": "Define whether or not an additional account will share the balance with the primary. Should never be set to a value of 1 if the primaryAccount is not passed. 0=false, 1=true\nPattern: `0` or `1`\nExample: `\"1\"`",
                    "type": "string",
                    "enum": [
                      "0",
                      "1"
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "prodId"
                ]
              }
            }
          }
        },
        "tags": [
          "Cards"
        ],
        "operationId": "post_addcard"
      }
    },
    "/createProvisioningRequest": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProvisioningResponse"
                }
              }
            }
          }
        },
        "summary": "Create Provisioning Request",
        "description": "The createProvisioningRequest() method can be used as part of a multiple step integration to push provision a virtual card to a mobile wallet. An API integration with each mobile wallet partner is required to be part of a successful use of this API method.\n\n**In-app provisioning**\nIn-app provisioning gives a card issuer (called Partner in this documentation) the ability to use a mobile app to provision a card to a mobile wallet. This is a multi-step process that includes an integration with the mobile wallet (Apple, Google, Samsung), and coding to a Program API method.\nThe cardholder requests (via app) to provision their virtual or physical card to a mobile wallet. The createProvisioningRequest() method is used to response to the user request.\nBelow are the steps to take:\n1. Partner: Contact mobile wallet (Apple, Google, and Samsung) to get access to the in-app provisioning documentation and access to the wallet interface.\n2. Partner: Contact your Galileo Processing Project Manager (PM) or Relationship Manager (RM) to initiate the project.\n3. Galileo: Configures push provisioning with Operations team.\n4. Partner: Call the createProvisioningRequest() endpoint to pass the public certificates, nonce, and nonceSignature to Galileo.\n5. Galileo: API response to partner includes payload to submit to wallet.\n6. Partner: Use data to complete process with Wallet provider. The new card is added to the wallet.\n\n**Product parameter setup**\n* PPPID - The prod_id of the virtual-card product to use. (Do not set PPUPC to 'Y' if PPPID points to a different product.)\n* PPUPC - Whether to tokenize the physical card or to instead tokenize the virtual card. (Do not set PPPID if PPUPC is set to 'Y'.)\n* PPBBI - The key set identifier obtained form Visa. Used by Visa to determine the decryption key. This parameter should be set on the product that PPPID points to, or the product of the physical card itself if PPUPC is used instead.\n* XAACT - This parameter needs to be set on the virtual-card product to automatically activate the newly created account and card. The valud should be set to 'YNN'.\n\n_For more documentation and help with this method please reach out to your account manager or project manager._",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^.+$"
                  },
                  "walletProvider": {
                    "description": "1, 2, or 3 for Apple Pay, Google Pay, or Samsung Pay respectively.\nPattern: Single digit Integer\nExample: `2`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "cert1": {
                    "description": "The leaf certificate returned by the wallet provider, that was signed using cert2. Should be hexified (case insensitive) binary data of the certificate. I the certificatee is in PEM encoding, then it should follow the typical standards for PEM. In particular, the tags -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- shuld be present and the Base64-encoded value should have lines of length 64.\nPattern: Single digit Integer",
                    "type": "string",
                    "x-nullable": true
                  },
                  "cert2": {
                    "description": "The subordinate certificate returned by the wallet provider that was signed using the Wallet Provider's Certificate Authority (CA) certififcate. Should be the hexified (case insensitive) binary data of the certificate. If the certificate is in PEM encoding, then it should follow the typical standards for PEM. In particular, the tags -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- should be present and the Base64-encoded value should have lines of length64.\nPattern: Required - Apple &amp; Samsung Pay: Y Google Pay: No",
                    "type": "string",
                    "x-nullable": true
                  },
                  "nonce": {
                    "description": "Nonce value returned by the wallet-provider. This field is required for Apple Pay but not for Google and Samsung Pay.\nPattern: 8 character nonce value\nExample: `\"9c023092\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "nonceSignature": {
                    "description": "Nonce signature value returned by the wallet-provider Apple Pay. This field is required for Apple Pay but not for Google and Samsung Pay.\nPattern: nonce signature value\nExample: `\"4082f883ae62...\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "clientWalletProvider": {
                    "description": "The value as given by VISA. Required for VISA + Samsung/Google Pay. Not required for VISA + Apple Pay.\nPattern: Required if the card association is VISA",
                    "type": "string",
                    "x-nullable": true
                  },
                  "clientWalletAccountID": {
                    "description": "The value as given by VISA. Required for VISA + Samsung/Google Pay. Not required for VISA + Apple Pay.\nPattern: Required if the card association is VISA",
                    "type": "string",
                    "x-nullable": true
                  },
                  "clientAppID": {
                    "description": "The value as given by VISA. Required for VISA + Samsung/Google Pay. Not required for VISA + Apple Pay.\nPattern: Required if the card association is VISA",
                    "type": "string",
                    "x-nullable": true
                  },
                  "clientDeviceID": {
                    "description": "The value as given by VISA. Required for VISA + Samsung/Google Pay. Not required for VISA + Apple Pay.\nPattern: Required if the card association is VISA",
                    "type": "string",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "walletProvider"
                ]
              }
            }
          }
        },
        "tags": [
          "Cards"
        ],
        "operationId": "post_createprovisioningrequest"
      }
    },
    "/ping": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "summary": "Ping",
        "description": "The ping method performs no function on the Galileo platform other than confirming API connectivity and permissions. A couple of example scenarios where the ping method would be useful are the following:\n* A test method for access from an automated monitoring service.\n* An innocuous method that can be called while integrating with the API in order to confirm assumptions, validate access, etc.",
        "tags": [
          "Miscellaneous"
        ],
        "operationId": "post_ping"
      }
    },
    "/createSimulatedCardAuth": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSimulatedCardAuthResponse"
                }
              }
            }
          }
        },
        "summary": "Simulate Card Authorization",
        "description": "This method allows for the simulation of a card authorization. The createSimulatedCardAuth() method can not be used in the production environment. Upon completing a successful call to this method, the API consumer should expect an unsettled card authorization related to the customer account that was referenced. Authorization response code, authorization response code description, and authorization ID are returned upon success.\nA simulated settle will only settle for the amount of the card authorization. Simulating an up charge will not work in a non-production environment. Example: Authorize for 10.50, settle for 15.50, results in CV will be 10.50.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01
                  },
                  "association": {
                    "description": "Determines what association type will be simulated. Pass 'visa' for Visa and 'mc_auth' for Mastercard.\nPattern: `visa` or `mc_auth`\nExample: `\"visa\"`",
                    "type": "string",
                    "enum": [
                      "visa",
                      "mc_auth"
                    ]
                  },
                  "merchantName": {
                    "description": "Merchant name is typically 40 bytes of fixed with delimeted data. The API consumer can pass their own 40 byte complete string or pass up to 22 bytes and the simulator with add fake address information for the remaining 18 bytes.\nPattern: Alphanumeric string up to 40 characters in length.\nExample: `\"Fred Jones Bagels\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "^[a-zA-Z0-9\\|_\\-@\\.,' ]{1,40}$"
                  },
                  "acquirerId": {
                    "description": "If no aquirerId value is passed, a random 6 digit number will be generated and used.\nPattern: 6 digit number\nExample: `437723`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 6,
                    "maximum": 6,
                    "x-nullable": true
                  },
                  "terminalId": {
                    "description": "If no terminalId value is passed, a random 8 digit number will be generated and used.\nPattern: 8 digit number\nExample: `57395783`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 8,
                    "maximum": 8,
                    "x-nullable": true
                  },
                  "merchantId": {
                    "description": "If no merchantId value is passed a random 15 byte alphanumeric string will be generated and used.\nPattern: 15 character alphanumeric string\nExample: `\"asdf45sdf6sd3d0a\"`",
                    "type": "string",
                    "minimum": 15,
                    "maximum": 15,
                    "pattern": "^[a-zA-Z0-9]+$",
                    "x-nullable": true
                  },
                  "currencyCode": {
                    "description": "Currency Code\nPattern: 3 digits\nExample: `\"123\"`",
                    "type": "string",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "amount",
                  "association",
                  "merchantName"
                ]
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "operationId": "post_createsimulatedcardauth"
      }
    },
    "/createSimulatedCardSettle": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSimulatedCardSettleResponse"
                }
              }
            }
          }
        },
        "summary": "Simulate Card Settlement",
        "description": "This method allows for the settlement of a simulated card authorization. A call to createSimulatedCardSettle() would normally follow a call to the createSimulatedCardAuth(). Either an authId (returned by createSimulatedCardAuth()) or a merchantName value is required.\nA simulated settle will only settle for the amount of the card authorization. Simulating an up charge will not work in a non-production environment. Example: Authorize for 10.50, settle for 15.50, results in CV will be 10.50.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "acquirerId": {
                    "description": "If no aquirerId value is passed, a random 6 digit number will be generated and used.\nPattern: 6 digit number\nExample: `437723`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 6,
                    "maximum": 6,
                    "x-nullable": true
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "terminalId": {
                    "description": "If no terminalId value is passed, a random 8 digit number will be generated and used.\nPattern: 8 digit number\nExample: `57395783`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 8,
                    "maximum": 8,
                    "x-nullable": true
                  },
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "authId": {
                    "description": "authId\nPattern: `Positive integer value`\nExample: `58344373`",
                    "type": "string",
                    "minimum": 1,
                    "maximum": 10,
                    "pattern": "[\\d\\., -]+",
                    "x-nullable": true
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01,
                    "x-nullable": true
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "association": {
                    "description": "Determines what association type will be simulated. Pass 'visa' for Visa and 'mc_auth' for Mastercard.\nPattern: `visa` or `mc_auth`\nExample: `\"visa\"`",
                    "type": "string",
                    "enum": [
                      "visa",
                      "mc_auth"
                    ]
                  },
                  "currencyCode": {
                    "description": "Currency Code\nPattern: 3 digits\nExample: `\"123\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "merchantId": {
                    "description": "If no merchantId value is passed a random 15 byte alphanumeric string will be generated and used.\nPattern: 15 character alphanumeric string\nExample: `\"asdf45sdf6sd3d0a\"`",
                    "type": "string",
                    "minimum": 15,
                    "maximum": 15,
                    "pattern": "^[a-zA-Z0-9]+$",
                    "x-nullable": true
                  },
                  "merchantName": {
                    "description": "Merchant name is typically 40 bytes of fixed with delimeted data. The API consumer can pass their own 40 byte complete string or pass up to 22 bytes and the simulator with add fake address information for the remaining 18 bytes.\nPattern: Alphanumeric string up to 40 characters in length.\nExample: `\"Fred Jones Bagels\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "^[a-zA-Z0-9\\|_\\-@\\.,' ]{1,40}$",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiTransKey",
                  "providerId",
                  "apiLogin",
                  "transactionId",
                  "accountNo",
                  "association"
                ]
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "operationId": "post_createsimulatedcardsettle"
      }
    },
    "/createAccountTransfer": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountTransferResponse"
                }
              }
            }
          }
        },
        "summary": "Create Account Transfer",
        "description": "Bundles a load, adjustment, and fee into one API call. Transfers occur between two accounts on a single program. This method can be used to transfer between accounts of separate customers, or between accounts related to the same customer. The sender's PAN or PRN should be passed as the 'accountNo' parameter. Contact the Galileo Processing Internal Operations team to make this method available.\n\nTransfers with createAccountTransfer require the account to which funds are being transferred (specified by the transferToAccountNo parameter) to have a status of N (active) and the active flag set to Y(es). If your accounts aren't set to status N and active flag Y when they are first setup, you may need to alter a product parameter, XAACT, which can forcibly set the active flag, account, and card status upon enrollment regardless of the ID or account setup outcomes. (Set XAACT='YNX'; when the child account is created it will be set to active=Y status=N and card status=X).",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01
                  },
                  "transferToAccountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "message": {
                    "description": "An optional message for the transfer recipient (in situations of a customer to customer transfer).\nPattern: Alphanumeric string including punctuation, with a maximum length of 2000 characters.\nExample: `\"Thanks again for lunch!\"`",
                    "type": "string",
                    "pattern": "^([\\w\\W\\s\\d]{1,2000})$",
                    "x-nullable": true
                  },
                  "type": {
                    "description": "Transaction types must be set-up before they pass a value in the type column. You can define templates for different types of transfers using this field. If your cardholders will be doing a lot of account transfers, having type templates makes controlling payments, adjustments, and fees a lot easier.If you're interested in using type, contact Galileo.\nPattern: Three alphanumeric types defined in coordination with Galileo.\nExample: `\"Note that any codes will be defined through a request to Galileo.\"`",
                    "type": "string",
                    "pattern": "^([a-zA-Z0-9]){3}$",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "amount",
                  "transferToAccountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "Internal Transfers"
        ],
        "operationId": "post_createaccounttransfer"
      }
    },
    "/getDepositHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDepositHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get Deposit History",
        "description": "Get deposit history data for your entire program or related to a specific customer.\n\n**Recordset Paging**\nLarge data sets can be retrieved using recordset paging. A maximum date range of three years (1095 days) is allowed. When retrieving a large data set, pass the number of records desired (500 per page maximum) as the 'recordCnt' parameter value. Each response will include the total number of records found related to the date range as 'total_record_count'. The number of pages available will be returned as 'number_of_pages'. The current page being returned is communicated simply as 'page'. The API consumer can request the different pages of the recordset by passing the desired page number as the 'page' parameter.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$",
                    "x-nullable": true
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  },
                  "recordCnt": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value in the range of 1 and 99999.\nExample: `100`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 500
                  },
                  "page": {
                    "description": "The page number to be retrieved in the context of recordset paging.\nPattern: Integer value of 1 or greater.\nExample: `3`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 999999,
                    "default": 1
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "ACH"
        ],
        "operationId": "post_getdeposithistory"
      }
    },
    "/getAllTransHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllTransHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get All Transaction History",
        "description": "Get transaction history including authorization holds for a given customer. Summaries of transaction types for the respective date range are included. Running balance is calculated per transaction record. Returns the same data set as is available in the Galileo CST All Transactions page.\n\n**Recordset Paging**\nLarge data sets can be retrieved using recordset paging. A maximum date range of three years (1095 days) is allowed. When retrieving a large data set, pass the number of records desired (500 per page maximum) as the 'recordCnt' parameter value. Each response will include the total number of records found related to the date range as 'total_record_count'. The number of pages available will be returned as 'number_of_pages'. The current page being returned is communicated simply as 'page'. The API consumer can request the different pages of the recordset by passing the desired page number as the 'page' parameter.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^$|^([0-9]{12}|[0-9]{16})$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  },
                  "page": {
                    "description": "The page number to be retrieved in the context of recordset paging.\nPattern: Integer value of `1` or greater.\nExample: `3`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 999999,
                    "default": 1,
                    "x-nullable": true
                  },
                  "recordCnt": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value in the range of `1` and `99999`.\nExample: `100`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 100
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "operationId": "post_getalltranshistory"
      }
    },
    "/getPendingFees": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPendingFeesResponse"
                }
              }
            }
          }
        },
        "summary": "Get Pending Fees",
        "description": "This method will return a record set of fee events that have not yet been successfully processed against the respective customer's account. Normally, fees are processed when they are created. In circumstances like insufficient balance the fee would pend and wait for sufficient balance. This data is also available in a response section of the getAccountOverview() method call.\n\nThe method response for each individual pending fee will conditionally include related transaction information. This method currently only returns card authorization related transaction information. This information can be found in the 'related_transaction' data element.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getpendingfees"
        },
        "tags": [
          "Fees"
        ],
        "operationId": "post_getpendingfees"
      }
    },
    "/getSavingsInterest": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSavingsInterestResponse"
                }
              }
            }
          }
        },
        "summary": "Get Savings Interest",
        "description": "Returns accrual interest, interest YTD, and APY for a customer account that has savings enabled.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^.+$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_getsavingsinterest"
      }
    },
    "/getPaymentHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get Payment History",
        "description": "Returns a recordset of payment (credits) history to a customer account.\n\n**Recordset Paging**\nLarge data sets can be retrieved using recordset paging. A maximum date range of three years (1095 days) is allowed. When retrieving a large data set, pass the number of records desired (500 per page maximum) as the 'recordCnt' parameter value. Each response will include the total number of records found related to the date range as 'total_record_count'. The number of pages available will be returned as 'number_of_pages'. The current page being returned is communicated simply as 'page'. The API consumer can request the different pages of the recordset by passing the desired page number as the 'page' parameter.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^.+$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "includeRelated": {
                    "description": "If a secondary account is used and 1 is passed in includeRelated then all shared balance account transactions will be returned. Otherwise only client shared balance account transactions are returned. For non-secondary accounts all shared balance account transactions are returned by default.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  },
                  "recordCnt": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value in the range of `1` and `99999`.\nExample: `100`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 99999,
                    "x-nullable": true
                  },
                  "page": {
                    "description": "The page number to be retrieved in the context of recordset paging.\nPattern: Integer value of `1` or greater.\nExample: `3`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 999999,
                    "default": 1,
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "Payments"
        ],
        "operationId": "post_getpaymenthistory"
      }
    },
    "/getFeeHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeeHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get Fee History",
        "description": "Returns fee history for a customer account by date range.\n\n**Recordset Paging**\nLarge data sets can be retrieved using recordset paging. A maximum date range of three years (1095 days) is allowed. When retrieving a large data set, pass the number of records desired (500 per page maximum) as the 'recordCnt' parameter value. Each response will include the total number of records found related to the date range as 'total_record_count'. The number of pages available will be returned as 'number_of_pages'. The current page being returned is communicated simply as 'page'. The API consumer can request the different pages of the recordset by passing the desired page number as the 'page' parameter.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^.+$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "recordCnt": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value in the range of `1` and `99999`.\nExample: `100`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 100
                  },
                  "page": {
                    "description": "The page number to be retrieved in the context of recordset paging.\nPattern: Integer value of `1` or greater.\nExample: `3`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 999999,
                    "default": 1
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "Fees"
        ],
        "operationId": "post_getfeehistory"
      }
    },
    "/getOverdraftBalance": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOverdraftBalanceResponse"
                }
              }
            }
          }
        },
        "summary": "Get Overdraft Balance",
        "description": "Returns overdraft related information including available overdraft limit, payback amount, and actual balance if overdraft were combined.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getbalance"
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_getoverdraftbalance"
      }
    },
    "/createVirtualCard": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVirtualCardResponse"
                }
              }
            }
          }
        },
        "summary": "Create a Virtual Card Account",
        "description": "The createVirtualCard() method is very similar to the createAccount() method. The createVirtualCard() differs from createAccount() in that it will only create an account/card combination with a virtual card product ID and the method returns full PAN, expiry, and CVV2. Similar to createAccount(), it also allows the loading of funds to the card at the time of creation. If a call to createVirtualCard() is made using a product ID that is not defined as a virtual card, an invalid product response will be returned.\ncreateVirtualCard() is a PCI-compliance sensitive method. When the provider_params are enabled, it returns a PAN/cvv/expdate.\n\n**Duplicate Use of Customer ID**\nThe createVirtualCard() method can be configured to allow or disallow the duplicate use of customer ID. This configuration is set at the product level. If duplicate use of customer ID is disallowed, during the createVirtualCard() call the enrollment data is checked to confirm that there are no accounts in application submitted (V), canceled without refund (Z), or active (N) status. If no account is found in these statuses, the enrollment is allowed.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "prodId": {
                    "description": "Product ID\nPattern: Integer\nExample: `\"501\"`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 100000000
                  },
                  "id": {
                    "description": "See table below for string patterns related to the different accepted ID types.\nPattern: See section on ID Types.\nExample: `\"123456789\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "idType": {
                    "description": "See table below for valid ID types.\nPattern: 1-15\nExample: `2`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 15,
                    "x-nullable": true
                  },
                  "id2": {
                    "description": "Unique identifier for a Cardholder, used for a secondary ID.\nPattern: See Customer ID Type section.\nExample: `\"123456789012|UT|12/25/2020\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "idType2": {
                    "description": "See table below for string patterns related to the different accepted ID types.\nPattern: See section on ID Types.\nExample: `\"123456789\"`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 15,
                    "x-nullable": true
                  },
                  "locale": {
                    "description": "Sets customer language preference. Default is \"en_US\".\nPattern: Accepted values = `en_US`, `es_US`, `fr_CA`, and `en_CA`\nExample: `\"en_US\"`",
                    "type": "string",
                    "enum": [
                      "en_US",
                      "es_US",
                      "en_CA",
                      "fr_CA"
                    ],
                    "x-nullable": true
                  },
                  "firstName": {
                    "type": "string",
                    "minimum": 1,
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "middleName": {
                    "type": "string",
                    "minimum": 1,
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "lastName": {
                    "description": "Cardholder's last name\nPattern: 2-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"Harley\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 30,
                    "x-nullable": true
                  },
                  "dateOfBirth": {
                    "description": "Cardholder's birth date\nPattern: `YYYY-MM-DD`, minimum age per the business rules for the program.\nExample: `\"1980-01-01\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "address1": {
                    "description": "Cardholder's address line 1.\nPattern: Maximum length -- 40 characters. Cannot be a P.O. Box.\nExample: `\"33 Maple Street\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "address2": {
                    "type": "string",
                    "x-nullable": true
                  },
                  "city": {
                    "description": "Cardholder's city\nPattern: Letters and spaces, maximum length 30 characters.\nExample: `\"Salt Lake City\"`",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 30,
                    "pattern": "^[A-Za-z][\\w\\s\\'-\\.]*$",
                    "x-nullable": true
                  },
                  "state": {
                    "description": "Cardholder's state\nPattern: Valid 2 character state abbreviation.\nExample: `\"UT\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 3,
                    "pattern": "^[a-zA-Z]*$",
                    "x-nullable": true
                  },
                  "postalCode": {
                    "description": "Cardholder's postal code (zip code)\nPattern: `12345` or `12345-1234` (US), `K1A-1A1` (CA)\nExample: `\"84121\"`",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 10,
                    "pattern": "^[a-zA-Z0-9\\-\\ ]*$",
                    "x-nullable": true
                  },
                  "countryCode": {
                    "description": "Three digit ISO numeric UN M49 country code; Example USA=840, Canada=124.\nPattern: Three digit country code.\nExample: `\"840\"`",
                    "type": "string",
                    "pattern": "^\\d{3}$",
                    "x-nullable": true
                  },
                  "primaryPhone": {
                    "description": "Phone number\nPattern: 10 digit phone number\nExample: `\"8013656060\"`",
                    "type": "string",
                    "minimum": 10,
                    "maximum": 10,
                    "pattern": "^(\\d{10}|null)$",
                    "x-nullable": true
                  },
                  "otherPhone": {
                    "description": "Phone number\nPattern: 10 digit phone number\nExample: `\"8013656060\"`",
                    "type": "string",
                    "minimum": 10,
                    "maximum": 10,
                    "pattern": "^(\\d{10}|null)$",
                    "x-nullable": true
                  },
                  "mobilePhone": {
                    "description": "Phone number\nPattern: 10 digit phone number\nExample: `\"8013656060\"`",
                    "type": "string",
                    "minimum": 10,
                    "maximum": 10,
                    "pattern": "^(\\d{10}|null)$",
                    "x-nullable": true
                  },
                  "email": {
                    "description": "Cardholder's email\nPattern: Email Address\nExample: `\"user@fakedomain.com\"`",
                    "type": "string",
                    "format": "email",
                    "x-nullable": true
                  },
                  "loadAmount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01,
                    "x-nullable": true
                  },
                  "loadType": {
                    "description": "Payment types are configurable per client. Contact your account representative to determine which types you have implemented. If no loadType value is specified, the default loadType value RL will be used.\nPattern: 2 characters\nExample: `\"RL\"`",
                    "type": "string",
                    "maximum": 2,
                    "pattern": "^[a-zA-Z0-9]*$",
                    "x-nullable": true
                  },
                  "externalAccountId": {
                    "description": "Identifier external to the Galileo platform to be stored and associated with the respective account.\nPattern: Letters and numbers, maximum length 30 characters.\nExample: `\"553b45sbs\"`",
                    "type": "string",
                    "maximum": 30,
                    "pattern": "^[a-zA-Z0-9\\-]*$",
                    "x-nullable": true
                  },
                  "primaryAccount": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$",
                    "x-nullable": true
                  },
                  "sharedBalance": {
                    "description": "Define whether or not an additional account will share the balance with the primary. Should never be set to a value of 1 if the primaryAccount is not passed. 0=false, 1=true\nPattern: `0` or `1`\nExample: `1`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  },
                  "userData": {
                    "description": "Identifier external to Galileo platform to be stored and associated with the respective account. The most common usage of this parameter has been tracking the identity of affiliate marketing traffic.\nPattern: Letters, numbers and spaces. Maximum length of 50 characters.\nExample: `\"a4434gg44\"`",
                    "type": "string",
                    "maximum": 50,
                    "pattern": "^[a-zA-Z0-9 ]*$",
                    "x-nullable": true
                  },
                  "verifyOnly": {
                    "description": "If a value of '1' is passed, the parameter data will be tested only. No transaction will be committed.\nPattern: `0` or `1`\nExample: `1`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  },
                  "loadFromAccountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$",
                    "x-nullable": true
                  },
                  "sweepDate": {
                    "description": "If provided, sweepDate specifies the last date that a daily sweep should be performed. If daily account sweeping is not configured for your product/program, this parameter can be ignored.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "singleUse": {
                    "description": "Spending control parameter that flags card for one purchasing transaction (currently only available for credit processing).\nPattern: `Y` or `N`\nExample: `\"Y\"`",
                    "type": "string",
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "prodId"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_createvirtualcard"
      }
    },
    "/forcePassCip": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForcePassCipResponse"
                }
              }
            }
          }
        },
        "summary": "Force Pass CIP",
        "description": "The forcePassCip() method allows for API consumer to move the customer account to a CIP passed state.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getpendingfees"
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_forcepasscip"
      }
    },
    "/getAccountFeatures": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountFeatureResponse"
                }
              }
            }
          }
        },
        "summary": "Get Account Features",
        "description": "This method allows the API consumer to get a data set of account features that have been set related to a customer account.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getbalance"
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_getaccountfeatures"
      }
    },
    "/setAccountFeature": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetAccountFeatureResponse"
                }
              }
            }
          }
        },
        "summary": "Set Account Feature",
        "description": "The setAccountFeature() method is used to make miscellaneous customer account changes. Currently this method allows for the enabling or disabling of bill payment reporting and paper statement delivery to the customer. The method also allows for product ID switching. The featureType and featureValue parameter define what action is taken by the method.\nThe following special characters are available in names:\n* Space\n* \\- (hyphen)\n* . (period)\n* ' (apostrophe)\n* , (comma)\n",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "featureType": {
                    "description": "* 1=Bill payment reporting\n* 2=Paper statements\n* 3=Change product ID\n* 5=Express shipping\n* 6=Allow card not present transactions\n* 7=ACH early access\n* 8=Allow international transactions\n* 9=Disable ATM withdrawals\n* 10=Disable cash advance withdrawals\n* 11=Enable or disable savings round up\n* 13=Mark customer as High Risk\n* 14=Disable Galileo Dynamic Fraud Rules\n* 15=Overdraft Credit Limit\n* 16=Custom Card ID and must include |A at end of ID\n* 17=Overdraft opt in or out\n* 20=Block card present without token\n* 21=Block all card not present and card present without a token\n* 22=Block all token transactions\nOnly one of features 20-22 may be set at a time.\n* 23=First deliquency date.\n* 24=Deliquency amount.\n* 25=Emboss line 2.\nPattern: Positive integer value\nExample: `3`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 999
                  },
                  "featureValue": {
                    "description": "* 1=Y or N \n* 2=Y or N \n* 3=Product ID number (integer)\n* 5=Y (enabled), N (disabled), or 0-9 \n* 6=Y or N \n* 7=Y or N \n* 8=Y or N \n* 9=Y or N \n* 10=Y or N \n* 11=Y or N \n* 13=Y or N \n* 14=Y or N \n* 15=decimal number no commas or dollar sign \n* 16=Ca9ykshiu|A (this is an example only)\n* 17=E=Eligible, P=Opt in, I=Ineligible\n* 20=Y or N \n* 21=Y or N \n* 22=Y or N \n* 23=Date in the format yyyy-mm-dd\n* 24=Monetary amount\nPattern: Positive integer value\nExample: `3`* 25=String to be embossed. Max 28 characters\n",
                    "type": "string",
                    "pattern": "^[\\w\\W\\s\\d\\|_\\. '`\\?,!@\\$%#\\\"\\/\\-=~]{1,255}$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-02-01\"`",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "featureType",
                  "featureValue"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_setaccountfeature"
      }
    },
    "/verifyAccount": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAccountResponse"
                }
              }
            }
          }
        },
        "summary": "Verify Account",
        "description": "Returns a record set containing the following:\n* Current account balance (both posted and authorized transactions are factored into the balance amount).\n* Current maximum amount that can be loaded to the account.\n* External account ID provided by the client.\n* Account Payment Reference Number (PRN).\n* Galileo Account Number\n\nThis method can include information for all cards related to the account or only those on the supplied card number/PRN.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^$|^([0-9]{12}|[0-9]{16})$"
                  },
                  "loadType": {
                    "description": "Payment types are configurable per client. Contact your account representative to determine which types you have implemented. If no loadType value is specified, the default loadType value RL will be used.\nPattern: 2 characters\nExample: `\"RL\"`",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9]{1,2}$",
                    "x-nullable": true
                  },
                  "includeRelated": {
                    "description": "If a secondary account is used and 1 is passed in includeRelated then all shared balance account transactions will be returned. Otherwise only client shared balance account transactions are returned. For non-secondary accounts all shared balance account transactions are returned by default.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ]
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_verifyaccount"
      }
    },
    "/getCustomerNoteHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomerNoteHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get Customer Note History",
        "description": "This method allows for the retrieval of note history for a customer as accessible in the Galileo CST. This method requires a date range; the date range has a maximum range size of 365 days.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^$|^([0-9]{12}|[0-9]{16})$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_getcustomernotehistory"
      }
    },
    "/addCustomerNote": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCustomerNoteResponse"
                }
              }
            }
          }
        },
        "summary": "Add Customer Note",
        "description": "This method allows for the creation of a customer note that will be accessible in the Galileo CST.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "note": {
                    "description": "Text of the note.\nPattern: Alphanumeric string including punctuation\nExample: `\"Sample note message here.\"`",
                    "type": "string",
                    "minimum": 1
                  },
                  "sticky": {
                    "description": "If a value of `1` is passed, the note will be set as 'sticky' or 'permanent' in the CST.\nPattern: `0` or `1`\nExample: `\"1\"`",
                    "type": "string",
                    "pattern": "^(1|0)$",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "note"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_addcustomernote"
      }
    },
    "/getAccountById": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountsByIdResponse"
                }
              }
            }
          }
        },
        "summary": "Get Account",
        "description": "This method allows the retrieval of account information using common customer ID elements such as Social Security or Drivers License number. If an account is found associated with the ID that was passed, useful account information like status, application (enrollment) date, and payment reference number are returned.\ngetAccountById() is a PCI-compliance sensitive method, because ID information is passed in.\ngetAccountByid() searches for id, not id2. id2 is not capable of searching id2 values. Always use id when using getAccountByid().",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "id": {
                    "description": "See table below for string patterns related to the different accepted ID types.\nPattern: StringExample: `\"123456789\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "idType": {
                    "description": "See table below for valid ID types.\nPattern: 1-15\nExample: `2`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 15,
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "id",
                  "idType"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_getaccountbyid"
      }
    },
    "/searchAccounts": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAccountsResponse"
                }
              }
            }
          }
        },
        "summary": "Search Accounts",
        "description": "Search customer accounts using a minimum of first name, last name, and zip code. The resulting data set is similar to what is returned in the Galileo CST.\n\n**Recordset Paging**\nLarge data sets can be retrieved using recordset paging. When retrieving a large data set, pass the number of records desired (500 per page maximum) as the 'recordCnt' parameter value. Each response will include the total number of records found related to the date range as 'total_record_count'. The number of pages available will be returned as 'number_of_pages'. The current page being returned is communicated simply as 'page'. The API consumer can request the different pages of the recordset by passing the desired page number as the 'page' parameter.\n\n_Note: This method requires one of the following parameters to be used: postalCode, primaryPhone, mobilePhone, or email._",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^$|^([0-9]{12}|[0-9]{16})$",
                    "x-nullable": true
                  },
                  "firstName": {
                    "description": "Cardholder's first name\nPattern: 1-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"Ed\"`",
                    "type": "string",
                    "minimum": 1,
                    "maximum": 30,
                    "pattern": "^[A-Za-z0-9\\.,\\?@&amp;\\!#~\\*;\\+ '-]*$",
                    "x-nullable": true
                  },
                  "middleName": {
                    "description": "Cardholder's middle name\nPattern: 1-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"W\"`",
                    "type": "string",
                    "minimum": 1,
                    "maximum": 30,
                    "pattern": "^[A-Za-z0-9\\.,\\?@&amp;\\!#~\\*;\\+ '-]*$",
                    "x-nullable": true
                  },
                  "lastName": {
                    "description": "Cardholder's last name\nPattern: 2-30 characters; letters(A-Za-z), spaces, numbers, as well as hyphens (-) and single quote characters (').\nExample: `\"Harley\"`",
                    "type": "string",
                    "minimum": 2,
                    "maximum": 30,
                    "pattern": "^[A-Za-z0-9\\.,\\?@&amp;\\!#~\\*;\\+ '-]*$",
                    "x-nullable": true
                  },
                  "dateOfBirth": {
                    "description": "Cardholder's birth date\nPattern: `YYYY-MM-DD`, minimum age per the business rules for the program.\nExample: `\"1980-01-01\"`",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                  },
                  "postalCode": {
                    "description": "Cardholder's postal code (zip code)\nPattern: `12345` or `12345-1234` (US), `K1A-1A1` (CA)\nExample: `\"84121\"`",
                    "type": "string",
                    "minimum": 5,
                    "maximum": 10,
                    "pattern": "^[a-zA-Z0-9\\-\\ ]*$",
                    "x-nullable": true
                  },
                  "primaryPhone": {
                    "description": "Cardholder's primary phone number\nPattern: Valid phone number\nExample: `\"8013656050\"`",
                    "type": "string",
                    "minimum": 10,
                    "maximum": 10,
                    "x-nullable": true
                  },
                  "otherPhone": {
                    "description": "Cardholder's other phone number\nPattern: Valid phone number\nExample: `\"8013656050\"`",
                    "type": "string",
                    "minimum": 10,
                    "maximum": 10,
                    "x-nullable": true
                  },
                  "mobilePhone": {
                    "description": "Cardholder's mobile phone number\nPattern: Valid phone number\nExample: `\"8013656050\"`",
                    "type": "string",
                    "minimum": 10,
                    "maximum": 10,
                    "x-nullable": true
                  },
                  "email": {
                    "description": "Cardholder's email\nPattern: Email Address\nExample: `\"user@fakedomain.com\"`",
                    "type": "string",
                    "format": "email",
                    "x-nullable": true
                  },
                  "userData": {
                    "description": "Identifier external to Galileo platform to be stored and associated with the respective account. The most common usage of this parameter has been tracking the identity of affiliate marketing traffic.\nPattern: Letters, numbers and spaces. Maximum length of 50 characters.\nExample: `\"a4434gg44\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9\\ ]*$",
                    "x-nullable": true
                  },
                  "recordCnt": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value in the range of 1 and 99999.\nExample: `100`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 10,
                    "maximum": 100,
                    "x-nullable": true
                  },
                  "page": {
                    "description": "The page number to be retrieved in the context of recordset paging.\nPattern: Integer value of 1 or greater.\nExample: `3`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 100,
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId"
                ]
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "post_searchaccounts"
      }
    },
    "/activateCard": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateCardResponse"
                }
              }
            }
          }
        },
        "summary": "Activate Card",
        "description": "Activates an existing card.\n\nNote: This method does not work with virtual card accounts. If you need to activate a virtual card, a modifyStatus() type 7 call should be made.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "cardExpiryDate": {
                    "description": "Card Expiration Date\nPattern: `YYYY-MM`\nExample: `\"2019-01\"`",
                    "type": "string",
                    "pattern": "^(19|20)\\d\\d-(0[1-9]|1[012])$"
                  },
                  "cardSecurityCode": {
                    "description": "This is the CVV value of the new card to be activated. If a value is submitted, the new card will be tested against that value.\nPattern: 3 digits\nExample: `\"123\"`",
                    "type": "string",
                    "pattern": "[0-9]{3}",
                    "x-nullable": true
                  },
                  "cardNumberLastFour": {
                    "description": "If PRN is passed as accountNo, this parameter can be used to ensure that the correct card is selected if the cardholder has more than one active card related to their account.\nPattern: 4 digits\nExample: `\"0789\"`",
                    "type": "string",
                    "pattern": "[0-9]{4}$",
                    "x-nullable": true
                  },
                  "deactivateTemporaryCards": {
                    "description": "If a value of `1` is passed the temporary card is deactivated. `0` will leave the temporary card active.\nPattern: `1` or `0`\nExample: `\"1\"`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 1,
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "cardExpiryDate"
                ]
              }
            }
          }
        },
        "tags": [
          "Cards"
        ],
        "operationId": "post_activatecard"
      }
    },
    "/getCardPinChangeKey": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardPinChangeKeyResponse"
                }
              }
            }
          }
        },
        "summary": "Get Card Pin Change Key",
        "description": "This method allows for the creation of a card PIN change token. This token is used as part of a PIN change strategy that involves the customer submitting a PIN change request over HTTP POST to Galileo via a form created and rendered by the partner. Speak to your Account Manager or Implementation Manager for more details.\nThis is a PCI-compliance sensitive method. This requires an interface with Agserv to complete set up.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getcard"
        },
        "tags": [
          "Cards"
        ],
        "operationId": "post_getcardpinchangekey"
      }
    },
    "/commitCardPinChange": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitCardPinChangeResponse"
                }
              }
            }
          }
        },
        "summary": "Commit Card PIN Change",
        "description": "This method allows for the commit or completion of a PIN change request that was staged. The staged PIN change is created by first creating a PIN change key or token (getCardPinChangeKey()) and then using that key as part of a customer initiated HTML form POST to Galileo. Speak to your Account Manager or Implementation Manager for more details.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getpendingfees"
        },
        "tags": [
          "Cards"
        ],
        "operationId": "post_commitcardpinchange"
      }
    },
    "/sendNewCardPin": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendNewCardPinResponse"
                }
              }
            }
          }
        },
        "summary": "Send New Card PIN",
        "description": "With this method the API consumer can request a new card PIN be messaged to a customer via mobile text message. The sendNewCardPin() method does not allow the PIN to be set via API. When the method is called, a new random PIN will be generated and messaged to the mobile phone number configured in the customer's profile.\n\nThis is a PCI-compliance sensitive method.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "cardNumberLastFour": {
                    "description": "If PRN is passed as accountNo, this parameter can be used to ensure that the correct card is selected if the cardholder has more than one active card related to their account.\nPattern: 4 digits\nExample: `\"0789\"`",
                    "type": "string",
                    "pattern": "^$|^([0-9]{4})$",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "Cards"
        ],
        "operationId": "post_sendnewcardpin"
      }
    },
    "/getCallStatus": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallStatusResponse"
                }
              }
            }
          }
        },
        "summary": "Get Call Status",
        "description": "This method can be used to check the response code of a previous API call.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "requestTransactionId": {
                    "description": "The transactionId used in the original request\nPattern: `60 characters or less`\nExample: `\"9633aa94-4810-4ecc-9408-927049df0f8d\"`",
                    "type": "string"
                  },
                  "requestMethodName": {
                    "description": "The name of the method in the original request\nPattern: `100 characters or less`\nExample: `\"activateCard\"`",
                    "type": "string"
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "requestTransactionId",
                  "requestMethodName"
                ]
              }
            }
          }
        },
        "tags": [
          "Miscellaneous"
        ],
        "operationId": "post_getcallstatus"
      }
    },
    "/getAchAccounts": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAchAccountsResponse"
                }
              }
            }
          }
        },
        "summary": "Get ACH Accounts",
        "description": "Get record set of ACH accounts related to a customer account.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getbalance"
        },
        "tags": [
          "ACH"
        ],
        "operationId": "post_getachaccounts"
      }
    },
    "/modifyAchAccount": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyAchAccountResponse"
                }
              }
            }
          }
        },
        "summary": "Modify ACH Account",
        "description": "Modify an existing customer ACH account. The routing (achRoutingNo) and account (achAccountNo) numbers can be submitted more than once on the same program, as long as the information is not on the same XID (account identifier).",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "achAccountId": {
                    "description": "Numeric identifier for ACH accounts. This identifier is returned in both the addAchAccount() and getAchAccounts() methods.\nPattern: Positive integer value\nExample: `354656`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "description": "The name of the ACH account. The customer would potentially see this name in the cardholder web application. This name is for the customer's convenience.\nPattern: Alphanumeric string up to 22 characters in length.\nExample: `my checking account`",
                    "type": "string",
                    "maxLength": 22,
                    "x-nullable": true
                  },
                  "type": {
                    "description": "Describes the type of account that is being transferred to.\n*C=Checking\n*S=Savings\n*M=Money Market\nPattern: `C`, `S`, or `M`\nExample: `C`",
                    "type": "string",
                    "enum": [
                      "C",
                      "S",
                      "M"
                    ],
                    "x-nullable": true
                  },
                  "achAccountNo": {
                    "description": "Numeric bank account number.\nPattern: Numeric string of up to 22 characters in length.\nExample: `\"4483434234348\"`",
                    "type": "string",
                    "pattern": "^[\\d]{1,22}$",
                    "x-nullable": true
                  },
                  "achRoutingNo": {
                    "description": "Standard ACH routing number.\nPattern: Numeric 9 digit routing number including check digit.\nExample: `\"483292838\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "location": {
                    "description": "Unique location identifier; see location types.\nPattern: Must be a number if type is 0; Must be less than 15 characters if type is 1.\nExample: `\"a455-3483\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "locationType": {
                    "description": "0=Galileo Location ID\n 1=Partner Location ID\nPattern: `0` or `1`\nExample: `1`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "achAccountId"
                ]
              }
            }
          }
        },
        "tags": [
          "ACH"
        ],
        "operationId": "post_modifyachaccount"
      }
    },
    "/addAchAccount": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAchAccountResponse"
                }
              }
            }
          }
        },
        "summary": "Add ACH Account",
        "description": "Add an ACH account to a customer profile. The ACH account can be used in other methods like createAchTransaction().",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "name": {
                    "description": "The name of the ACH account. The customer would potentially see this name in the cardholder web application. This name is for the customer's convenience.\nPattern: Alphanumeric string up to 22 characters in length.\nExample: `\"my checking account\"`",
                    "type": "string",
                    "maxLength": 22,
                    "x-nullable": true
                  },
                  "type": {
                    "description": "Describes the type of account that is being transferred to. C=Checking, S=Savings, M=Money Market\nPattern: Must be `C`, `S`, or `M`\nExample: `\"C\"`",
                    "type": "string",
                    "enum": [
                      "C",
                      "S",
                      "M"
                    ],
                    "x-nullable": true
                  },
                  "achAccountNo": {
                    "description": "Numeric bank account number.\nPattern: Numeric string of up to 22 characters in length.\nExample: `\"4483434234348\"`",
                    "type": "string",
                    "pattern": "^[\\d]{1,22}$",
                    "x-nullable": true
                  },
                  "achRoutingNo": {
                    "description": "Standard ACH routing number.\nPattern: Numeric 9 digit routing number including check digit.\nExample: `\"483292838\"`",
                    "type": "string",
                    "x-nullable": true
                  },
                  "processorToken": {
                    "description": "Obtained from Plaid if using Galileo + Plaid integration. This token may be used as a replacement for achAccountNumber, achRoutingNumber, name, and type as that data is obtained directly from Plaid.\nPattern: String\nExample: `\"processor-production-35cd43b-adfc-d8aa-b331-c9ba0fdha881\"`",
                    "type": "string",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "ACH"
        ],
        "operationId": "post_addachaccount"
      }
    },
    "/removeAchAccount": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveAchAccountResponse"
                }
              }
            }
          }
        },
        "summary": "Remove ACH Account",
        "description": "Remove an existing customer ACH account.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "achAccountId": {
                    "description": "Numeric identifier for ACH accounts. This identifier is returned in both the addAchAccount() and getAchAccounts() methods.\nPattern: Positive integer value\nExample: `354656`",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "achAccountId"
                ]
              }
            }
          }
        },
        "tags": [
          "ACH"
        ],
        "operationId": "post_removeachaccount"
      }
    },
    "/cancelAchTransaction": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelAchTransactionResponse"
                }
              }
            }
          }
        },
        "summary": "Cancel ACH Transaction",
        "description": "Cancel an ACH transfer created with the createAchTransaction() method.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "achTransactionId": {
                    "description": "Numeric transaction identifier for ACH transactions. This identifier is returned in both the createAchTransaction() and getAchTransHistory() methods.\nPattern: Positive integer value.\nExample: `34890348`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "achTransactionId"
                ]
              }
            }
          }
        },
        "tags": [
          "ACH"
        ],
        "operationId": "post_cancelachtransaction"
      }
    },
    "/getAchTransHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAchTransHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get ACH Transaction History",
        "description": "Retrieve the ACH transfer history for a customer account.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "startDate": {
                    "description": "The beginning date for the date range.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "description": "The end date for the date range; Must be greater than or equal to the startDate.\nPattern: `YYYY-MM-DD`\nExample: `\"2016-01-01\"`",
                    "type": "string",
                    "format": "date-time"
                  },
                  "includeRelated": {
                    "description": "If a secondary account is used and 1 is passed in includeRelated then all shared balance account transactions will be returned. Otherwise only client shared balance account transactions are returned. For non-secondary accounts all shared balance account transactions are returned by default.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  },
                  "recordCnt": {
                    "description": "The maximum number of records to be returned in the method response.\nPattern: Positive integer value in the range of 1 and 99999.\nExample: `100`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 400
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "tags": [
          "ACH"
        ],
        "operationId": "post_getachtranshistory"
      }
    },
    "/createHold": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHoldResponse"
                }
              }
            }
          }
        },
        "summary": "Create Hold",
        "description": "The createHold() method creates a hold or reserve on an amount of funds for a specific payment and a given amount of time. The createHold method allows a hold of up to 50,001.00 (as set by the product parameter MXHLD ). Note that createHold() supports remote deposit capture (RDC).\n\nUse createHold() to place a hold on a specific payment, or a hold against an account in general. A payment hold requires a specific amount and a payment ID. An account hold requires the payment type to hold against, and what payment types are allowed on this PID. A THOLD parameter must be setup for them to do a general hold.\n\nContact the Galileo Technical Operations Center to update MXHLD (MXHLD must be updated to pass the threshold of 25,000.00) or to configure the THOLD parameter for a general account hold.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01,
                    "maximum": 1000000000
                  },
                  "expirationDateTime": {
                    "description": "Must be a fully qualified date including the 24 hour format timestamp.\nPattern: `YYYY-MM-DD HH:MM:SS`\nExample: `\"2017-01-01 13:00:00\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  },
                  "pmtId": {
                    "description": "This parameter value will be the payment ID (pmtId) as returned by getPaymentHistory(). This is the integer value that uniquely identifies a payment on the Galileo system.\nPattern: Positive integer value\nExample: `4234888`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 9999999999,
                    "x-nullable": true
                  },
                  "holdType": {
                    "description": "Hold types are pre-configured in coordination with your account manager.\nPattern: Alphanumeric predefined four character string.\nExample: `AAAB`",
                    "type": "string",
                    "pattern": "^([\\w\\W\\s\\d]{1,4})$",
                    "x-nullable": true
                  },
                  "description": {
                    "description": "Transaction description.\nPattern: Alphanumeric and punctuation\nExample: `\"One time payroll load.\"`",
                    "type": "string",
                    "pattern": "^([\\w\\W\\s\\d]{1,80})$",
                    "x-nullable": true
                  },
                  "externalId": {
                    "description": "Optional external system ID for a hold.\nPattern: Alphanumeric string up to 60 characters in length.\nExample: `\"45348bacd483348\"`",
                    "type": "string",
                    "pattern": "^[\\w\\W\\s\\d]{1,60}$",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "amount"
                ]
              }
            }
          }
        },
        "tags": [
          "Holds"
        ],
        "operationId": "post_createhold"
      }
    },
    "/expireHold": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpireHoldResponse"
                }
              }
            }
          }
        },
        "summary": "Expire Hold",
        "description": "This method expires a funds hold made with createHold().",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "holdId": {
                    "description": "Hold ID as returned by getHoldHistory().\nPattern: Positive integer value\nExample: `453434`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                  },
                  "expirationDateTime": {
                    "description": "Must be a fully qualified date including the 24 hour format timestamp.\nPattern: `YYYY-MM-DD HH:MM:SS`\nExample: `\"2017-01-01 13:00:00\"`",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "holdId"
                ]
              }
            }
          }
        },
        "tags": [
          "Holds"
        ],
        "operationId": "post_expirehold"
      }
    },
    "/createPayment": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          }
        },
        "summary": "Create Payment",
        "description": "This method enables the loading of funds to a customer account. The createPayment() method utilizes Galileo's limit and velocity verification engine and will return response information related to any limit or velocity violations.\n\n**Load Limit and Velocity Response**\nIn the event of a load limit or velocity violation, the createPayment() method will return a response status code 26 and elements 'limit_error', 'limit_id', and 'limit_response_code' in the 'response_data' section. The 'limit_id' is an integer identifier that is to be used in trouble shooting limit and velocity violation configuration. The 'limit_response_code' values are enumerated below.\n\nNote: A payment created using this method will not show up in a getAccountOverview call until after several seconds have elapsed (this applies to both createAdjustment and createPayment).\n\n**Limit Response Codes**\n\n| Return Code | Description |\n| :---------- | :---------- |\n| 101 | Load amount is at maximum allowed amount, but is less than amount requested. |\n| 201 | Load amount is 0.0. Maximum load amount violated. |\n| 301 | Load amount is 0.0. No load can be done. Amount loaded for given period already equals or exceeds maximum amount. |\n| 302 | Load amount and previous load amount for given period will equal maximum amount but is less than total amount within time period. |\n| 401 | Load amount is 0.0. No load can be done. The maximum number of transactions are exceeded. |\n| 501 | Load amount is 0.0. No load can be done. Maximum balance has already been reached. |\n| 502 | Load amount and previous load amount will equal maximum balance but is less than amount requested. |\n| 601 | Load amount is 0.0. No load can be done. Maximum balance has already been reached. |\n| 602 | Load amount and previous load amount will equal maximum balance but is less than amount requested. |\n| 603 | This is an excluded account balance. |\n| 701 | Usage count has already been exceeded. |",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00','100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float"
                  },
                  "type": {
                    "description": "Payment types are configurable per client. Contact your account representative to determine which types you have implemented.\nPattern: 2 character alphanumeric\nExample: `\"2\"`",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9]{1,2}$"
                  },
                  "description": {
                    "description": "Transaction description.\nPattern: Alphanumeric and punctuation\nExample: `\"One time payroll load.\"`",
                    "type": "string",
                    "pattern": "^([\\w\\W\\s\\d]{1,40})$",
                    "x-nullable": true
                  },
                  "verifyOnly": {
                    "description": "If a value of '1' is passed, the parameter data will be tested only. No transaction will be committed.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "amount",
                  "type"
                ]
              }
            }
          }
        },
        "tags": [
          "Payments"
        ],
        "operationId": "post_createpayment"
      }
    },
    "/assessFee": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessFeeResponse"
                }
              }
            }
          }
        },
        "summary": "Assess Fee",
        "description": "Assesses a fee to an account.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "type": {
                    "description": "Fee type must be created and registered within the Galileo platform before use.\nPattern: 3 character alphanumeric fee type\nExample: `\"2\"`",
                    "type": "string",
                    "pattern": "^([a-zA-Z0-9]{1,3})$"
                  },
                  "transAmount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. The value for this parameter should be the value of the related transaction. This parameter value is used in the calculation of the fee amount when a percentage fee is configured.\nPattern: Monetary amount greater than 0\nExample: `25.99`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "maximum": 1000000000,
                    "x-nullable": true
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "maximum": 1000000000,
                    "x-nullable": true
                  },
                  "verifyOnly": {
                    "description": "If a value of '1' is passed, the parameter data will be tested only. No transaction will be committed.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "integer",
                    "format": "int32",
                    "enum": [
                      0,
                      1
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "type"
                ]
              }
            }
          }
        },
        "tags": [
          "Fees"
        ],
        "operationId": "post_assessfee"
      }
    },
    "/reverseFee": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReverseFeeResponse"
                }
              }
            }
          }
        },
        "summary": "Reverse Fee",
        "description": "Reverse a fee created with the assessFee method or created elsewhere on the Galileo platform.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "feeId": {
                    "description": "If reversing a fee created via the API, only the transaction ID that fee was created with is required. The feeId should be passed if reversing a fee created elsewhere on the Galileo platform. The feeId is returned in the getFeeHistory() response.",
                    "type": "integer",
                    "format": "int32",
                    "x-nullable": true
                  },
                  "verifyOnly": {
                    "description": "If a value of '1' is passed, the parameter data will be tested only. No transaction will be committed.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "string",
                    "enum": [
                      "0",
                      "1"
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "Fees"
        ],
        "operationId": "post_reversefee"
      }
    },
    "/createAdjustment": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAdjustmentResponse"
                }
              }
            }
          }
        },
        "summary": "Create Adjustment",
        "description": "Makes credit or debit adjustments on an account. *Please note that unlike other methods that allow for an alphanumeric string for transactionId, the createAdjustment() method requires an integer value.\n\nNote: A payment created using this method will not show up in a getAccountOverview call until after several seconds have elapsed (this applies to both createAdjustment and createPayment).",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "amount": {
                    "description": "Currency amounts passed as whole or fractional amounts, examples: '100.00', '100', or '100.73'. \nPattern: Monetary amount 0 or greater.\nExample: `25.50`",
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01,
                    "maximum": 9999999.99
                  },
                  "type": {
                    "description": "F=Web service adjustment, additional custom configured types available.\nPattern: 2 character alphanumeric\nExample: `\"F\"`",
                    "type": "string",
                    "pattern": "^([a-zA-Z0-9]{1,2})$"
                  },
                  "description": {
                    "description": "Transaction description.\nPattern: Alphanumeric and punctuation\nExample: `\"One time payroll load.\"`",
                    "type": "string",
                    "pattern": "^[\\w\\W\\s\\d]{1,40}$",
                    "x-nullable": true
                  },
                  "debitCreditIndicator": {
                    "description": "C=Credit, D=Debit\nPattern: `D` or `C`\nExample: `\"D\"`",
                    "type": "string",
                    "enum": [
                      "C",
                      "D"
                    ]
                  },
                  "verifyOnly": {
                    "description": "If a value of '1' is passed, the parameter data will be tested only. No transaction will be committed.\nPattern: `0` or `1`\nExample: `0`",
                    "type": "string",
                    "enum": [
                      "0",
                      "1"
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "amount",
                  "type",
                  "debitCreditIndicator"
                ]
              }
            }
          }
        },
        "tags": [
          "Adjustments"
        ],
        "operationId": "post_createadjustment"
      }
    },
    "/reverseAdjustment": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReverseAdjustmentResponse"
                }
              }
            }
          }
        },
        "summary": "Reverse Adjustment",
        "description": "Reverses a credit or debit adjustments on an account.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_reverseadjustment"
        },
        "tags": [
          "Adjustments"
        ],
        "operationId": "post_reverseadjustment"
      }
    },
    "/reversePayment": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReversePaymentResponse"
                }
              }
            }
          }
        },
        "summary": "Reverse Payment",
        "description": "Reverses a payment. The transactionId parameter will identify the payment to be reversed. Note: The account balance must be sufficient to cover the amount of the reversal. This will also assess any corresponding reverse payment fees if applicable to the card program.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_reverseadjustment"
        },
        "tags": [
          "Payments"
        ],
        "operationId": "post_reversepayment"
      }
    },
    "/getHoldHistory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHoldHistoryResponse"
                }
              }
            }
          }
        },
        "summary": "Get Hold History",
        "description": "This method allows you to receive a history of holds created for a specified account.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^$|^([0-9]{12}|[0-9]{16})$"
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo"
                ]
              }
            }
          }
        },
        "tags": [
          "Holds"
        ],
        "operationId": "post_getholdhistory"
      }
    },
    "/updatePayment": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePaymentResponse"
                }
              }
            }
          }
        },
        "summary": "Update Payment",
        "description": "Allows for the updating of the 'hold days' for a pending payment.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "accountNo": {
                    "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                    "type": "string",
                    "pattern": "^\\d{12}$|^\\d{16}$"
                  },
                  "pmtId": {
                    "description": "This parameter value will be the payment ID (pmtId) as returned by getPaymentHistory(). This is the integer value that uniquely identifies a payment on the Galileo system.\nPattern: Positive integer value\nExample: `4234888`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "holdDays": {
                    "description": "The 'hold days' value can be updated to zero or greater. If set to zero, the payment will be posted to the customer balance the next time payments are evaluated to be processed.\nPattern: Integer value of zero or greater\nExample: `0`",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 99
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "accountNo",
                  "pmtId",
                  "holdDays"
                ]
              }
            }
          }
        },
        "tags": [
          "Payments"
        ],
        "operationId": "post_updatepayment"
      }
    },
    "/reverseAccountTransfer": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReverseAccountTransferResponse"
                }
              }
            }
          }
        },
        "summary": "Reverse Account Transfer",
        "description": "Reverses a createAccountTransfer() method call. The createAccountTransfer call to be reversed is identified by the transaction ID. Only successful (response status code '0') createAccountTransfer() calls can be reversed. The sender's PAN or PRN should be passed as the 'accountNo' parameter.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getbalance"
        },
        "tags": [
          "Internal Transfers"
        ],
        "operationId": "post_reverseaccounttransfer"
      }
    },
    "/searchBillerDirectory": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchBillerDirectoryResponse"
                }
              }
            }
          }
        },
        "summary": "Search Biller Directory",
        "description": "Search for electronic biller matches in the Remote Payment and Presentment Service (RPPS) database. When passing a biller name ('billerName') and account number ('billerAccountNo'), the searchBillerDirectory() method will attempt to find matches based on biller account number masks and the biller name. The returned RPPS biller ID ('rpps_biller_id') is used when calling the addRppsBiller() method call.\nThe searchBillerDirectory method includes account number masking data for partners to consume and display to customers. ",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiLogin": {
                    "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                    "type": "string"
                  },
                  "apiTransKey": {
                    "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                    "type": "integer",
                    "format": "int32"
                  },
                  "transactionId": {
                    "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                    "type": "string"
                  },
                  "billerAccountNo": {
                    "description": "Must be valid biller account number. When applicable, the account number is validated against a biller-supplied mask.\nPattern: Alphanumeric string including hyphens and spaces.\nExample: `\"3333223323455555\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30,
                    "pattern": "^[A-Za-z0-9\\|_\\. '`\\?,!@$%#\\\"\\/\\-=]{1,30}$",
                    "x-nullable": true
                  },
                  "billerName": {
                    "description": "Biller's name\nPattern: Alphanumeric string of up to 50 characters (no punctuation allowed).\nExample: `\"My Landlord\"`",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128
                  },
                  "billerState": {
                    "description": "Biller's state\nPattern: Valid 2 character state abbreviation.\nExample: `\"UT\"`",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2,
                    "enum": [
                      "AL",
                      "AK",
                      "AZ",
                      "AR",
                      "CA",
                      "CO",
                      "CT",
                      "DE",
                      "DC",
                      "FL",
                      "GA",
                      "HI",
                      "ID",
                      "IL",
                      "IN",
                      "IA",
                      "KS",
                      "KY",
                      "LA",
                      "ME",
                      "MD",
                      "MA",
                      "MI",
                      "MN",
                      "MS",
                      "MO",
                      "MT",
                      "NE",
                      "NV",
                      "NH",
                      "NJ",
                      "NM",
                      "NY",
                      "NC",
                      "ND",
                      "OH",
                      "OK",
                      "OR",
                      "PA",
                      "RI",
                      "SC",
                      "SD",
                      "TN",
                      "TX",
                      "UT",
                      "VT",
                      "VA",
                      "WA",
                      "WV",
                      "WI",
                      "WY",
                      "AE",
                      "AP",
                      "AS",
                      "GU",
                      "MP",
                      "PR",
                      "VI",
                      "AB",
                      "BC",
                      "MB",
                      "NB",
                      "NL",
                      "NT",
                      "NS",
                      "NU",
                      "ON",
                      "PE",
                      "QC",
                      "SK",
                      "YT"
                    ],
                    "x-nullable": true
                  }
                },
                "required": [
                  "apiLogin",
                  "apiTransKey",
                  "providerId",
                  "transactionId",
                  "billerName"
                ]
              }
            }
          }
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_searchbillerdirectory"
      }
    },
    "/getScheduledBillPayments": {
      "post": {
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduledBillPaymentsResponse"
                }
              }
            }
          }
        },
        "summary": "Get Scheduled Bill Payment\t",
        "description": "Used to retrieve information on pending/scheduled bill payments.",
        "requestBody": {
          "$ref": "#/components/requestBodies/post_getbalance"
        },
        "tags": [
          "Bill Payments"
        ],
        "operationId": "post_getscheduledbillpayments"
      }
    }
  },
  "info": {
    "title": "Program API",
    "version": "4.0"
  },
  "servers": [
    {
      "url": "//sandbox-api.gpsrv.com/intserv/4.0/"
    }
  ],
  "components": {
    "requestBodies": {
      "post_reverseadjustment": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "apiLogin": {
                  "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                  "type": "string"
                },
                "apiTransKey": {
                  "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                  "type": "string"
                },
                "providerId": {
                  "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                  "type": "integer",
                  "format": "int32"
                },
                "transactionId": {
                  "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                  "type": "string"
                },
                "accountNo": {
                  "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                  "type": "string",
                  "pattern": "^\\d{12}$|^\\d{16}$"
                },
                "verifyOnly": {
                  "description": "If a value of '1' is passed, the parameter data will be tested only. No transaction will be committed.\nPattern: `0` or `1`\nExample: `0`",
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    0,
                    1
                  ],
                  "x-nullable": true
                }
              },
              "required": [
                "apiLogin",
                "apiTransKey",
                "providerId",
                "transactionId",
                "accountNo"
              ]
            }
          }
        }
      },
      "post_getcard": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "apiLogin": {
                  "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                  "type": "string"
                },
                "apiTransKey": {
                  "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                  "type": "string"
                },
                "providerId": {
                  "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                  "type": "integer",
                  "format": "int32"
                },
                "transactionId": {
                  "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                  "type": "string"
                },
                "accountNo": {
                  "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique product Identifier used for internal Galileo processing and added security) or card_id (integer identifier of the card as found in RDF, getAccountCards(), and getCard()).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                  "type": "string",
                  "pattern": "^.+$"
                }
              },
              "required": [
                "apiLogin",
                "apiTransKey",
                "providerId",
                "transactionId",
                "accountNo"
              ]
            }
          }
        }
      },
      "post_getbalance": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "apiLogin": {
                  "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                  "type": "string"
                },
                "apiTransKey": {
                  "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                  "type": "string"
                },
                "providerId": {
                  "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                  "type": "integer",
                  "format": "int32"
                },
                "transactionId": {
                  "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                  "type": "string"
                },
                "accountNo": {
                  "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                  "type": "string",
                  "pattern": "^\\d{12}$|^\\d{16}$"
                }
              },
              "required": [
                "apiLogin",
                "apiTransKey",
                "providerId",
                "transactionId",
                "accountNo"
              ]
            }
          }
        }
      },
      "post_getpendingfees": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "apiLogin": {
                  "description": "Provider's Web Service Username as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 50 characters or less\nExample: `\"AbC123-9999\"`",
                  "type": "string"
                },
                "apiTransKey": {
                  "description": "Web Service Password as provided and authenticated by Galileo for the requesting IP Address.\nPattern: 15 characters or less\nExample: `\"4sb62fh6w4h7w34g\"`",
                  "type": "string"
                },
                "providerId": {
                  "description": "Galileo issued unique Provider identifier.\nPattern: 10 digits or less\nExample: `9999`",
                  "type": "integer",
                  "format": "int32"
                },
                "transactionId": {
                  "description": "A unique system generated ID number that identifies the API transaction with Galileo Processing systems. A UUID is preferred. This must be different for each transaction.\nPattern: 60 characters or less\nExample: `\"9845dk-39fdk3fj3-4483483478\"`",
                  "type": "string"
                },
                "accountNo": {
                  "description": "Can be either a PAN (the 16 digit card number) or PRN (a unique 12 digit account identifier).\nPattern: `PAN` or `PRN`\nExample: `\"074103447228\"`",
                  "type": "string",
                  "pattern": "^.+$"
                }
              },
              "required": [
                "apiLogin",
                "apiTransKey",
                "providerId",
                "transactionId",
                "accountNo"
              ]
            }
          }
        }
      }
    },
    "schemas": {
      "Echo": {
        "type": "object",
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "An ID that represents an API transaction"
          },
          "provider_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Store a related timestamp for reporting and troubleshooting purposes"
          },
          "provider_transaction_id": {
            "type": "string",
            "description": "Secondary transaction identifier (generated by a provider)"
          }
        },
        "required": []
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "act_id": {
            "type": "string",
            "description": "An identifier for an activity on an account"
          },
          "act_type": {
            "type": "string",
            "description": "Activity type of the transaction"
          },
          "post_ts": {
            "type": "string",
            "format": "date-time",
            "description": "The time stamp of a posted transaction"
          },
          "amt": {
            "type": "string",
            "description": "The transaction amount"
          },
          "details": {
            "type": "string",
            "description": "Information on a transaction or authorization"
          },
          "description": {
            "type": "string",
            "description": "Description of what a transaction was for"
          },
          "source_id": {
            "type": "string",
            "description": "A code unique to the source of the activity"
          },
          "bal_id": {
            "type": "string",
            "description": "Integer-based account number, also known as balance ID"
          },
          "prod_id": {
            "type": "string",
            "description": "Galileo generated product Id"
          },
          "auth_ts": {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of an authorization"
          },
          "trans_code": {
            "type": "string",
            "description": "The combination of act_type and otype"
          },
          "ach_transaction_id": {
            "type": "string",
            "description": "A unique ID for an ACH transaction"
          },
          "external_trans_id": {
            "type": "string",
            "description": "Non-Galileo id number for a transaction"
          },
          "original_auth_id": {
            "type": "string",
            "description": "The id of the originating authorization"
          },
          "network_id": {
            "type": "string",
            "description": "A code that identifies the card issuer"
          },
          "local_amt": {
            "type": "string",
            "description": "Amount of the transaction based on local currency"
          },
          "local_curr_code": {
            "type": "string",
            "description": "Currency code in use locally"
          },
          "settle_amt": {
            "type": "string",
            "description": "The amount of a single transaction that has been settled"
          },
          "settle_curr_code": {
            "type": "string",
            "description": "Currency code in use for the settle_amt"
          },
          "billing_amt": {
            "type": "string",
            "description": "The billing amount of a transaction"
          },
          "billing_curr_code": {
            "type": "string",
            "description": "Currency code in use for the billing_amt"
          }
        },
        "required": []
      },
      "ResponseData": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The start date for the transaction range"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The end date for the transaction range"
          },
          "number_of_pages": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of pages available in the paginated response"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The current page being retunred in the paginated response"
          },
          "total_record_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of records in the accounts list display"
          },
          "transaction_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of transactions listed in the response"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        },
        "required": []
      },
      "GetTransHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData"
          }
        },
        "required": []
      },
      "ResponseData1": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "format": "float",
            "description": "The balance (open to buy) of an account"
          },
          "balance_without_pending": {
            "type": "string",
            "description": "The balance of the account excluding pending transactions"
          },
          "currency_code": {
            "type": "string",
            "description": "A three-character ISO standard code to represent global currencies"
          },
          "pending_adjustments": {
            "type": "number",
            "format": "float",
            "description": "The total amount of pending adjustments"
          },
          "pending_billpay": {
            "type": "number",
            "format": "float",
            "description": "The total amount of pending bill payments"
          },
          "pending_purchase": {
            "type": "number",
            "format": "float",
            "description": "The total amount of pending purchase transactions"
          },
          "balance_without_auths": {
            "type": "number",
            "format": "float",
            "description": "The balance of the account excluding authorizations"
          }
        },
        "required": []
      },
      "GetBalanceResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData1"
          }
        },
        "required": []
      },
      "Authorizations": {
        "type": "object",
        "properties": {
          "auth_id": {
            "type": "string",
            "description": "ID for the authorization"
          },
          "details_formatted": {
            "type": "string",
            "description": "Information on a transaction or authorization formatted for human reading"
          },
          "amount": {
            "type": "string",
            "description": "Amount of the authorization"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the authorization"
          },
          "type": {
            "type": "string",
            "description": "The type of the authorization"
          },
          "mcc": {
            "type": "string",
            "description": "Merchant Category Code "
          },
          "merchant_id": {
            "type": "string",
            "description": "A unique ID assigned to a merchant location or terminal to identify that merchant with the association"
          },
          "acq_id": {
            "type": "string",
            "description": "The Acquirer ID"
          },
          "terminal_id": {
            "type": "string",
            "description": "A unique ID assigned to a specific point-of-origination terminal or workstation"
          },
          "can_be_expired": {
            "type": "string",
            "description": "Allow an expiration on an authorization. Either 1 or 0"
          },
          "original_auth_id": {
            "type": "string",
            "description": "The ID of the originating authorization"
          },
          "network_code": {
            "type": "string",
            "description": "A code that identifies the card issuer"
          },
          "local_amt": {
            "type": "string",
            "description": "Amount of the transaction based on local currency"
          },
          "local_curr_code": {
            "type": "string",
            "description": "Currency code in use locally"
          },
          "settle_amt": {
            "type": "string",
            "description": "The amount of a single transaction that has been settled"
          },
          "settle_curr_code": {
            "type": "string",
            "description": "Currency code in use for the settle_amt"
          },
          "billing_amt": {
            "type": "string",
            "description": "The billing amount of a transaction"
          },
          "billing_curr_code": {
            "type": "string",
            "description": "Currency code in use for the billing_amt"
          },
          "details": {
            "type": "string",
            "description": "Details on the authorizations"
          }
        },
        "required": []
      },
      "ResponseData2": {
        "type": "object",
        "properties": {
          "authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Authorizations"
            }
          }
        },
        "required": []
      },
      "GetAuthHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData2"
          }
        },
        "required": []
      },
      "ShipToAddress": {
        "type": "object",
        "properties": {
          "address_1": {
            "type": "string",
            "description": "The ship to address on the account"
          },
          "address_2": {
            "type": "string",
            "description": "Additional ship to address information"
          },
          "city": {
            "type": "string",
            "description": "City for the ship to address"
          },
          "state": {
            "type": "string",
            "description": "State for ship to address"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code for ship to address"
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166 country code for ship to address"
          }
        },
        "required": []
      },
      "Profile": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name on a profile"
          },
          "middle_name": {
            "type": "string",
            "description": "The middle name on a profile"
          },
          "last_name": {
            "type": "string",
            "description": "The last name on a profile"
          },
          "address_1": {
            "type": "string",
            "description": "Street and residence number on the account"
          },
          "address_2": {
            "type": "string",
            "description": "Additional address information on the account"
          },
          "city": {
            "type": "string",
            "description": "City for address information"
          },
          "state": {
            "type": "string",
            "description": "State for address information"
          },
          "postal_code": {
            "type": "string",
            "description": "A postal code for the address information"
          },
          "country_code": {
            "type": "string",
            "description": "The ISO 3166 international standard for country codes"
          },
          "home_phone": {
            "type": "string",
            "description": "The home phone number on a profile"
          },
          "mobile_phone": {
            "type": "string",
            "description": "The home phone number on a profile"
          },
          "email": {
            "type": "string",
            "description": "The email address on a profile"
          },
          "dob": {
            "type": "string",
            "format": "date",
            "description": "Date of birth associated with an account"
          },
          "ship_to_address": {
            "$ref": "#/components/schemas/ShipToAddress"
          },
          "express_mail": {
            "type": "string",
            "description": "Whether or not the profile uses express mail service"
          },
          "occupation": {
            "type": "string",
            "description": "The occupation of a person as listed in a profile"
          },
          "income_source": {
            "type": "string",
            "description": "How the person on a profile earns income"
          }
        },
        "required": []
      },
      "Transactions": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        },
        "required": []
      },
      "RelatedTransaction": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "Information on a transaction or authorization"
          },
          "amt": {
            "type": "number",
            "format": "float",
            "description": "Amount of a fee or transaction charge"
          },
          "post_ts": {
            "type": "string",
            "format": "date-time",
            "description": "The time stamp of a posted transaction"
          }
        },
        "required": []
      },
      "Fee": {
        "type": "object",
        "properties": {
          "fee_event_id": {
            "type": "string",
            "description": "Galileo generated fee transaction integer ID"
          },
          "type": {
            "type": "string",
            "description": "The type of fee"
          },
          "type_description": {
            "type": "string",
            "description": "A description of the type code"
          },
          "amt": {
            "type": "string",
            "description": "Amount of the fee charge"
          },
          "fee_date": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp for the time the fee was charged"
          },
          "card_id": {
            "type": "integer",
            "format": "int32",
            "description": "Integer identifier of the card as found in the raw data file (RDF). Unique identifier for a PAN."
          },
          "fee_description": {
            "type": "string",
            "description": "The description on a fee"
          },
          "related_transaction": {
            "$ref": "#/components/schemas/RelatedTransaction"
          }
        },
        "required": []
      },
      "SavingsInterest": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The start date for the period"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The end date for the period"
          },
          "accrual_interest": {
            "type": "string",
            "description": "Interest accrued on account"
          },
          "interest_ytd": {
            "type": "string",
            "description": "The year to date interest paid on a savings account"
          },
          "apy": {
            "type": "string",
            "description": "The amount earned with compound interest over the course of one year"
          }
        },
        "required": []
      },
      "Holds": {
        "type": "object",
        "properties": {
          "hold_id": {
            "type": "string",
            "description": "ID for the hold"
          },
          "create_dt": {
            "type": "string",
            "format": "date-time",
            "description": "When the hold was created"
          },
          "expiry_dt": {
            "type": "string",
            "format": "date-time",
            "description": "When the hold expires"
          },
          "source_id": {
            "type": "string",
            "description": "Source ID for the hold"
          },
          "change_ts": {
            "type": "string",
            "format": "date-time",
            "description": "When the hold as change"
          },
          "hold_type": {
            "type": "string",
            "description": "A code to specify the type of hold"
          },
          "ext_id": {
            "type": "string",
            "description": "An externally generated ID"
          },
          "dscr": {
            "type": "string",
            "description": "A description for the hold"
          },
          "originating_system_id": {
            "type": "string",
            "description": "An id to specify the source system for the hold"
          },
          "agent_id": {
            "type": "string",
            "description": "The agent that created the hold"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "The amount for the hold"
          },
          "xid": {
            "type": "string",
            "description": "The transaction ID associated with the hold"
          },
          "expiring_system_id": {
            "type": "string",
            "description": "The process that expired the hold"
          },
          "expiring_agent_id": {
            "type": "string",
            "description": "The agent that expired the hold"
          }
        },
        "required": []
      },
      "ResponseData3": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "status": {
            "type": "string",
            "description": "The status of the account"
          },
          "application_date": {
            "type": "string",
            "format": "date",
            "description": "The date the account application was received"
          },
          "balance": {
            "type": "number",
            "format": "float",
            "description": "The current balance of the account"
          },
          "currency_code": {
            "type": "string",
            "description": "A three-character code to represent global currencies"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The start date for the range that account information is displayed"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The end date for the range that account information is displayed"
          },
          "transaction_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of transactions listed in the response"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transactions"
            }
          },
          "authorization_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of authorizations listed in the response"
          },
          "authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Authorizations"
            }
          },
          "pending_fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fee"
            }
          },
          "savings_interest": {
            "$ref": "#/components/schemas/SavingsInterest"
          },
          "holds": {
            "type": "array",
            "description": "Holds being returned are dependant on product paramters",
            "items": {
              "$ref": "#/components/schemas/Holds"
            }
          }
        },
        "required": []
      },
      "GetAccountOverviewResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData3"
          }
        },
        "required": []
      },
      "Model": {
        "type": "object",
        "properties": {
          "model_name": {
            "type": "string",
            "description": "The model name"
          },
          "model_version": {
            "type": "integer",
            "format": "int32",
            "description": "Version number for the model used"
          },
          "code": {
            "type": "string",
            "description": "In a model run, lists the pass number"
          },
          "text": {
            "type": "string",
            "description": "Plain text description of the code value"
          }
        },
        "required": []
      },
      "ModelResults": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/Model"
          }
        },
        "required": []
      },
      "Aps": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Aps status"
          },
          "model_results": {
            "$ref": "#/components/schemas/ModelResults"
          },
          "date_time": {
            "type": "string",
            "format": "date-time",
            "description": "The date time"
          },
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "middle_name": {
            "type": "string",
            "description": "Middle name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "address_1": {
            "type": "string",
            "description": "First line for address information"
          },
          "address_2": {
            "type": "string",
            "description": "Second line for address information"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "primary_phone": {
            "type": "string",
            "description": "Primary phone"
          },
          "other_phone": {
            "type": "string",
            "description": "Other phone"
          }
        },
        "required": []
      },
      "Cip": {
        "type": "object",
        "properties": {
          "aps": {
            "$ref": "#/components/schemas/Aps"
          }
        },
        "required": []
      },
      "ResponseData4": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "product_id": {
            "type": "string",
            "description": "The product ID"
          },
          "galileo_account_number": {
            "type": "string",
            "description": "The Galileo account number"
          },
          "cip": {
            "$ref": "#/components/schemas/Cip"
          },
          "card_id": {
            "type": "string",
            "description": "ID associated with the card"
          },
          "card_number": {
            "type": "string",
            "description": "The PAN of the card"
          },
          "expiry_date": {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the card"
          },
          "card_security_code": {
            "type": "string",
            "description": "The card verification value (cvv)"
          },
          "emboss_line_2": {
            "type": "string",
            "description": "Second line card emboss text"
          }
        },
        "required": []
      },
      "CreateAccountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData4"
          }
        },
        "required": []
      },
      "ShipToAddress1": {
        "type": "object",
        "properties": {
          "address_1": {
            "type": "string",
            "description": "The ship to address on the account"
          },
          "address_2": {
            "type": "string",
            "description": "Additional ship to address information"
          },
          "city": {
            "type": "string",
            "description": "City for the ship to address"
          },
          "state": {
            "type": "string",
            "description": "State for ship to address"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code for ship to address"
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166 country code for ship to address"
          }
        },
        "required": []
      },
      "Customer": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name on a profile"
          },
          "middle_name": {
            "type": "string",
            "description": "The middle name on a profile"
          },
          "last_name": {
            "type": "string",
            "description": "The last name on a profile"
          },
          "address_1": {
            "type": "string",
            "description": "Street and residence number on the account"
          },
          "address_2": {
            "type": "string",
            "description": "Additional address information on the account"
          },
          "city": {
            "type": "string",
            "description": "City for address information"
          },
          "state": {
            "type": "string",
            "description": "State for address information"
          },
          "postal_code": {
            "type": "string",
            "description": "A postal code for the address information"
          },
          "country_code": {
            "type": "string",
            "description": "The ISO 3166 international standard for country codes"
          },
          "phone": {
            "type": "string",
            "description": "The home phone number on a profile"
          },
          "mobile_phone": {
            "type": "string",
            "description": "The home phone number on a profile"
          },
          "email": {
            "type": "string",
            "description": "The email address on a profile"
          },
          "dob": {
            "type": "string",
            "format": "date",
            "description": "Date of birth associated with an account"
          },
          "ship_to_address": {
            "$ref": "#/components/schemas/ShipToAddress1"
          },
          "express_mail": {
            "type": "string",
            "description": "Whether or not the profile uses express mail service"
          },
          "occupation": {
            "type": "string",
            "description": "The occupation of a person as listed in a profile"
          },
          "income_source": {
            "type": "string",
            "description": "How the person on a profile earns income"
          }
        },
        "required": []
      },
      "Accounts": {
        "type": "object",
        "properties": {
          "active": {
            "type": "string",
            "description": "Indicates if an account is active or not- Y or N"
          },
          "application_date": {
            "type": "string",
            "format": "date",
            "description": "The date an application was made to create an account"
          },
          "bill_cycle_day": {
            "type": "string",
            "description": "Day of the month that the customer is billed"
          },
          "galileo_account_number": {
            "type": "string",
            "description": "Galileo generated integer account number, also known as balance ID"
          },
          "group_id": {
            "type": "string",
            "description": "Integer value used for tracking the location (store, entity, etc...) where the customer was acquired"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "product_id": {
            "type": "string",
            "description": "A unique product identifier"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Date the account was activated"
          },
          "status": {
            "type": "string",
            "description": "The status of the account"
          },
          "cards": {
            "type": "string"
          }
        },
        "required": []
      },
      "ResponseData5": {
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Accounts"
            }
          }
        },
        "required": []
      },
      "GetAccountCardsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData5"
          }
        },
        "required": []
      },
      "ResponseData6": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "account_status": {
            "type": "string",
            "description": "The condition of the account after a modification"
          }
        },
        "required": []
      },
      "ModifyStatusResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData6"
          }
        },
        "required": []
      },
      "ResponseData7": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "product_id": {
            "type": "string",
            "description": "Galileo generated integer ID for the product"
          },
          "galileo_account_number": {
            "type": "string",
            "description": "Galileo generated integer account number, also known as balance ID"
          }
        },
        "required": []
      },
      "AddAccountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData7"
          }
        },
        "required": []
      },
      "ShipToAddress2": {
        "type": "object",
        "properties": {
          "address_1": {
            "type": "string",
            "description": "The ship to address on the account"
          },
          "address_2": {
            "type": "string",
            "description": "Additional ship to address information"
          },
          "city": {
            "type": "string",
            "description": "City for the ship to address"
          },
          "state": {
            "type": "string",
            "description": "State for ship to address"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code for ship to address"
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166 country code for ship to address"
          }
        },
        "required": []
      },
      "CustomerProfile": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name on a profile"
          },
          "middle_name": {
            "type": "string",
            "description": "The middle name on a profile"
          },
          "last_name": {
            "type": "string",
            "description": "The last name on a profile"
          },
          "address_1": {
            "type": "string",
            "description": "Street and residence number on the account"
          },
          "address_2": {
            "type": "string",
            "description": "Additional address information on the account"
          },
          "city": {
            "type": "string",
            "description": "City for address information"
          },
          "state": {
            "type": "string",
            "description": "State for address information"
          },
          "postal_code": {
            "type": "string",
            "description": "A postal code for the address information"
          },
          "country_code": {
            "type": "string",
            "description": "The ISO 3166 international standard for country codes"
          },
          "phone": {
            "type": "string",
            "description": "The home phone number on a profile"
          },
          "mobile_phone": {
            "type": "string",
            "description": "The home phone number on a profile"
          },
          "email": {
            "type": "string",
            "description": "The email address on a profile"
          },
          "ship_to_address": {
            "$ref": "#/components/schemas/ShipToAddress2"
          },
          "express_mail": {
            "type": "string",
            "description": "Whether or not the profile uses express mail service"
          },
          "related_accounts": {
            "type": "integer",
            "format": "int32",
            "description": "The number of related accounts"
          },
          "occupation": {
            "type": "string",
            "description": "The occupation of a person as listed in a profile"
          },
          "income_source": {
            "type": "string",
            "description": "How the person on a profile earns income"
          },
          "emboss_line_2": {
            "type": "string",
            "description": "Second embossed line on a card"
          }
        },
        "required": []
      },
      "ResponseData8": {
        "type": "object",
        "properties": {
          "customer_profile": {
            "$ref": "#/components/schemas/CustomerProfile"
          }
        },
        "required": []
      },
      "UpdateAccountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData8"
          }
        },
        "required": []
      },
      "ResponseData9": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "format": "float",
            "description": "The amount of money in a savings or checking account"
          },
          "ach_transaction_id": {
            "type": "string"
          }
        },
        "required": []
      },
      "CreateACHTransactionResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData9"
          }
        },
        "required": []
      },
      "ResponseData10": {
        "type": "object",
        "properties": {
          "biller_id": {
            "type": "string",
            "description": "Positive integer value of a customer configured biller"
          },
          "biller_name": {
            "type": "string",
            "description": "The paper biller name"
          }
        },
        "required": []
      },
      "AddPaperBillerResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData10"
          }
        },
        "required": []
      },
      "ModifyPaperBillerResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "ResponseData11": {
        "type": "object",
        "properties": {
          "biller_id": {
            "type": "string",
            "description": "Positive integer value used to identify the biller"
          },
          "name": {
            "type": "string",
            "description": "The RPPS biller name"
          }
        },
        "required": []
      },
      "AddRPPSBillerResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData11"
          }
        },
        "required": []
      },
      "ResponseData12": {
        "type": "object",
        "properties": {
          "billpay_transaction_id": {
            "type": "string",
            "description": "An ID assigned to a bill payment transaction"
          },
          "old_balance": {
            "type": "number",
            "format": "float",
            "description": "The balance of the account before the payment is canceled"
          },
          "new_balance": {
            "type": "number",
            "format": "float",
            "description": "The balance of the account after the payment is canceled"
          }
        },
        "required": []
      },
      "CancelBillPaymentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData12"
          }
        },
        "required": []
      },
      "ResponseData13": {
        "type": "object",
        "properties": {
          "billpay_transaction_id": {
            "type": "string",
            "description": "An ID assigned to a bill payment transaction"
          },
          "old_balance": {
            "type": "number",
            "format": "float",
            "description": "The balance of the account before the payment is processed"
          },
          "new_balance": {
            "type": "number",
            "format": "float",
            "description": "The balance on the account after the payment is processed"
          },
          "process_date": {
            "type": "string",
            "format": "date",
            "description": "The date the payment was processed"
          },
          "fee_amount": {
            "type": "number",
            "format": "float",
            "description": "The fee amount assessed for this bill payment record"
          },
          "maximum_amount": {
            "type": "number",
            "format": "float",
            "description": "A dollar limit on each bill-pay transaction"
          }
        },
        "required": []
      },
      "CreateBillPaymentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData13"
          }
        },
        "required": []
      },
      "Biller": {
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string",
            "description": "The account number of the biller entity"
          },
          "address_1": {
            "type": "string",
            "description": "Street and residence number on the account"
          },
          "address_2": {
            "type": "string",
            "description": "Additional address information on the account"
          },
          "biller_id": {
            "type": "string",
            "description": "An ID assigned to the biller"
          },
          "city": {
            "type": "string",
            "description": "City for address information"
          },
          "name": {
            "type": "string",
            "description": "A name used to identify a biller entity"
          },
          "nickname": {
            "type": "string",
            "description": "A nickname used to identify a biller entity"
          },
          "phone": {
            "type": "string",
            "description": "The main phone number on the biller account"
          },
          "postal_code": {
            "type": "string",
            "description": "A postal code for the address information"
          },
          "state_province": {
            "type": "string",
            "description": "State for address information"
          },
          "type": {
            "type": "string",
            "description": "The type of biller entity"
          }
        },
        "required": []
      },
      "ResponseData14": {
        "type": "object",
        "properties": {
          "billers": {
            "$ref": "#/components/schemas/Biller"
          },
          "found": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of billers found"
          }
        },
        "required": []
      },
      "GetBillersResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData14"
          }
        },
        "required": []
      },
      "RemoveBillerResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "BillPayments": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "billpay_transaction_id": {
            "type": "string",
            "description": "An ID assigned to a bill payment transaction"
          },
          "amount": {
            "type": "string",
            "description": "The amount of the bill payment"
          },
          "process_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date the payment was processed"
          },
          "biller_id": {
            "type": "string",
            "description": "Positive integer value of a customer configured biller"
          },
          "name": {
            "type": "string",
            "description": "The name of the biller"
          },
          "nickname": {
            "type": "string",
            "description": "A nickname used to identify a biller entity"
          },
          "status": {
            "type": "string",
            "description": "The status of the payment"
          },
          "type": {
            "type": "string",
            "description": "The type of biller entity"
          },
          "external_trans_id": {
            "type": "string",
            "description": "Non-Galileo id number for a transaction"
          },
          "printed_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date the bill payment was sent"
          },
          "cleared_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date the bill payment cleared the bank"
          }
        },
        "required": []
      },
      "ResponseData15": {
        "type": "object",
        "properties": {
          "found": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of bill payments found"
          },
          "bill_payments": {
            "$ref": "#/components/schemas/BillPayments"
          }
        },
        "required": []
      },
      "GetBillPayHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData15"
          }
        },
        "required": []
      },
      "ModifyRPPSBillerResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "EmbossedCard": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the embossed card"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "The date when the cardholder first applied for the card"
          },
          "emboss_date": {
            "type": "string",
            "format": "date",
            "description": "The date the card was sent to be manufactured"
          },
          "expiry_date": {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the card"
          },
          "shipping_type": {
            "type": "string",
            "description": "The shipping type used to ship the cards to the cardholder, Standard or Express Mail"
          }
        },
        "required": []
      },
      "FreezeInfo": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Associated with the Frozen status, and the start and end date of a card. Frozen status=card locked out.Unfrozen status=card usable. "
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date the freeze was activated"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date the freeze was ended"
          }
        },
        "required": []
      },
      "SpendControls": {
        "type": "object",
        "properties": {
          "available_credit": {
            "type": "string",
            "description": "The amount available to be charged to a credit card"
          },
          "single_use": {
            "type": "string",
            "description": "A flag that indicated an alias credit card number, exhausted after one use"
          },
          "credit_limit": {
            "type": "string",
            "description": "The maximum outstanding balance allowed on a credit card"
          }
        },
        "required": []
      },
      "ResponseData16": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "string",
            "description": "A PAN or 16 digit card number"
          },
          "expiry_date": {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the card"
          },
          "card_security_code": {
            "type": "string",
            "description": "The card verification value (cvv)"
          },
          "status": {
            "type": "string",
            "description": "The status of the card"
          },
          "card_id": {
            "type": "string",
            "description": "Integer identifier of the card as found in the raw data file (RDF). Unique identifier for a PAN."
          },
          "external_card_id": {
            "type": "string",
            "description": "External card identity"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "first_name": {
            "type": "string",
            "description": "A person's first name as listed on the account"
          },
          "middle_name": {
            "type": "string",
            "description": "A person's middle name as listed on the account"
          },
          "last_name": {
            "type": "string",
            "description": "A person's last name as listed on the account"
          },
          "encrypted_card_number": {
            "type": "string",
            "description": "Encrypted number for the card"
          },
          "encrypted_expiry_date": {
            "type": "string",
            "description": "Encrypted expiration date for the card"
          },
          "embossed_cards": {
            "$ref": "#/components/schemas/EmbossedCard"
          },
          "freeze_info": {
            "$ref": "#/components/schemas/FreezeInfo"
          },
          "pin_fail_count": {
            "type": "string",
            "description": "A flag for the PIN fail count (0 or -1)"
          },
          "pin_fail_date": {
            "type": "string",
            "format": "date",
            "description": "Date a PIN fail was recorded"
          },
          "spend_controls": {
            "$ref": "#/components/schemas/SpendControls"
          }
        },
        "required": []
      },
      "GetCardResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData16"
          }
        },
        "required": []
      },
      "ResponseData17": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "A token that is used to authenticate a HTTP post for sensitive data, such as PAN or a PIN"
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time a token expires"
          }
        },
        "required": []
      },
      "GetAccessTokenResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData17"
          }
        },
        "required": []
      },
      "ResponseData18": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "product_id": {
            "type": "string",
            "description": "Galileo generated integer"
          },
          "galileo_account_number": {
            "type": "string",
            "description": "Galileo generated integer account number, also known as balance ID"
          },
          "card_id": {
            "type": "string",
            "description": "An ID used for the card"
          }
        },
        "required": []
      },
      "AddCardResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData18"
          }
        },
        "required": []
      },
      "Apple": {
        "type": "object",
        "properties": {
          "encryptedPassData": {
            "type": "string"
          },
          "ephemeralPublicKey": {
            "type": "string"
          },
          "activationData": {
            "type": "string"
          }
        },
        "required": []
      },
      "Google": {
        "type": "object",
        "properties": {
          "opaquePaymentCard": {
            "type": "string"
          }
        },
        "required": []
      },
      "Samsung": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "string"
          }
        },
        "required": []
      },
      "ProvisioningRequestData": {
        "type": "object",
        "properties": {
          "apple": {
            "$ref": "#/components/schemas/Apple"
          },
          "google": {
            "$ref": "#/components/schemas/Google"
          },
          "samsung": {
            "$ref": "#/components/schemas/Samsung"
          }
        },
        "required": []
      },
      "ResponseData19": {
        "type": "object",
        "properties": {
          "provisioning_request_data": {
            "$ref": "#/components/schemas/ProvisioningRequestData"
          }
        },
        "required": []
      },
      "CreateProvisioningResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData19"
          }
        },
        "required": []
      },
      "PingResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "ResponseData20": {
        "type": "object",
        "properties": {
          "auth_response_code": {
            "type": "string",
            "description": "A code used to give the status of the simulated auth"
          },
          "auth_response_description": {
            "type": "string",
            "description": "A description of the authorization response"
          },
          "auth_id": {
            "type": "string",
            "description": "An ID associated with the simulated auth"
          }
        },
        "required": []
      },
      "CreateSimulatedCardAuthResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData20"
          }
        },
        "required": []
      },
      "ResponseData21": {
        "type": "object",
        "properties": {
          "settle_response_code": {
            "type": "string",
            "description": "A code used to give the status of the simulated auth settlement"
          },
          "settle_response_description": {
            "type": "string",
            "description": "A description of the settlement response"
          },
          "settle_dtl": {
            "type": "string",
            "description": "An ID associated with the simulated settlement"
          }
        },
        "required": []
      },
      "CreateSimulatedCardSettleResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData21"
          }
        },
        "required": []
      },
      "TransferToAccount": {
        "type": "object",
        "properties": {
          "old_balance": {
            "type": "number",
            "format": "float",
            "description": "The old balance on the destination account"
          },
          "new_balance": {
            "type": "number",
            "format": "float",
            "description": "The new balance on the destination account"
          }
        },
        "required": []
      },
      "ResponseData22": {
        "type": "object",
        "properties": {
          "old_balance": {
            "type": "number",
            "format": "float",
            "description": "The old balance on the source account"
          },
          "new_balance": {
            "type": "number",
            "format": "float",
            "description": "The new balance on the source account"
          },
          "adjustment_trans_id": {
            "type": "string",
            "description": "The trans ID associated with the adjustment"
          },
          "transfer_account_id": {
            "type": "string",
            "description": "The account associated with the transfer"
          },
          "sender_fee_amount": {
            "type": "number",
            "format": "float",
            "description": "The fee applied to the C2C transfer"
          },
          "payment_trans_id": {
            "type": "string",
            "description": "The transaction ID"
          },
          "transfer_to_account": {
            "$ref": "#/components/schemas/TransferToAccount"
          }
        },
        "required": []
      },
      "CreateAccountTransferResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData22"
          }
        },
        "required": []
      },
      "Deposit": {
        "type": "object",
        "properties": {
          "amt": {
            "type": "string",
            "description": "A fee or transaction charge"
          },
          "in_ts": {
            "type": "string",
            "format": "date-time",
            "description": "An initial time and date stamp for the creation of the record"
          },
          "effective_dt": {
            "type": "string",
            "format": "date",
            "description": "Attached to an ACH record that specifies when the payment posts"
          },
          "name": {
            "type": "string",
            "description": " the name of the account receiving the deposit"
          },
          "xid": {
            "type": "string",
            "description": "An account ID that can be used instead of the PAN"
          },
          "prog_id": {
            "type": "string",
            "description": "An ID number unique to a program"
          },
          "batch_hdr": {
            "type": "string",
            "description": "A record of a batch of transactions"
          },
          "dest_acct_no": {
            "type": "string",
            "description": "The destination account for a pending deposit"
          },
          "source_inst_id": {
            "type": "string",
            "description": "An ID (usually a bank routing number) for the institution that originated the deposit"
          },
          "source_inst_name": {
            "type": "string",
            "description": "An ID (usually a bank routing number) for the institution that originated the deposit"
          },
          "status": {
            "type": "string",
            "description": "The status of the deposit"
          },
          "trans_type": {
            "type": "string",
            "description": "Transaction Type"
          },
          "addenda_rec": {
            "type": "string",
            "description": "Supplemental information to identify a deposit"
          },
          "ach_trans_id": {
            "type": "string",
            "description": "A unique ID for an ACH transaction"
          }
        },
        "required": []
      },
      "ResponseData23": {
        "type": "object",
        "properties": {
          "deposit_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of deposits in the response"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The page number to be retrieved in the context of recordset paging"
          },
          "total_record_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of deposit records"
          },
          "number_of_pages": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of pages"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "The start date of a response"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "The end date of a response"
          },
          "deposits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Deposit"
            }
          }
        },
        "required": []
      },
      "GetDepositHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData23"
          }
        },
        "required": []
      },
      "Sums": {
        "type": "object",
        "properties": {
          "unsettled": {
            "type": "number",
            "format": "float",
            "description": "The total sum of transactions that have not been settled yet"
          },
          "settled": {
            "type": "number",
            "format": "float",
            "description": "The amount of a singled transaction that has been settled"
          },
          "adjustment": {
            "type": "number",
            "format": "float",
            "description": "The sum amount of adjustments"
          },
          "fee": {
            "type": "number",
            "format": "float",
            "description": "The sum amount charged for a service"
          },
          "payment": {
            "type": "number",
            "format": "float",
            "description": "The sum amount of payments"
          }
        },
        "required": []
      },
      "Transaction1": {
        "type": "object",
        "properties": {
          "is_savings": {
            "type": "string",
            "description": "Flags the transaction as being made to a savings account or not."
          },
          "deny_code": {
            "type": "string",
            "description": "A code associated with a reason that a transaction is denied."
          },
          "disputable": {
            "type": "string",
            "description": "Flag to allow a disputation on a deny."
          },
          "act_type": {
            "type": "string",
            "description": "Activity type of the transaction"
          },
          "act_type_description": {
            "type": "string",
            "description": "Human readable description of an activity type."
          },
          "post_ts": {
            "type": "string",
            "format": "date-time",
            "description": "The time stamp of a posted transaction"
          },
          "amt": {
            "type": "string",
            "description": "The transaction amount"
          },
          "details": {
            "type": "string",
            "description": "Information on a transaction or authorization"
          },
          "description": {
            "type": "string",
            "description": "Description of what a transaction was for"
          },
          "source_id": {
            "type": "string",
            "description": "A code unique to the source of the activity"
          },
          "type": {
            "type": "string",
            "description": "A classification of the activity sub-type."
          },
          "type_description": {
            "type": "string",
            "description": "The meaning of the type code."
          },
          "bal_id": {
            "type": "string",
            "description": "Integer-based account number, also known as balance ID"
          },
          "prod_id": {
            "type": "string",
            "description": "Galileo generated product Id"
          },
          "auth_ts": {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of an authorization"
          },
          "trans_code": {
            "type": "string",
            "description": "The combination of act_type and otype"
          },
          "ach_transaction_id": {
            "type": "string",
            "description": "A unique ID for an ACH transaction"
          },
          "external_trans_id": {
            "type": "string",
            "description": "Non-Galileo id number for a transaction"
          },
          "original_auth_id": {
            "type": "string",
            "description": "The id of the originating authorization"
          },
          "network_id": {
            "type": "string",
            "description": "A code that identifies the card issuer"
          },
          "calculated_balance": {
            "type": "string",
            "description": "The balance on an account after a transaction is complete."
          },
          "arn": {
            "type": "string",
            "description": "Id for a trans used with some association networks."
          },
          "merchant_id": {
            "type": "string",
            "description": "A unique number assigned to a merchant location or terminal to identify that merchant with theassociation."
          },
          "ach_trans_id": {
            "type": "string",
            "description": "A unique ID for an ACH transaction."
          },
          "prior_id": {
            "type": "string",
            "description": "Represents the original auth_id and indicates that the current item is a reversal. Integer type value."
          },
          "card_id": {
            "type": "string",
            "description": "Integer identifier of the card as found in the raw data file (RDF). Unique identifier for a PAN."
          },
          "formatted_merchant_desc": {
            "type": "string",
            "description": "A parsed authorization merchant description."
          },
          "network_code": {
            "type": "string",
            "description": "A code that identifies the card issuer. V=Visa M=MC D=MC Debit"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "mcc_code": {
            "type": "string",
            "description": "The merchant category code associated with the transaction."
          },
          "local_amt": {
            "type": "string",
            "description": "Amount of the transaction based on local currency"
          },
          "local_curr_code": {
            "type": "string",
            "description": "Currency code in use locally"
          },
          "settle_amt": {
            "type": "string",
            "description": "The amount of a single transaction that has been settled"
          },
          "settle_curr_code": {
            "type": "string",
            "description": "Currency code in use for the settle_amt"
          },
          "billing_amt": {
            "type": "string",
            "description": "The billing amount of a transaction"
          },
          "billing_curr_code": {
            "type": "string",
            "description": "Currency code in use for the billing_amt"
          }
        },
        "required": []
      },
      "ResponseData24": {
        "type": "object",
        "properties": {
          "transaction_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of transactions listed in the response"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The page number to be retrieved in the context of recordset paging"
          },
          "total_record_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of records in the accounts list display"
          },
          "number_of_pages": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of pages in the accounts list display"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the response"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the response"
          },
          "sums": {
            "$ref": "#/components/schemas/Sums"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction1"
            }
          },
          "beginning_balance": {
            "type": "string",
            "description": "The balance at the time of the most recent transaction being returned."
          }
        },
        "required": []
      },
      "GetAllTransHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData24"
          }
        },
        "required": []
      },
      "ResponseData25": {
        "type": "object",
        "properties": {
          "fees": {
            "type": "array",
            "description": "A data structure that contains information on one or more fees",
            "items": {
              "$ref": "#/components/schemas/Fee"
            }
          }
        },
        "required": []
      },
      "GetPendingFeesResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData25"
          }
        },
        "required": []
      },
      "ResponseData26": {
        "type": "object",
        "properties": {
          "accrual_interest": {
            "type": "number",
            "format": "float",
            "description": "Interest accrued on account"
          },
          "interest_ytd": {
            "type": "string",
            "description": "The year to date interest paid on a savings account"
          },
          "apy": {
            "type": "string",
            "description": "The actual interest rate used to calculate compound interest over the course of one year"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The start date of a response"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The end date of a response"
          }
        },
        "required": []
      },
      "GetSavingsInterestResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData26"
          }
        },
        "required": []
      },
      "Payment": {
        "type": "object",
        "properties": {
          "pmt_id": {
            "type": "string",
            "description": "ID assigned to the specific payment"
          },
          "details": {
            "type": "string",
            "description": "Description of the payment"
          },
          "amount": {
            "type": "string",
            "description": "An amount of a payment"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the payment"
          },
          "source_id": {
            "type": "string",
            "description": "A code unique to the source of the payment"
          },
          "ach_transaction_id": {
            "type": "string",
            "description": "A unique ID for an ACH transaction"
          },
          "external_trans_id": {
            "type": "string",
            "description": "Non-Galileo ID for a transaction"
          },
          "hold_days": {
            "type": "string",
            "description": "The number of days on a hold. Specific to a pending payment, usually due to load limt violations"
          }
        },
        "required": []
      },
      "Payments": {
        "type": "object",
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        },
        "required": []
      },
      "ResponseData27": {
        "type": "object",
        "properties": {
          "transaction_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of transactions listed in the response"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The page number to be retrieved in the context of recordset paging"
          },
          "total_record_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of records in the accounts list display"
          },
          "number_of_pages": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of pages in the accounts list display"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The start date for the response"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The end date for the response"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payments"
            }
          }
        },
        "required": []
      },
      "GetPaymentHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData27"
          }
        },
        "required": []
      },
      "Fee1": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "fee_id": {
            "type": "string",
            "description": "The ID of the fee record"
          },
          "fee_date": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp for the time the fee was charged"
          },
          "amt": {
            "type": "string",
            "description": "A fee or transaction amount"
          },
          "status": {
            "type": "string",
            "description": "The status of a fee event record return in this method"
          },
          "status_description": {
            "type": "string",
            "description": "A spelled-out status of the fee"
          },
          "type": {
            "type": "string",
            "description": "The type of fee"
          },
          "type_description": {
            "type": "string",
            "description": "A description of the type code"
          },
          "fee_event_id": {
            "type": "string",
            "description": "An ID for the fee event"
          }
        },
        "required": []
      },
      "Fees": {
        "type": "object",
        "properties": {
          "fee": {
            "$ref": "#/components/schemas/Fee1"
          }
        },
        "required": []
      },
      "ResponseData28": {
        "type": "object",
        "properties": {
          "fee_count": {
            "type": "integer",
            "format": "int32",
            "description": "A count of fees being recorded on"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The page number to be retrieved in the context of recordset paging"
          },
          "total_record_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of records in the accounts list display"
          },
          "number_of_pages": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of pages in the accounts list display"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The start date of the response"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The end date of the response"
          },
          "fees": {
            "$ref": "#/components/schemas/Fees"
          }
        },
        "required": []
      },
      "GetFeeHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData28"
          }
        },
        "required": []
      },
      "ResponseData29": {
        "type": "object",
        "properties": {
          "fees_ytd": {
            "type": "number",
            "format": "float",
            "description": "Fees year-to-date"
          },
          "fees_mtd": {
            "type": "number",
            "format": "float",
            "description": "Fees month-to-date"
          }
        },
        "required": []
      },
      "GetFeeSummaryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData29"
          }
        },
        "required": []
      },
      "ResponseData30": {
        "type": "object",
        "properties": {
          "OverdraftAccountNo": {
            "type": "string",
            "description": "PRN of the overdraft account"
          },
          "Available": {
            "type": "number",
            "format": "float",
            "description": "Available overdraft limit"
          },
          "Payback": {
            "type": "number",
            "format": "float",
            "description": "Payback amount"
          },
          "PaybackWithPendingFees": {
            "type": "number",
            "format": "float",
            "description": "The posted open to buy, including pending fees"
          },
          "RawBalance": {
            "type": "number",
            "format": "float",
            "description": "The actual open to buy of the overdraft account"
          },
          "ActualWithPrimary": {
            "type": "number",
            "format": "float",
            "description": "The actual balance of the primary account if overdraft was combined with it"
          },
          "Limit": {
            "type": "number",
            "format": "float",
            "description": "The available limit on the overdraft account (the most the cardholder could use on their overdraft if nothing was owed)"
          },
          "RawLimit": {
            "type": "number",
            "format": "float",
            "description": "The limit that was set on the overdraft account (the actual limit available to the cardholder may be less if an initial fee was charged)"
          },
          "Frozen": {
            "type": "string",
            "description": "A flag indicating whether the overdraft account has been frozen or not (the value '1' indicating that it is frozen)"
          }
        },
        "required": []
      },
      "GetOverdraftBalanceResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData30"
          }
        },
        "required": []
      },
      "ResponseData31": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "description": "The unique identifier for the enrollment application"
          }
        },
        "required": []
      },
      "StartEnrollmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData31"
          }
        },
        "required": []
      },
      "EnrollmentData": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "A person's first name as listed on the account"
          },
          "middle_name": {
            "type": "string",
            "description": "\tA person's middle name as listed on the account"
          },
          "last_name": {
            "type": "string",
            "description": "A person's last name as listed on the account"
          },
          "address_1": {
            "type": "string",
            "description": "Street and residence number on the account"
          },
          "address_2": {
            "type": "string",
            "description": "Additional address information on the account"
          },
          "city": {
            "type": "string",
            "description": "City for address information"
          },
          "state": {
            "type": "string",
            "description": "State for address information"
          },
          "postal_code": {
            "type": "string",
            "description": "A postal code for the address information"
          },
          "country_code": {
            "type": "string",
            "description": "The ISO 3166 international standard for country codes. Used to identify a country as a part of a profile."
          },
          "primary_phone": {
            "type": "string",
            "description": "The main phone number on account"
          },
          "mobile_phone": {
            "type": "string",
            "description": "The mobile phone number of a person as listed in a profile"
          },
          "other_phone": {
            "type": "string",
            "description": "A phone listed on the account"
          },
          "web_uid": {
            "type": "string",
            "description": "Website user name for the cardholder (if Galileo Processing hosts the website)"
          },
          "secret_question": {
            "type": "string",
            "description": "A secret question associated with the account for access verification"
          },
          "id": {
            "type": "string",
            "description": "A form of Cardholder ID"
          },
          "idType": {
            "type": "integer",
            "format": "int32",
            "description": "Identifies the type of id used in the id response field"
          },
          "id2": {
            "type": "string",
            "description": "A form of Cardholder ID. Used for a secondary ID."
          },
          "idType2": {
            "type": "integer",
            "format": "int32",
            "description": "Identifies the type of id used in the id2 response field"
          }
        },
        "required": []
      },
      "ResponseData32": {
        "type": "object",
        "properties": {
          "enrollment_data": {
            "$ref": "#/components/schemas/EnrollmentData"
          },
          "cip": {
            "$ref": "#/components/schemas/Cip"
          }
        },
        "required": []
      },
      "GetEnrollmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData32"
          }
        },
        "required": []
      },
      "ResponseData33": {
        "type": "object",
        "properties": {
          "max_credit_limit": {
            "type": "string",
            "description": "Max credit limit"
          }
        },
        "required": []
      },
      "UpdateEnrollmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData33"
          }
        },
        "required": []
      },
      "Application": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "description": "The unique identifier for the enrollment application"
          },
          "appDate": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp for the application transaction"
          },
          "prodId": {
            "type": "integer",
            "format": "int32",
            "description": "Galileo generated product Id of the account"
          },
          "id": {
            "type": "string",
            "description": "Helps prove a cardholder identity. Generally sent as parameters to createAccount but can be put into the system via other systems, such as the card holder website."
          },
          "idType": {
            "type": "integer",
            "format": "int32",
            "description": "The type of id for the id field"
          },
          "id2": {
            "type": "string",
            "description": "Helps prove a cardholder identity. Generally sent as parameters to createAccount but can be put into the system via other systems, such as the card holder website."
          },
          "idType2": {
            "type": "integer",
            "format": "int32",
            "description": "The type of id for the id2 field"
          },
          "locale": {
            "type": "string",
            "description": "Language code in use locally"
          },
          "firstName": {
            "type": "string",
            "description": "A person's first name as listed on the account"
          },
          "middleName": {
            "type": "string",
            "description": "A person's middle name as listed on the account"
          },
          "lastName": {
            "type": "string",
            "description": "A person's last name as listed on the account"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Birthday of the person associated with the account"
          },
          "address1": {
            "type": "string",
            "description": "Street and residence number on the account"
          },
          "address2": {
            "type": "string",
            "description": "Additional address information on the account"
          },
          "city": {
            "type": "string",
            "description": "City for address information"
          },
          "state": {
            "type": "string",
            "description": "State for address information"
          },
          "postalCode": {
            "type": "string",
            "description": "A postal code for the address information"
          },
          "expressMail": {
            "type": "string",
            "description": "Does the profile use express mail service?"
          },
          "primaryPhone": {
            "type": "string",
            "description": "The main phone number on account"
          },
          "mobilePhone": {
            "type": "string",
            "description": "The mobile phone number of a person as listed in a profile"
          },
          "mobileCarrierId": {
            "type": "string",
            "description": "A code for the mobile phone service provider"
          },
          "otherPhone": {
            "type": "string",
            "description": "A phone listed on the account"
          },
          "email": {
            "type": "string",
            "description": "The email address on a profile"
          },
          "userData": {
            "type": "string",
            "description": "Identifier external to the Galileo platform to be stored and associated with the respective account"
          },
          "monthlyIncome": {
            "type": "string",
            "description": "The person on the profile's gross income for one month"
          },
          "monthlyLiab": {
            "type": "string",
            "description": "The person on the profile's total liabilities for one month"
          }
        },
        "required": []
      },
      "ResponseData34": {
        "type": "object",
        "properties": {
          "processed_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date the response data was processed"
          },
          "app_trans_id": {
            "type": "string",
            "format": "date-time",
            "description": "The unique identifier for the enrollment application"
          },
          "max_credit_limit": {
            "type": "number",
            "format": "float",
            "description": "Max credit limit"
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          }
        },
        "required": []
      },
      "VerifyEnrollmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData34"
          }
        },
        "required": []
      },
      "NewAccount": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "product_id": {
            "type": "string",
            "description": "Galileo generated product Id of the account"
          },
          "galileo_account_number": {
            "type": "string",
            "description": "Galileo generated integer account number, also known as balance ID"
          },
          "card_id": {
            "type": "string",
            "description": "Integer identifier of the card as found in the raw data file (RDF). Unique identifier for a PAN."
          },
          "card_number": {
            "type": "string",
            "description": "A PAN or 16 digit card number"
          },
          "expiry_date": {
            "type": "string",
            "description": "Expiration date of the card"
          },
          "card_security_code": {
            "type": "string",
            "description": "The card verification value (cvv), is a card anti-fraud measure"
          },
          "max_credit_limit": {
            "type": "string",
            "description": "Max credit limit"
          },
          "cip": {
            "$ref": "#/components/schemas/Cip"
          }
        },
        "required": []
      },
      "ResponseData35": {
        "type": "object",
        "properties": {
          "new_account": {
            "$ref": "#/components/schemas/NewAccount"
          }
        },
        "required": []
      },
      "CompleteEnrollmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData35"
          }
        },
        "required": []
      },
      "ResponseData36": {
        "type": "object",
        "properties": {
          "cip": {
            "$ref": "#/components/schemas/Cip"
          }
        },
        "required": []
      },
      "RunEnrollmentCipResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData36"
          }
        },
        "required": []
      },
      "ResponseData37": {
        "type": "object",
        "properties": {
          "cip_result_indicator": {
            "type": "string",
            "description": "A flag that indicates that a CIP result exists in the response"
          },
          "cip_result": {
            "$ref": "#/components/schemas/Cip"
          }
        },
        "required": []
      },
      "RunCipResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData37"
          }
        },
        "required": []
      },
      "ResponseData38": {
        "type": "object",
        "properties": {
          "new_account": {
            "$ref": "#/components/schemas/NewAccount"
          }
        },
        "required": []
      },
      "CreateVirtualCardResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData38"
          }
        },
        "required": []
      },
      "ForcePassCipResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "A structure for the response data. It can be empty but usually will contain information.",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "ResponseData39": {
        "type": "object",
        "properties": {
          "fbe_status_id": {
            "type": "string",
            "description": "Federal benefits status ID"
          }
        },
        "required": []
      },
      "CreateFbEnrollmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData39"
          }
        },
        "required": []
      },
      "UpdateFbEnrollmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "A structure for the response data. It can be empty but usually will contain information.",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "EnrollmentData1": {
        "type": "object",
        "properties": {
          "fbe_status_id": {
            "type": "string",
            "description": "ID for the FB enrollment"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "fbe_dda": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "The status of the enrollment"
          },
          "enrolled_date": {
            "type": "string",
            "format": "date"
          },
          "submitted_date": {
            "type": "string",
            "format": "date"
          },
          "noted_date": {
            "type": "string",
            "format": "date"
          },
          "product_description": {
            "type": "string"
          },
          "card_status": {
            "type": "string",
            "description": "The status of the card"
          },
          "beneficiary_ssn": {
            "type": "string",
            "description": "The SSN of the beneficiary"
          },
          "beneficiary_first_name": {
            "type": "string",
            "description": "The first name of the beneficiary"
          },
          "beneficiary_last_name": {
            "type": "string",
            "description": "The last name of the beneficiary"
          },
          "original_pmt_ref_no": {
            "type": "string"
          },
          "status_description": {
            "type": "string",
            "description": "A description of the status"
          },
          "benefit_type": {
            "type": "string"
          },
          "recipient_type": {
            "type": "string"
          }
        },
        "required": []
      },
      "ResponseData40": {
        "type": "object",
        "properties": {
          "found": {
            "type": "integer",
            "format": "int32",
            "description": "The number of federal benefit enrollments found for the account"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnrollmentData1"
            }
          }
        },
        "required": []
      },
      "GetFBEnrollmentsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData40"
          }
        },
        "required": []
      },
      "ResubmitFBEnrollmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "Feature": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of feature"
          },
          "name": {
            "type": "string",
            "description": "In a feature element, identifies the type of feature"
          },
          "value": {
            "type": "string",
            "description": "A value for the feature"
          }
        },
        "required": []
      },
      "Features": {
        "type": "object",
        "properties": {
          "feature": {
            "$ref": "#/components/schemas/Feature"
          }
        },
        "required": []
      },
      "ResponseData41": {
        "type": "object",
        "properties": {
          "features": {
            "$ref": "#/components/schemas/Features"
          }
        },
        "required": []
      },
      "GetAccountFeatureResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData41"
          }
        },
        "required": []
      },
      "ResponseData42": {
        "type": "object",
        "properties": {
          "feature_value": {
            "type": "string",
            "description": "The feature value"
          }
        },
        "required": []
      },
      "SetAccountFeatureResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData42"
          }
        },
        "required": []
      },
      "Account": {
        "type": "object",
        "properties": {
          "max_load_amount": {
            "type": "number",
            "format": "float",
            "description": "The maximum amount that can be loaded on a credit card"
          },
          "balance": {
            "type": "number",
            "format": "float",
            "description": "The amount of money in a savings or checking account"
          },
          "external_account_id": {
            "type": "string",
            "description": "An external account ID provided by the client"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "account_status": {
            "type": "string",
            "description": "The condition of the account after a modification"
          },
          "galileo_account_number": {
            "type": "string",
            "description": "Galileo generated integer account number, also known as balance ID"
          },
          "product_id": {
            "type": "string",
            "description": "Galileo generated integer"
          }
        },
        "required": []
      },
      "Accounts1": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "required": []
      },
      "ResponseData43": {
        "type": "object",
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/Accounts1"
          }
        },
        "required": []
      },
      "VerifyAccountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData43"
          }
        },
        "required": []
      },
      "Note": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the associated note entered the system"
          },
          "note_id": {
            "type": "string",
            "description": "An ID number that identifies a customer note"
          },
          "agent": {
            "type": "string",
            "description": "Identifies a person or automated software source"
          },
          "note": {
            "type": "string",
            "description": "A data structure that displays a note and/or note information"
          },
          "sticky": {
            "type": "string",
            "description": "A code that indicates if the note is permanent or not"
          }
        },
        "required": []
      },
      "Notes": {
        "type": "object",
        "properties": {
          "note": {
            "$ref": "#/components/schemas/Note"
          }
        },
        "required": []
      },
      "ResponseData44": {
        "type": "object",
        "properties": {
          "notes": {
            "description": "A data structure that contains information on one or more notes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notes"
            }
          }
        },
        "required": []
      },
      "GetCustomerNoteHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData44"
          }
        },
        "required": []
      },
      "BADJ": {
        "type": "object",
        "properties": {
          "api_flag": {
            "type": "string",
            "description": "API flag"
          },
          "email_flag": {
            "type": "string",
            "description": "A field that shows if email alerts are set or not"
          },
          "pager_flag": {
            "type": "string",
            "description": "A field that shows if pager alerts are set or not"
          }
        },
        "required": []
      },
      "BAUT": {
        "type": "object",
        "properties": {
          "api_flag": {
            "type": "string",
            "description": "API flag"
          },
          "email_flag": {
            "type": "string",
            "description": "A field that shows if email alerts are set or not"
          },
          "pager_flag": {
            "type": "string",
            "description": "A field that shows if pager alerts are set or not"
          }
        },
        "required": []
      },
      "ResponseData45": {
        "type": "object",
        "properties": {
          "BADJ": {
            "$ref": "#/components/schemas/BADJ"
          },
          "BAUT": {
            "$ref": "#/components/schemas/BAUT"
          }
        },
        "required": []
      },
      "GetAlertsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData45"
          }
        },
        "required": []
      },
      "BadMsgIds": {
        "type": "object",
        "properties": {
          "badMsgId": {
            "type": "string",
            "description": "A returned alert"
          },
          "badFlag": {
            "type": "string",
            "description": "bad flag"
          }
        },
        "required": []
      },
      "ResponseData46": {
        "type": "object",
        "properties": {
          "badMsgIds": {
            "$ref": "#/components/schemas/BadMsgIds"
          }
        },
        "required": []
      },
      "SetAlertsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData46"
          }
        },
        "required": []
      },
      "BlackOut": {
        "type": "object",
        "properties": {
          "begin_time": {
            "type": "string",
            "description": "Displays the beginning time (in 24 hour format) for an alert blackout"
          },
          "end_time": {
            "type": "string",
            "description": "Displays the time (in 24 hour format) for an alert blackout to end"
          },
          "time_zone": {
            "type": "string",
            "description": "Displays the time zone to calculate blackout between; -3=Hawaii, -2=Alaska, -1=Pacific, 0=Mountain, 1=Central, 2=Easter, 3=Atlantic"
          },
          "daylight_savings": {
            "type": "string",
            "description": "Displays if daylight savings time is observed on the alerts blackout"
          }
        },
        "required": []
      },
      "ResponseData47": {
        "type": "object",
        "properties": {
          "black_out": {
            "$ref": "#/components/schemas/BlackOut"
          }
        },
        "required": []
      },
      "GetAlertsBlackoutResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData47"
          }
        },
        "required": []
      },
      "SetAlertsBlackoutResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "A structure for the response data. It can be empty but usually will contain information.",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "Carrier": {
        "type": "object",
        "properties": {
          "carrier_id": {
            "type": "string",
            "description": "An ID number assigned to the associated carrier"
          },
          "email_gateway": {
            "type": "string",
            "description": "A domain name to be used for translating emails to text messages with various phone carriers"
          },
          "carrier_name": {
            "type": "string",
            "description": "The name of the mobile phone service carrier"
          },
          "carrier_display_name": {
            "type": "string",
            "description": "The name of the mobile phone service carrier"
          }
        },
        "required": []
      },
      "Carriers": {
        "type": "object",
        "properties": {
          "carrier": {
            "$ref": "#/components/schemas/Carrier"
          }
        },
        "required": []
      },
      "ResponseData48": {
        "type": "object",
        "properties": {
          "found": {
            "type": "integer",
            "format": "int32",
            "description": "A count of the Carriers being reported on"
          },
          "carriers": {
            "$ref": "#/components/schemas/Carriers"
          }
        },
        "required": []
      },
      "GetCarrierListResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData48"
          }
        },
        "required": []
      },
      "ResponseData49": {
        "type": "object",
        "properties": {
          "note_id": {
            "type": "string",
            "description": "An ID number that identifies a customer note."
          }
        },
        "required": []
      },
      "AddCustomerNoteResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData49"
          }
        },
        "required": []
      },
      "ResponseData50": {
        "type": "object",
        "properties": {
          "on_demand_status": {
            "type": "string",
            "description": "The status of the SMS (on demand) alert enrollment of the customer"
          },
          "mobile_phone": {
            "type": "string",
            "description": "The mobile phone number that receives alerts"
          },
          "carrier_id": {
            "type": "string",
            "description": "An ID number assigned to the associated carrier"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "prod_id": {
            "type": "string",
            "description": "Galileo generated product Id of the account"
          }
        },
        "required": []
      },
      "VerifyOnDemandAlertStatusResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData50"
          }
        },
        "required": []
      },
      "ResponseData51": {
        "type": "object",
        "properties": {
          "field_id": {
            "type": "string",
            "description": "A field identifier or key name"
          },
          "field_value": {
            "type": "string",
            "description": "A value placed into the created field"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "A time and date stamp that shows the last time the custom field was modified"
          }
        },
        "required": []
      },
      "SetUserDefinedAccountFieldResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData51"
          }
        },
        "required": []
      },
      "UserDefinedField": {
        "type": "object",
        "properties": {
          "field_id": {
            "type": "string",
            "description": "A field ID"
          },
          "field_value": {
            "type": "string",
            "description": "A value placed into the created field"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "A time and date stamp that shows the last time the custom field was modified"
          }
        },
        "required": []
      },
      "UserDefinedFields": {
        "type": "object",
        "properties": {
          "user_defined_field": {
            "$ref": "#/components/schemas/UserDefinedField"
          }
        },
        "required": []
      },
      "Account1": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "user_defined_fields": {
            "$ref": "#/components/schemas/UserDefinedFields"
          }
        },
        "required": []
      },
      "Accounts2": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account1"
          }
        },
        "required": []
      },
      "ResponseData52": {
        "type": "object",
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/Accounts2"
          }
        },
        "required": []
      },
      "GetUserDefinedAccountFieldResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData52"
          }
        },
        "required": []
      },
      "Account2": {
        "type": "object",
        "properties": {
          "prn": {
            "type": "string",
            "description": "The payment reference number"
          },
          "prod_id": {
            "type": "string",
            "description": "Unique system generated product id associated with the account"
          },
          "app_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date the account's application was submitted"
          },
          "status": {
            "type": "string",
            "description": "Indicates the status of an account"
          },
          "active_flag": {
            "type": "string",
            "description": "Indicates if an account is active or not"
          }
        },
        "required": []
      },
      "Accounts3": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account2"
          }
        },
        "required": []
      },
      "ResponseData53": {
        "type": "object",
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/Accounts3"
          }
        },
        "required": []
      },
      "GetAccountsByIdResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData53"
          }
        },
        "required": []
      },
      "Account3": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "first_name": {
            "type": "string",
            "description": "A person's first name as listed on the account"
          },
          "middle_name": {
            "type": "string",
            "description": "A person's last name as listed on the account"
          },
          "last_name": {
            "type": "string",
            "description": "A person's middle name as listed on the account"
          },
          "email": {
            "type": "string",
            "description": "The email address on a profile"
          },
          "status": {
            "type": "string",
            "description": "The status of the account"
          },
          "active": {
            "type": "string",
            "description": "Yes or no to flag an active account"
          },
          "galileo_account_number": {
            "type": "string",
            "description": "Galileo generated integer account number, also known as balance ID"
          },
          "product_id": {
            "type": "string",
            "description": "Galileo generated integer"
          },
          "group_id": {
            "type": "string",
            "description": "Integer value used for tracking the location (store, entity, etc...) where the customer was acquired. The group_id is set using the location and locationType parameters."
          },
          "application_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date an application was made to create an account"
          }
        },
        "required": []
      },
      "Accounts4": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account3"
          }
        },
        "required": []
      },
      "ResponseData54": {
        "type": "object",
        "properties": {
          "page": {
            "type": "string",
            "format": "date-time",
            "description": "The current page in the accounts list display"
          },
          "total_record_count": {
            "type": "string",
            "description": "Number of records in the accounts list display"
          },
          "number_of_pages": {
            "type": "string",
            "description": "Total number of pages in the accounts list display"
          },
          "accounts": {
            "$ref": "#/components/schemas/Accounts4"
          }
        },
        "required": []
      },
      "SearchAccountsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData54"
          }
        },
        "required": []
      },
      "ResponseData55": {
        "type": "object",
        "properties": {
          "old_overdraft_limit": {
            "type": "string",
            "description": "After an overdraft limit change, lists the previous customer overdraft limit"
          },
          "new_overdraft_limit": {
            "type": "string",
            "description": "Lists the changed customer overdraft limit"
          }
        },
        "required": []
      },
      "SetOverdraftLimitResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData55"
          }
        },
        "required": []
      },
      "ResponseData56": {
        "type": "object",
        "properties": {
          "card_holder_prod_id": {
            "type": "integer",
            "format": "int32",
            "description": "Card holder prod ID"
          },
          "funding_prod_id": {
            "type": "integer",
            "format": "int32",
            "description": "Funding prod ID"
          }
        },
        "required": []
      },
      "CreateCustomerAccountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData56"
          }
        },
        "required": []
      },
      "ResponseData57": {
        "type": "object",
        "properties": {
          "reward_id": {
            "type": "string",
            "description": "Reward ID"
          },
          "reward_program": {
            "type": "string",
            "description": "Reward program"
          }
        },
        "required": []
      },
      "EnrollRewardsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData57"
          }
        },
        "required": []
      },
      "ResponseData58": {
        "type": "object",
        "properties": {
          "active_cards": {
            "type": "integer",
            "format": "int32",
            "description": "The number of active cards"
          },
          "new_cards": {
            "type": "integer",
            "format": "int32",
            "description": "The number of new cards"
          },
          "funds_loaded": {
            "type": "number",
            "format": "float",
            "description": "Funds loaded"
          },
          "funds_spent": {
            "type": "number",
            "format": "float",
            "description": "Funds spent"
          },
          "number_accounts_created": {
            "type": "string",
            "description": "Number accounts created"
          },
          "number_accounts_limit": {
            "type": "string",
            "description": "Accounts limit"
          }
        },
        "required": []
      },
      "GetReportingInfoResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData58"
          }
        },
        "required": []
      },
      "ResponseData59": {
        "type": "object",
        "properties": {
          "provider_id": {
            "type": "integer",
            "format": "int32",
            "description": "Provider ID"
          }
        },
        "required": []
      },
      "CreateProviderResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData59"
          }
        },
        "required": []
      },
      "ResponseData60": {
        "type": "object",
        "properties": {
          "apii_user_id": {
            "type": "integer",
            "format": "int32",
            "description": "apii user ID"
          },
          "login_id": {
            "type": "integer",
            "format": "int32",
            "description": "Login id"
          },
          "trans_key": {
            "type": "number",
            "format": "float",
            "description": "transaction key"
          },
          "date_created": {
            "type": "number",
            "format": "float",
            "description": "The date of creation"
          },
          "date_expires": {
            "type": "string",
            "description": "The expiration date"
          },
          "user_defined_name": {
            "type": "string",
            "description": "user defined name"
          }
        },
        "required": []
      },
      "GenerateProviderCredentialsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData60"
          }
        },
        "required": []
      },
      "AssignProductToProviderResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "A structure for the response data. It can be empty but usually will contain information.",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "BalanceData": {
        "type": "object",
        "properties": {
          "max_load_amount": {
            "type": "number",
            "format": "float",
            "description": "The maximum load amount"
          },
          "balance": {
            "type": "number",
            "format": "float",
            "description": "Balance (or open to buy)"
          },
          "external_account_id": {
            "type": "string",
            "description": "An external account id"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "Payment reference number, and identifier for an account"
          },
          "account_status": {
            "type": "string",
            "description": "The status of the account"
          },
          "galileo_account_number": {
            "type": "string",
            "description": "The Galileo account number"
          },
          "product_id": {
            "type": "string",
            "description": "The product ID"
          }
        },
        "required": []
      },
      "ResponseData61": {
        "type": "object",
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/BalanceData"
          }
        },
        "required": []
      },
      "GetPromontoryBankListResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData61"
          }
        },
        "required": []
      },
      "ModifyOnDemandAlertStatusResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "A structure for the response data. It can be empty but usually will contain information.",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "ResponseData62": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "product_id": {
            "type": "string",
            "description": "Galileo generated product Id of the account"
          },
          "galileo_account_number": {
            "type": "string",
            "description": "Galileo generated integer account number, also known as balance ID"
          }
        },
        "required": []
      },
      "AddJointAccountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData62"
          }
        },
        "required": []
      },
      "ResponseData63": {
        "type": "object",
        "properties": {
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "first_name": {
            "type": "string",
            "description": " person's first name as listed on the account"
          },
          "last_name": {
            "type": "string",
            "description": "A person's middle name as listed on the account"
          }
        },
        "required": []
      },
      "SearchTransferAccountsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData63"
          }
        },
        "required": []
      },
      "ResponseData64": {
        "type": "object",
        "properties": {
          "validation_status": {
            "type": "string",
            "description": "The validation status"
          }
        },
        "required": []
      },
      "VerifyChLoginResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData64"
          }
        },
        "required": []
      },
      "ResponseData65": {
        "type": "object",
        "properties": {
          "card_number_last_four": {
            "type": "string",
            "description": "If the PRN is passed as accountNo, displays the selected card if the cardholder has more than one active card related to their account"
          }
        },
        "required": []
      },
      "ActivateCardResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData65"
          }
        },
        "required": []
      },
      "ResponseData66": {
        "type": "object",
        "properties": {
          "encrypted_pan": {
            "type": "string",
            "description": "The encrypted pan"
          }
        },
        "required": []
      },
      "GetEncryptedPanResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData66"
          }
        },
        "required": []
      },
      "ResponseData67": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "This token is used for submitting a PIN change request over HTTP POST to Galileo"
          }
        },
        "required": []
      },
      "GetCardPinChangeKeyResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData67"
          }
        },
        "required": []
      },
      "CommitCardPinChangeResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "VoidAddCardResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "ResponseData68": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the card"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "prod_id": {
            "type": "string",
            "description": "Galileo generated product ID of the account"
          },
          "max_load_amount": {
            "type": "string",
            "description": "The maximum amount that can be loaded on a card"
          },
          "card_id": {
            "type": "string",
            "description": "Integer identifier of the card as found in the raw dta file (RDF). Unique identifier for a PAN."
          },
          "card_number": {
            "type": "string",
            "description": "A PAN or 16 digit card number"
          },
          "expiry_date": {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the card"
          },
          "card_security_code": {
            "type": "string",
            "description": "The card verification value (cvv), is a card anti-fraud measure"
          },
          "batch_id": {
            "type": "string",
            "description": "The ID of a request for a batch of instant issue cards to be created"
          },
          "case_id": {
            "type": "string",
            "description": "Physical cards are shipped in bundles, which are divided by boxes. A case_id is a tracking number on each box and bundle."
          },
          "box_id": {
            "type": "string",
            "description": "A shipping tracking number on a box of shipped cards"
          },
          "bundle_id": {
            "type": "string",
            "description": "A shipping tracking number on the bundle of shipped cards"
          },
          "galileo_location_id": {
            "type": "string",
            "description": "A code for the location at which account was created, if applicable. Can be provided by client or Galileo"
          },
          "partner_location_id": {
            "type": "string",
            "description": "A code for the partner location"
          }
        },
        "required": []
      },
      "VerifyInstantIssueCardResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData68"
          }
        },
        "required": []
      },
      "SendNewCardPinResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "ResponseData69": {
        "type": "object",
        "properties": {
          "config_id": {
            "type": "string",
            "description": "The configuration ID"
          }
        },
        "required": []
      },
      "CreateCardImageResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData69"
          }
        },
        "required": []
      },
      "ResponseData70": {
        "type": "object",
        "properties": {
          "template_id": {
            "type": "string",
            "description": "The ID for the card template"
          }
        },
        "required": []
      },
      "CreateCardTemplateResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData70"
          }
        },
        "required": []
      },
      "ModifyCardImageResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "SetCardPinBlockResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "ResetCardPinFailCountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "MoveCardResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "Card": {
        "type": "object",
        "properties": {
          "card_id": {
            "type": "string",
            "description": "The card ID"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "Payment reference number, identifier for associated acccount"
          },
          "status": {
            "type": "string",
            "description": "The status of the card"
          },
          "card_number": {
            "type": "string",
            "description": "The card number or PAN (usually masked)"
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration date for the card"
          }
        },
        "required": []
      },
      "ResponseData71": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the order"
          },
          "prod_id": {
            "type": "string",
            "description": "A Galileo ID"
          },
          "order_id": {
            "type": "string",
            "description": "An ID for the order"
          },
          "number_of_cards": {
            "type": "integer",
            "format": "int32",
            "description": "Number of cards in the order"
          },
          "emboss_with": {
            "type": "string",
            "description": "Emboss info for cards"
          },
          "ship_to_name": {
            "type": "string",
            "description": "Shipping name for card order"
          },
          "ship_to_address": {
            "type": "string",
            "description": "Address for shipping card order"
          },
          "ship_to_city": {
            "type": "string",
            "description": "City for shipping address"
          },
          "ship_to_state_or_province": {
            "type": "string",
            "description": "State or province for shipping"
          },
          "ship_to_postal_code": {
            "type": "string",
            "description": "Postal code for shipping"
          },
          "location": {
            "type": "string",
            "description": "Location for cards"
          },
          "location_name": {
            "type": "string",
            "description": "Location name for cards"
          },
          "cards": {
            "type": "array",
            "description": "List of transfer accounts",
            "items": {
              "$ref": "#/components/schemas/Card"
            }
          }
        },
        "required": []
      },
      "GetBulkCardOrderResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData71"
          }
        },
        "required": []
      },
      "ResponseData72": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "The ID for the bulk card order"
          }
        },
        "required": []
      },
      "CreateBulkCardOrderResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData72"
          }
        },
        "required": []
      },
      "ResponseData73": {
        "type": "object",
        "properties": {
          "moved_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of cards moved"
          }
        },
        "required": []
      },
      "MoveCardInvetoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData73"
          }
        },
        "required": []
      },
      "Change": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the credit limit change was made"
          },
          "credit_limit_amount": {
            "type": "number",
            "format": "float",
            "description": "The monetary amount the credit limit was changed to"
          }
        },
        "required": []
      },
      "ResponseData74": {
        "type": "object",
        "properties": {
          "total_record_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of records found"
          },
          "changes": {
            "type": "array",
            "description": "List of credit limit changes",
            "items": {
              "$ref": "#/components/schemas/Change"
            }
          }
        },
        "required": []
      },
      "GetCreditLimitChangeHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData74"
          }
        },
        "required": []
      },
      "ResponseData75": {
        "type": "object",
        "properties": {
          "new_credit_limit": {
            "type": "number",
            "format": "float",
            "description": "The updated credit limit for the account"
          }
        },
        "required": []
      },
      "SetCreditLimitResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData75"
          }
        },
        "required": []
      },
      "Period": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "The start date for the period"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "The end date for the period"
          }
        },
        "required": []
      },
      "Billing": {
        "type": "object",
        "properties": {
          "period": {
            "$ref": "#/components/schemas/Period"
          },
          "payment_due_date": {
            "type": "string",
            "format": "date",
            "description": "Date the payment is due"
          },
          "minimum_payment": {
            "type": "number",
            "format": "float",
            "description": "The minimum payment amount"
          },
          "past_due_amount": {
            "type": "number",
            "format": "float",
            "description": "The amount that is past due"
          }
        },
        "required": []
      },
      "CreditLimit": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "description": "The credit limit amount"
          },
          "last_changed": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the credit limit was last changed"
          }
        },
        "required": []
      },
      "ResponseData76": {
        "type": "object",
        "properties": {
          "available_credit": {
            "type": "number",
            "format": "float",
            "description": "The currently available credit amount"
          },
          "outstanding_balance": {
            "type": "number",
            "format": "float",
            "description": "The outstanding balance on the account"
          },
          "billing": {
            "$ref": "#/components/schemas/Billing"
          },
          "credit_limit": {
            "$ref": "#/components/schemas/CreditLimit"
          }
        },
        "required": []
      },
      "GetCreditSummaryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData76"
          }
        },
        "required": []
      },
      "DisputeId": {
        "type": "object",
        "properties": {
          "tranId": {
            "type": "string",
            "description": "The auth ID from the disputeAuths"
          },
          "disputeId": {
            "type": "string",
            "description": "The ID of the dispute"
          }
        },
        "required": []
      },
      "ResponseData77": {
        "type": "object",
        "properties": {
          "dispute_ids": {
            "type": "array",
            "description": "List of dispute_id information",
            "items": {
              "$ref": "#/components/schemas/DisputeId"
            }
          },
          "duplicate_dispute_ids": {
            "type": "array",
            "description": "List of duplicate dispute_id information",
            "items": {
              "$ref": "#/components/schemas/DisputeId"
            }
          }
        },
        "required": []
      },
      "InitiateDisputeResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData77"
          }
        },
        "required": []
      },
      "CancelledDispute": {
        "type": "object",
        "properties": {
          "disputes_cancelled": {
            "type": "string",
            "description": "The id of the dispute that wwas cancelled"
          }
        },
        "required": []
      },
      "ResponseData78": {
        "type": "object",
        "properties": {
          "disputes_cancelled": {
            "type": "array",
            "description": "List of cancelled disputes",
            "items": {
              "$ref": "#/components/schemas/CancelledDispute"
            }
          }
        },
        "required": []
      },
      "CancelDisputeResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData78"
          }
        },
        "required": []
      },
      "UpdateDisputeResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "ResponseData79": {
        "type": "object",
        "properties": {
          "location": {
            "type": "integer",
            "format": "int32",
            "description": "Numerical value assigned to the location"
          }
        },
        "required": []
      },
      "CreateLocationResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData79"
          }
        },
        "required": []
      },
      "ResponseData80": {
        "type": "object",
        "properties": {
          "location": {
            "type": "integer",
            "format": "int32",
            "description": "Numerical value assigned to the location"
          },
          "centralBillFlag": {
            "type": "string",
            "description": "Indicates a central corporate credit aggregate billing location"
          },
          "creditLimit": {
            "type": "number",
            "format": "float",
            "description": "The credit limit for this location"
          },
          "cycleType": {
            "type": "string",
            "description": "The type of time period"
          },
          "cycleInvoice": {
            "type": "integer",
            "format": "int32",
            "description": "If cycleType is weekly, the value must be a day of the week with 0 meaning Sunday. If cycleType is monthly, the value must be a day of the month from 1 to 28. If daily, the value is to be 1."
          }
        },
        "required": []
      },
      "ModifyLocationResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData80"
          }
        },
        "required": []
      },
      "Location": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "integer",
            "format": "int32",
            "description": "The numerical value assigned to the location"
          },
          "name": {
            "type": "string",
            "description": "The name of the location"
          },
          "address1": {
            "type": "string",
            "description": "Address 1 of the location"
          },
          "address2": {
            "type": "string",
            "description": "Address 2 of the location"
          },
          "city": {
            "type": "string",
            "description": "City of the location"
          },
          "state": {
            "type": "string",
            "description": "State of the location"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal code of the location"
          },
          "parent_location_id": {
            "type": "string",
            "description": "The numerical ID of the parent location"
          },
          "provider_specified_id": {
            "type": "string",
            "description": "The partner or program identity for a location"
          },
          "centralBillFlag": {
            "type": "string",
            "description": "Indicates a central corporate credit aggregate billing location. Allows one centralized billing location for all invoice records attached to the location."
          },
          "creditLimit": {
            "type": "number",
            "format": "float",
            "description": "The credit limit for this location"
          },
          "cycleType": {
            "type": "string",
            "description": "The type of time period"
          },
          "cycleInvoice": {
            "type": "integer",
            "format": "int32",
            "description": "If cycleType is weekly, the value must be a day of the week with 0 meaning Sunday. If cycleType is monthly, the value must be a day of the month from 1 to 28. If daily, the value is to be 1."
          }
        },
        "required": []
      },
      "ResponseData81": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "description": "List of locations",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          }
        },
        "required": []
      },
      "GetLocationsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData81"
          }
        },
        "required": []
      },
      "Location1": {
        "type": "object",
        "properties": {
          "load_agents_id": {
            "type": "integer",
            "format": "int32",
            "description": "The code for the agent that ran the transaction"
          },
          "name": {
            "type": "string",
            "description": "The name of the location"
          },
          "agent_type": {
            "type": "string",
            "description": "The type of agent that ran the transaction"
          },
          "addr": {
            "type": "string",
            "description": "Street address of the location"
          },
          "city": {
            "type": "string",
            "description": "City of the location"
          },
          "state": {
            "type": "string",
            "description": "State of the location"
          },
          "zip": {
            "type": "string",
            "description": "Postal code of the location"
          },
          "phone": {
            "type": "string",
            "description": "The main phone number on the account"
          },
          "latitude": {
            "type": "number",
            "format": "float",
            "description": "Latitude coordinate of the location"
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "description": "Longitude coordinate of the location"
          }
        },
        "required": []
      },
      "ResponseData82": {
        "type": "object",
        "properties": {
          "found": {
            "type": "integer",
            "format": "int32",
            "description": "The number of location found"
          },
          "locations": {
            "type": "array",
            "description": "List of locations",
            "items": {
              "$ref": "#/components/schemas/Location1"
            }
          }
        },
        "required": []
      },
      "GetLoadLocationsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData82"
          }
        },
        "required": []
      },
      "ResponseData83": {
        "type": "object",
        "properties": {
          "referral_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the referral"
          },
          "referral_id": {
            "type": "number",
            "format": "float",
            "description": "ID of the referral"
          },
          "referral_status": {
            "type": "string",
            "description": "The status of the referral"
          },
          "referral_first_name": {
            "type": "string",
            "description": "The first name of the person being referred"
          },
          "referral_last_name": {
            "type": "string",
            "description": "The last name of the person being referred"
          },
          "referral_email": {
            "type": "string",
            "description": "The email of the person being referred"
          },
          "referrer_pmt_ref_no": {
            "type": "string",
            "description": "Payment reference number of the account associated with the referrer"
          }
        },
        "required": []
      },
      "GetCustomerReferralResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData83"
          }
        },
        "required": []
      },
      "ResponseData84": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "ID of the call"
          },
          "status": {
            "type": "string",
            "description": "Status of the call"
          },
          "status_desc": {
            "type": "string",
            "description": "Description of the status"
          },
          "max_attempts": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum amount of attempted outbound calls allowed"
          },
          "attempt_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of attempted calls"
          }
        },
        "required": []
      },
      "GetIvrCallStatusResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData84"
          }
        },
        "required": []
      },
      "ResponseData85": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "ID of the call"
          }
        },
        "required": []
      },
      "CreateIvrCallResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData85"
          }
        },
        "required": []
      },
      "ResponseData86": {
        "type": "object",
        "properties": {
          "conv_check_req_id": {
            "type": "string",
            "description": "ID associated with the convience check order"
          }
        },
        "required": []
      },
      "OrderConvChecksResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData86"
          }
        },
        "required": []
      },
      "ResponseData87": {
        "type": "object",
        "properties": {
          "check_number": {
            "type": "string",
            "description": "The check number"
          },
          "amount": {
            "type": "string",
            "description": "The amount the check is for"
          },
          "bank_routing_number": {
            "type": "string",
            "description": "The bank routing number for the check"
          },
          "bank_account_number": {
            "type": "string",
            "description": "The bank account number for the check"
          },
          "status": {
            "type": "string",
            "description": "The status of the convenience check"
          },
          "authorized_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date the check was authorized"
          },
          "authorization_code": {
            "type": "string",
            "description": "A code for the authorization"
          },
          "payee": {
            "type": "string",
            "description": "Who the check is written to"
          }
        },
        "required": []
      },
      "AuthorizeConvCheckResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData87"
          }
        },
        "required": []
      },
      "TransferAccount": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name on the transfer account"
          },
          "last_name": {
            "type": "string",
            "description": "The last name on the transfer account"
          },
          "email": {
            "type": "string",
            "description": "The email associated with the transfer account"
          },
          "nickname": {
            "type": "string",
            "description": "A nickname for the account"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "Payment reference number for the transfer account"
          },
          "status": {
            "type": "string",
            "description": "The status of the transfer account"
          }
        },
        "required": []
      },
      "ResponseData88": {
        "type": "object",
        "properties": {
          "found": {
            "type": "integer",
            "format": "int32",
            "description": "The number of transfer accounts found"
          },
          "transfer_accounts": {
            "type": "array",
            "description": "List of transfer accounts",
            "items": {
              "$ref": "#/components/schemas/TransferAccount"
            }
          }
        },
        "required": []
      },
      "GetTransferAccountsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData88"
          }
        },
        "required": []
      },
      "ApiCall": {
        "type": "object",
        "properties": {
          "gal_trans_id": {
            "type": "string",
            "description": "An ID used for internal tracking of the transaction"
          },
          "result_trans_id": {
            "type": "string",
            "description": "An ID used for internal tracking of the transaction"
          },
          "status_code": {
            "type": "string",
            "description": "The status of the original request"
          },
          "in_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The datetime the original request"
          },
          "rtoken": {
            "type": "string",
            "description": "An ID used for internal tracking of the transaction"
          }
        },
        "required": []
      },
      "ResponseData89": {
        "type": "object",
        "properties": {
          "request_transaction_id": {
            "type": "string",
            "description": "The transaction_id of the original request"
          },
          "api_calls": {
            "type": "array",
            "description": "List of API calls",
            "items": {
              "$ref": "#/components/schemas/ApiCall"
            }
          }
        },
        "required": []
      },
      "GetCallStatusResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData89"
          }
        },
        "required": []
      },
      "MCCRestriction": {
        "type": "object",
        "properties": {
          "range_start": {
            "type": "integer",
            "format": "int32",
            "description": "Starting MCC for the range"
          },
          "range_end": {
            "type": "integer",
            "format": "int32",
            "description": "Ending MCC for the range"
          },
          "online_only": {
            "type": "string",
            "description": "Indicates if the MCC should be restricted for online transactions only"
          }
        },
        "required": []
      },
      "AuthLimit": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "description": "The period of time the auth limit is over. A combination of one or more digits followed by a 'period' designator character. E.g. 15D is 15 days."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "The limit amount"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The auth count"
          },
          "category": {
            "type": "string",
            "description": "Category of the auth_limit"
          },
          "domestic_flag": {
            "type": "string",
            "description": "Y - yes domestic only. N - no international only. A - all."
          }
        },
        "required": []
      },
      "Product": {
        "type": "object",
        "properties": {
          "prod_id": {
            "type": "string",
            "description": "ID for the product"
          },
          "apy": {
            "type": "string",
            "description": "The Annual percentage yield"
          },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "base_bin": {
            "type": "string",
            "description": "The base bin for the product"
          },
          "hold_days": {
            "type": "integer",
            "format": "int32",
            "description": "Hold days for the product"
          },
          "max_pin_retries": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of pin retries"
          },
          "prog_id": {
            "type": "string",
            "description": "The program ID for the product"
          },
          "prog_name": {
            "type": "string",
            "description": "The name of the program"
          },
          "type": {
            "type": "string",
            "description": "Type of product"
          },
          "max_balance": {
            "type": "number",
            "format": "float",
            "description": "The max balance allowed"
          },
          "mcc_restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCCRestriction"
            }
          },
          "auth_limits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthLimit"
            }
          }
        },
        "required": []
      },
      "ResponseData90": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "required": []
      },
      "GetProductInfoResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData90"
          }
        },
        "required": []
      },
      "ResponseData91": {
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "description": "The ID assigned to a secure message"
          }
        },
        "required": []
      },
      "AddSecureMessageResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData91"
          }
        },
        "required": []
      },
      "Reply": {
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "description": "ID of the retrieved cardholder message"
          },
          "msg_subject": {
            "type": "string",
            "description": "The subject of a secure message"
          },
          "msg_dt": {
            "type": "string",
            "format": "date-time",
            "description": "The date a secure message was received"
          },
          "status": {
            "type": "string",
            "description": "The read status of a secure message"
          },
          "cs_agent": {
            "type": "string",
            "description": "The originator of a reply to a secure message"
          },
          "locale": {
            "type": "string",
            "description": "Language code in use locally"
          },
          "msg_text": {
            "type": "string",
            "description": "The content of a secure message"
          }
        },
        "required": []
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "msg_id": {
            "type": "string",
            "description": "ID of the retrieved cardholder message"
          },
          "msg_subject": {
            "type": "string",
            "description": "The subject of a secure message"
          },
          "msg_dt": {
            "type": "string",
            "format": "date-time",
            "description": "The date a secure message was received"
          },
          "status": {
            "type": "string",
            "description": "The read status of a secure message"
          },
          "response_dt": {
            "type": "string",
            "format": "date-time",
            "description": "The date of a response to the secure message"
          },
          "locale": {
            "type": "string",
            "description": "Language code in use locally"
          },
          "msg_text": {
            "type": "string",
            "description": "The content of a secure message"
          },
          "replies": {
            "type": "array",
            "description": "List of replies to a secure message",
            "items": {
              "$ref": "#/components/schemas/Reply"
            }
          }
        },
        "required": []
      },
      "ResponseData92": {
        "type": "object",
        "properties": {
          "conversations": {
            "type": "array",
            "description": "List of information about secure messaging conversations",
            "items": {
              "$ref": "#/components/schemas/Conversation"
            }
          }
        },
        "required": []
      },
      "GetSecureMessageResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData92"
          }
        },
        "required": []
      },
      "AchAccount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ACH account being displayed"
          },
          "ach_account_id": {
            "type": "string",
            "description": "A unique ID for an ACH account"
          },
          "status": {
            "type": "string",
            "description": "The status of the ACH account being reported on"
          },
          "routing_no": {
            "type": "string",
            "description": "A number used to associate a transaction with an institution"
          },
          "account_no": {
            "type": "string",
            "description": "A number use to associate a transaction with an account"
          },
          "type": {
            "type": "string",
            "description": "The type of record being displayed"
          }
        },
        "required": []
      },
      "ResponseData93": {
        "type": "object",
        "properties": {
          "found": {
            "type": "integer",
            "format": "int32",
            "description": "The number of ACH accounts found"
          },
          "ach_accounts": {
            "type": "array",
            "description": "List of ACH accounts",
            "items": {
              "$ref": "#/components/schemas/AchAccount"
            }
          }
        },
        "required": []
      },
      "GetAchAccountsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData93"
          }
        },
        "required": []
      },
      "ResponseData94": {
        "type": "object",
        "properties": {
          "ach_account_id": {
            "type": "string",
            "description": "A unique ID for an ACH account"
          }
        },
        "required": []
      },
      "ModifyAchAccountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData94"
          }
        },
        "required": []
      },
      "ResponseData95": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ACH account"
          },
          "ach_account_id": {
            "type": "string",
            "description": "A unique ID for an ACH account"
          }
        },
        "required": []
      },
      "AddAchAccountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData95"
          }
        },
        "required": []
      },
      "ResponseData96": {
        "type": "object",
        "properties": {
          "ach_account_id": {
            "type": "string",
            "description": "ID assigned to ACH account"
          }
        },
        "required": []
      },
      "RemoveAchAccountResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData96"
          }
        },
        "required": []
      },
      "ResponseData97": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "format": "float",
            "description": ""
          }
        },
        "required": []
      },
      "CancelAchTransactionResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData97"
          }
        },
        "required": []
      },
      "ResponseData98": {
        "type": "object",
        "properties": {
          "found": {
            "type": "integer",
            "format": "int32",
            "description": "The number of transactions found"
          },
          "transactions": {
            "type": "array",
            "description": "List of transactions",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        },
        "required": []
      },
      "GetAchTransHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData98"
          }
        },
        "required": []
      },
      "ResponseData99": {
        "type": "object",
        "properties": {
          "sweep_off_end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The sweep off date"
          }
        },
        "required": []
      },
      "GetSweepOffResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData99"
          }
        },
        "required": []
      },
      "ResponseData100": {
        "type": "object",
        "properties": {
          "sweep_off_end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The sweep off end date"
          }
        },
        "required": []
      },
      "SetSweepOffResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData100"
          }
        },
        "required": []
      },
      "ResponseData101": {
        "type": "object",
        "properties": {
          "top_up_end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The top up date"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Top up Amount"
          }
        },
        "required": []
      },
      "GetTopUpResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData101"
          }
        },
        "required": []
      },
      "ResponseData102": {
        "type": "object",
        "properties": {
          "top_up_end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The top up end date"
          }
        },
        "required": []
      },
      "SetTopUpResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData102"
          }
        },
        "required": []
      },
      "ResponseData103": {
        "type": "object",
        "properties": {
          "prod_id": {
            "type": "string",
            "description": "The product ID"
          },
          "identity_type": {
            "type": "string",
            "description": "The ID type to be used"
          }
        },
        "required": []
      },
      "ModifyHowToIdentifyMerchantsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData103"
          }
        },
        "required": []
      },
      "ResponseData104": {
        "type": "object",
        "properties": {
          "new_balance": {
            "type": "number",
            "description": "The balance on the account after the transaction"
          },
          "hold_id": {
            "type": "integer",
            "format": "int32",
            "description": "The ID associated with the hold"
          }
        },
        "required": []
      },
      "CreateHoldResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData104"
          }
        },
        "required": []
      },
      "ResponseData105": {
        "type": "object",
        "properties": {
          "new_balance": {
            "type": "number",
            "description": "The balance on the account after the transaction"
          },
          "new_expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "The new expiration date associated with the hold"
          }
        },
        "required": []
      },
      "ExpireHoldResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData105"
          }
        },
        "required": []
      },
      "ResponseData106": {
        "type": "object",
        "properties": {
          "new_balance": {
            "type": "number",
            "description": "The balance on the account after the transaction"
          },
          "old_balance": {
            "type": "number",
            "description": "The balance on the account before the transaction"
          },
          "fee_amount": {
            "type": "number",
            "description": "Numeric amount"
          },
          "payment_trans_id": {
            "type": "integer",
            "format": "int32",
            "description": "Galileo generated card payment or load transaction integer ID"
          },
          "transaction_id": {
            "type": "string",
            "description": "A number that represents transaction"
          }
        },
        "required": []
      },
      "CreatePaymentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData106"
          }
        },
        "required": []
      },
      "ResponseData107": {
        "type": "object",
        "properties": {
          "new_balance": {
            "type": "number",
            "description": "The balance on the account after the reversal is processed"
          },
          "old_balance": {
            "type": "number",
            "description": "The balance on the account before the reversal is processed"
          },
          "fee_amount": {
            "type": "number",
            "description": "Numeric amount of the fee"
          },
          "fee_trans_id": {
            "type": "integer",
            "format": "int32",
            "description": "Galileo generated fee transaction integer ID"
          },
          "transaction_id": {
            "type": "string",
            "description": "A number that represents transaction"
          }
        },
        "required": []
      },
      "AssessFeeResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData107"
          }
        },
        "required": []
      },
      "ResponseData108": {
        "type": "object",
        "properties": {
          "new_balance": {
            "type": "number",
            "description": "The balance on the account after the reversal is processed"
          },
          "old_balance": {
            "type": "number",
            "description": "The balance on the account before the reversal is processed"
          },
          "fee_trans_id": {
            "type": "integer",
            "format": "int32",
            "description": "Galileo generated fee transaction integer ID"
          },
          "transaction_id": {
            "type": "string",
            "description": "A number that represents transaction"
          }
        },
        "required": []
      },
      "ReverseFeeResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData108"
          }
        },
        "required": []
      },
      "ResponseData109": {
        "type": "object",
        "properties": {
          "new_balance": {
            "type": "number",
            "description": "The balance on the account after the transaction"
          },
          "old_balance": {
            "type": "number",
            "description": "The balance on the account before the transaction"
          },
          "adjustment_trans_id": {
            "type": "integer",
            "format": "int32",
            "description": "Galileo generated adjustment transaction ID"
          },
          "transaction_id": {
            "type": "string",
            "description": "A number that represents transaction"
          }
        },
        "required": []
      },
      "CreateAdjustmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData109"
          }
        },
        "required": []
      },
      "ResponseData110": {
        "type": "object",
        "properties": {
          "new_balance": {
            "type": "number",
            "description": "The balance on the account after the reversal is processed"
          },
          "old_balance": {
            "type": "number",
            "description": "The balance on the account before the reversal is processed"
          },
          "adjustment_trans_id": {
            "type": "integer",
            "format": "int32",
            "description": "Galileo generated adjustment transaction ID"
          },
          "transaction_id": {
            "type": "string",
            "description": "A number that represents transaction"
          }
        },
        "required": []
      },
      "ReverseAdjustmentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData110"
          }
        },
        "required": []
      },
      "ResponseData111": {
        "type": "object",
        "properties": {
          "new_balance": {
            "type": "number",
            "description": "The balance on the account after the reversal is processed"
          },
          "old_balance": {
            "type": "number",
            "description": "The balance on the account before the reversal is processed"
          },
          "fee_event_id": {
            "type": "integer",
            "format": "int32",
            "description": "Galileo generated fee transaction ID"
          },
          "transaction_id": {
            "type": "string",
            "description": "A number that represents transaction"
          },
          "fee_reversal_amount": {
            "type": "number",
            "description": "The amount of the reversed fee"
          }
        },
        "required": []
      },
      "ReversePaymentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData111"
          }
        },
        "required": []
      },
      "Hold": {
        "type": "object",
        "properties": {
          "hold_id": {
            "type": "string",
            "description": "A unique ID for the hold to be expired"
          },
          "create_dt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the hold was created"
          },
          "expiry_dt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the hold will expire"
          },
          "source_id": {
            "type": "string",
            "description": "A code unique to the source of the activity (such as fees, adjustments, etc.)"
          },
          "change_dt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the hold was last modified or created"
          },
          "hold_type": {
            "type": "string",
            "description": "The type of hold"
          },
          "ext_id": {
            "type": "string",
            "description": "An external identifier associate with the hold"
          },
          "dscr": {
            "type": "string",
            "description": "The description associated with the hold"
          },
          "originating_system_id": {
            "type": "string",
            "description": "The process that created the hold"
          },
          "agent_id": {
            "type": "string",
            "description": "The id for the agent that created the hold"
          },
          "amount": {
            "type": "number",
            "description": "The financial sum being held"
          },
          "xid": {
            "type": "string",
            "description": "The transaction ID associated with the hold"
          },
          "expiring_system_id": {
            "type": "string",
            "description": "The process that expired the hold"
          },
          "expiring_agent_id": {
            "type": "string",
            "description": "The id for the agent that expired the hold"
          }
        },
        "required": []
      },
      "ResponseData112": {
        "type": "object",
        "properties": {
          "active_holds": {
            "type": "array",
            "description": "List of active holds",
            "items": {
              "$ref": "#/components/schemas/Hold"
            }
          },
          "expired_holds": {
            "type": "array",
            "description": "List of expired holds",
            "items": {
              "$ref": "#/components/schemas/Hold"
            }
          }
        },
        "required": []
      },
      "GetHoldHistoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData112"
          }
        },
        "required": []
      },
      "UpdatePaymentResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "ResponseData113": {
        "type": "object",
        "properties": {
          "new_balance": {
            "type": "number",
            "description": "The balance on the account after the transaction posted"
          },
          "old_balance": {
            "type": "number",
            "description": "The balance on the account before the transaction posted"
          }
        },
        "required": []
      },
      "ReverseAccountTransferResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData113"
          }
        },
        "required": []
      },
      "UpdatePendingMerchantCreditResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "PendingMerchantCredit": {
        "type": "object",
        "properties": {
          "settle_id": {
            "type": "string",
            "description": "ID that has been assigned a transaction that has been settled"
          },
          "settle_ts": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp for settled transaction"
          },
          "amount": {
            "type": "number",
            "description": "The amount of pending merchant credit"
          },
          "description": {
            "type": "string",
            "description": "The description of a pending merchant credit"
          },
          "pmt_ref_no": {
            "type": "string",
            "description": "A Galileo generated account number"
          },
          "card_id": {
            "type": "string",
            "description": "ID of the card as found in the RDF"
          },
          "first_name": {
            "type": "string",
            "description": "A person's first name as listed on the account"
          },
          "last_name": {
            "type": "string",
            "description": "A person's last name as listed on the account"
          }
        },
        "required": []
      },
      "ResponseData114": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "description": "The page number retrieved in the context of recordset paging"
          },
          "total_record_count": {
            "type": "number",
            "description": "The number of records in the display"
          },
          "number_of_pages": {
            "type": "number",
            "description": "Total number of pages in the accounts list display"
          },
          "pending_merchant_credits": {
            "type": "array",
            "description": "List of information on pending merchant credits",
            "items": {
              "$ref": "#/components/schemas/PendingMerchantCredit"
            }
          }
        },
        "required": []
      },
      "GetPendingMerchantCreditsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData114"
          }
        },
        "required": []
      },
      "ResponseData115": {
        "type": "object",
        "properties": {
          "deposit_transaction_id": {
            "type": "string",
            "description": "A unique system generated ID number that identifies the deposit"
          },
          "action_type": {
            "type": "string",
            "description": "'P' and 'R' (Post and Return). Post = pending (ACH) deposit, Return = return the pending deposit"
          },
          "category_type": {
            "type": "string",
            "description": "A = Approve; W = Watch; D = Decline"
          },
          "category_code": {
            "type": "string",
            "description": "COF=Questionable IAT Country; CRN= Unauthorized IAT Country; L=Large Xfer Amount &gt; 4000; LRG=Large Xfer 4000; NAME=Name miss match; TAX=Tax"
          }
        },
        "required": []
      },
      "ModifyPendingDepositStatusResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData115"
          }
        },
        "required": []
      },
      "Category": {
        "type": "object",
        "properties": {
          "category_code": {
            "type": "string",
            "description": "The category the transaction falls within"
          },
          "description": {
            "type": "string",
            "description": "A plain text description of a pending deposit"
          },
          "status": {
            "type": "string",
            "description": "Status of the deposit"
          },
          "ach_source_id": {
            "type": "string",
            "description": "A document or record that supports the transaction"
          }
        },
        "required": []
      },
      "PendingDeposit": {
        "type": "object",
        "properties": {
          "amt": {
            "type": "number",
            "format": "float",
            "description": "A fee or transaction charge"
          },
          "in_ts": {
            "type": "string",
            "format": "date-time",
            "description": "An initial timestamp for the creation of the record"
          },
          "effective_dt": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp for an ACH record that specifies when the payment posts"
          },
          "name": {
            "type": "string",
            "description": "The name of the account receiving the flagged deposit"
          },
          "xid": {
            "type": "string",
            "description": "An account ID that can be used instead of the PAN or other restricted information"
          },
          "prog_id": {
            "type": "string",
            "description": "An ID number unique to a program"
          },
          "batch_hdr": {
            "type": "string",
            "description": "A record of a batch of transactions"
          },
          "dest_acct_no": {
            "type": "string",
            "description": "The destination account for a flagged pending deposit"
          },
          "source_inst_id": {
            "type": "string",
            "description": "An ID (Usually a bank routing number) for the institution that originated the deposit"
          },
          "source_inst_name": {
            "type": "string",
            "description": "The name of the institution that originated the deposit"
          },
          "status": {
            "type": "string",
            "description": "The status of the deposit"
          },
          "trans_type": {
            "type": "string",
            "description": "Transaction type"
          },
          "addenda_rec": {
            "type": "string",
            "description": "Supplemental information to identify a deposit"
          },
          "categories": {
            "type": "array",
            "description": "List containing information about categories",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "ach_trans_id": {
            "type": "string",
            "description": "A unique ID for an ACH transaction"
          }
        },
        "required": []
      },
      "ResponseData116": {
        "type": "object",
        "properties": {
          "total_record_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of records in the accounts list display"
          },
          "pending_deposit_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of pending deposits in the response"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The page number to be retrieved in the context of recordset paging"
          },
          "number_of_pages": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of pages in the accounts list display"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the pending deposits data range"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the pending deposits data range"
          },
          "pending_deposits": {
            "type": "array",
            "description": "List of information on pending deposits",
            "items": {
              "$ref": "#/components/schemas/PendingDeposit"
            }
          }
        },
        "required": []
      },
      "GetPendingDepositsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData116"
          }
        },
        "required": []
      },
      "ExpireAuthorizationResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "type": "array",
            "description": "Response data",
            "items": {
              "default": null
            }
          }
        },
        "required": []
      },
      "Biller1": {
        "type": "object",
        "properties": {
          "rpps_biller_id": {
            "type": "string",
            "description": "Remote Payment and Presentment Service provider ID"
          },
          "biller_name": {
            "type": "string",
            "description": "Name of the biller"
          },
          "biller_address1": {
            "type": "string",
            "description": "Street and residence number on the account"
          },
          "biller_address2": {
            "type": "string",
            "description": "Additional address information on the account"
          },
          "biller_city": {
            "type": "string",
            "description": "City for address information"
          },
          "biller_state": {
            "type": "string",
            "description": "State for address information"
          },
          "biller_zip": {
            "type": "string",
            "description": "Zip code for address information"
          },
          "biller_account_no_patterns": {
            "type": "array",
            "description": "The account number patterns that are used by the biller. See the Account Patterns Legend below",
            "items": {
              "type": "string"
            }
          }
        },
        "required": []
      },
      "ResponseData117": {
        "type": "object",
        "properties": {
          "billers": {
            "type": "array",
            "description": "List of transfer accounts",
            "items": {
              "$ref": "#/components/schemas/Biller1"
            }
          }
        },
        "required": []
      },
      "SearchBillerDirectoryResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData117"
          }
        },
        "required": []
      },
      "ScheduledPayment": {
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string",
            "description": "The account number for the scheduled payment"
          },
          "address_1": {
            "type": "string",
            "description": "Address for the payment"
          },
          "address_2": {
            "type": "string",
            "description": "Additional address info for the payment"
          },
          "biller_id": {
            "type": "string",
            "description": "The biller ID associated with the payment"
          },
          "city": {
            "type": "string",
            "description": "City for the address info"
          },
          "name": {
            "type": "string",
            "description": "Name for the schedule payment"
          },
          "nickname": {
            "type": "string",
            "description": "A nickname for the payment"
          },
          "phone": {
            "type": "string",
            "description": "Phone associated with the scheduled payment"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code for the address info"
          },
          "state_province": {
            "type": "string",
            "description": "State or province for the address info"
          },
          "type": {
            "type": "string",
            "description": "The bill payment type"
          },
          "frequency_type": {
            "type": "string",
            "description": "How frequent the payment is scheduled"
          },
          "next_date": {
            "type": "string",
            "format": "date",
            "description": "The next date for which a payment is scheduled"
          },
          "stop_date": {
            "type": "string",
            "format": "date",
            "description": "Payments will not be scheduled after this date"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "The amount of the payment"
          }
        },
        "required": []
      },
      "ResponseData118": {
        "type": "object",
        "properties": {
          "found": {
            "type": "integer",
            "format": "int32",
            "description": "The number of scheduled payments found"
          },
          "scheduled_payments": {
            "type": "array",
            "description": "List of scheduled payments",
            "items": {
              "$ref": "#/components/schemas/ScheduledPayment"
            }
          }
        },
        "required": []
      },
      "GetScheduledBillPaymentsResponse": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "integer",
            "format": "int32",
            "description": "The status of the response"
          },
          "status": {
            "type": "string",
            "description": "The condition of a process or response"
          },
          "processing_time": {
            "type": "number",
            "format": "float",
            "description": "The time elapsed in processing the transaction"
          },
          "echo": {
            "$ref": "#/components/schemas/Echo"
          },
          "system_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A system generated timestamp"
          },
          "response_data": {
            "$ref": "#/components/schemas/ResponseData118"
          }
        },
        "required": []
      }
    }
  },
  "x-explorer-enabled": true,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": [
    "curl",
    "node",
    "ruby",
    "javascript",
    "python"
  ]
}